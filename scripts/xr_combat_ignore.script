--[[------------------------------------------------------------------------------------------------------------------
Игнорирование врагов
Чугай Александр
--------------------------------------------------------------------------------------------------------------------]]

class "action_process_enemy"

function action_process_enemy:__init( obj, storage )
	self.object = obj
	self.st     = storage
end

function action_process_enemy:enemy_callback( obj, enemy )
	if obj:critically_wounded() then
		return true
	end

	local npc_storage = db.storage[obj:id()]
	local st = self.st or npc_storage.combat_ignore
	if not st or not st.enabled then
		return true
	end

	local overrides = npc_storage.overrides

	npc_storage.enemy = enemy

	if overrides and
	   overrides.combat_ignore and
	   db_actor and
	   xr_logic.pick_section_from_condlist( db_actor, obj, overrides.combat_ignore.condlist ) ~= nil
	then
		obj:enable_memory_object( enemy, false )
		return false
	end

	return true
end

function action_process_enemy:hit_callback(obj, amount, local_direction, who, bone_index)
	if who == nil then
		return
	end

	if amount == 0 then
		-- Кто-то стрельнул в воздух
		return
	end

	if who:id() == db_actor_id then
		local overrides = db.storage[obj:id()].overrides
		if not overrides or not overrides.combat_ignore_keep_when_attacked then
			self.st.enabled = false
		end
	end
end

----------------------------------------------------------------------------------------------------------------------
-- binder
----------------------------------------------------------------------------------------------------------------------
function add_to_binder_q( npc, storage )
	storage.action = action_process_enemy( npc, storage )
end

function set_combat_ignore_checker( npc, ini, scheme, section )
	local st = xr_logic.assign_storage_and_bind( npc, ini, scheme, section )
	st.enabled = true

	-- Подписываемся на hit callback-и:
	st.actions[ st.action ] = true
end

function disable_scheme( npc, scheme )
	npc:set_enemy_callback()

	-- Отписываемся от hit callback. Это делать обязательно, потому что иначе при переключении на другой набор
	-- схем, в котором нет перехвата боя, продолжится вызываться callback в старом подписанном action-е.
	local st = db.storage[npc:id()][scheme]
	if st then
		xr_logic.unsubscribe_action_from_events(npc, st, st.action)
	end
end
