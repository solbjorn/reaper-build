-- ----------------------------------------------------------------------------------------------------
-- Общие функции
-- ----------------------------------------------------------------------------------------------------

punch_recovery_time = 30

local math_random = math.random

function disable_ui_elements(actor, npc, p)
    for i, v in pairs(p) do
        if v == "all" then
            Actor:hide_weapon()
            level.disable_input()
            level.hide_indicators()
            break
        elseif v == "weapon" then
            Actor:hide_weapon()
        elseif v == "input" then
            level.disable_input()
        elseif v == "hud" then
            level.hide_indicators()
        end
    end
end

function enable_ui_elements(actor, npc, p)
    for i, v in pairs(p) do
        if v == "all" then
            level.show_indicators()
            level.enable_input()
            Actor:restore_weapon()
            break
        elseif v == "hud" then
            level.show_indicators()
        elseif v == "input" then
            level.enable_input()
        elseif v == "weapon" then
            Actor:restore_weapon()
        end
    end
end

function disable_ui()
    Actor:hide_weapon()
    level.disable_input()
    level.hide_indicators()
end

function enable_ui()
    level.show_indicators()
    level.enable_input()
    Actor:restore_weapon()
end

function run_cam_effector(actor, npc, p)
    if p[1] then
        local loop, num = false, (1000 + math_random(100))

        if p[2] and type(p[2]) == "number" and p[2] > 0 then
            num = p[2]
        end

        if p[3] and p[3] == "true" then
            loop = true
        end

        --level.add_pp_effector(p[1] .. ".ppe", num, loop)
      level.add_cam_effector("camera_effects\\" .. p[1] .. ".anm", num, loop, "")
    end
end

function stop_cam_effector(actor, npc, p)
    if p[1] and type(p[1]) == "number" and p[1] > 0 then
        level.remove_cam_effector(p[1])
    end
end

function run_postprocess(actor, npc, p)
    if p[1] then
        local loop, num = false, (2000 + math_random(100))

        if p[2] and type(p[2]) == "number" and p[2] > 0 then
            num = p[2]
        end

        if p[3] and p[3] == "true" then
            loop = true
        end

        level.add_pp_effector(p[1] .. ".ppe", num, loop)
    end
end

function stop_postprocess(actor, npc, p)
    if p[1] and type(p[1]) == "number" and p[1] > 0 then
        level.remove_pp_effector(p[1])
    end
end

function run_tutorial(actor, npc, p)
  game.start_tutorial(p[1])
end
function run_tutorial_if_newbie(actor, npc, p)
  if has_alife_info("esc_trader_newbie") then
    game.start_tutorial(p[1])
  end
end

function teleport_actor(actor, npc, p)
  local point = patrol(p[1])
  local look = patrol(p[2])

  Actor:set_actor_position(point:point(0))
  local dir = look:point(0):sub(point:point(0))
  Actor:set_actor_direction(-dir:getH())
end

-----------------------------------------------------------------------------

function drop_actor_inventory(actor, npc, p)
	if not p[1] then return end
	local drop_point = patrol(p[1]):point(0)

	Actor:inventory_for_each(function(item)
		Actor:drop_item_and_teleport(item, drop_point)
	end)
end

-- FIXME: drop_npc_inventory doesn't work
function drop_npc_inventory(actor, npc, p)
	if not p[1] then return end
	local drop_point = patrol(p[1]):point(0)

	npc:inventory_for_each(function(item)
		npc:drop_item_and_teleport(item, drop_point)
	end)
end

function drop_npc_item(actor, npc, p)
    if p[1] then
        local item = npc:object(p[1])
        if item then
        npc:drop_item(item)
    end
    end
end

function drop_npc_items(actor, npc, p)
    local item = 0
  for i, v in pairs(p) do
        item = npc:object(v)
        if item then
        npc:drop_item(item)
        end
    end
end

function give_item(actor, npc, p)
    if p[1] then
        AI:create(p[1], npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
    end
end

function give_items(actor, npc, p)
    local pos, lv_id, gv_id, npc_id = npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id()
  for i, v in pairs(p) do
        AI:create(v, pos, lv_id, gv_id, npc_id)
    end
end

function respawner_spawn(actor, npc, p)
    if p[1] then
    se_respawn.spawn(p[1])
    end
end

function play_particle_on_path(actor, npc, p)
    local name = p[1]
    local path = p[2]
    local point_prob = p[3]
    if name == nil or path == nil then
        return
    end

    if point_prob == nil then
        point_prob = 100
    end

    local path = patrol(path)
    local count = path:count()
    for a = 0,count-1,1 do
        if math_random(100) <= point_prob then
            particles_object(name):play_at_pos(path:point(a))
        end
    end
end

-----------------------------------------------------------------------------
function monster_berserk(actor, npc)
    npc:berserk()
end

function activate_bolt(actor, npc)
  Actor:activate_slot(5)
end

--[[
send_tip(news_id:sender:sender_id)
    1. news_id
    2. sender*
    3. sender_id*
    * - not necessary
--]]
function send_tip(actor, npc, p)
	news_manager.send_tip(p[1], nil, p[2], nil, p[3])
end

--[[
Дать сталкеру небольшой пинок. Например чтоб скинуть его с возвышения.
параметры: actor, npc, p[direction,bone,power,impulse,reverse=false]
    1. direction - если строка, то считается, что это имя пути и в сторону
        первой точки производится толчек. Если же это число, то оно
        рассматривается как story_id персонажа от которого должен поступить хит.
    2. bone - строка. Имя кости, по которой наносится удар.
    3. power - сила удара
    4. impulse - импульс
    5. reverse (true/false) - изменение направления удара. по умолчанию false
--]]
function hit_npc(actor, npc, p)
  local h = hit()
  local rev = p[5] and p[5] == 'true'
  h.draftsman = npc
  h.type = hit.wound
  if type(p[1]) == 'number' then
    local hitter = level_object_by_sid(p[1])
    if not hitter then return end
      if rev then
          h.draftsman = hitter
        h.direction = hitter:position():sub(npc:position())
      else
        h.direction = npc:position():sub(hitter:position())
      end
  else
      if rev then
          h.draftsman = nil
        h.direction = npc:position():sub(patrol(p[1]):point(0))
      else
        h.direction = patrol(p[1]):point(0):sub(npc:position())
      end
  end
  h:bone(p[2])
  h.power = p[3]
  h.impulse = p[4]
  npc:hit(h)
end

--[[
Дать обьекту, заданному story_id, хит.
параметры: actor, npc, p[sid,bone,power,impulse,hit_src=npc:position()]
    1. sid - story_id обьекта, по которому наносится хит.
    2. bone - строка. Имя кости, по которой наносится удар.
    3. power - сила удара
    4. impulse - импульс
    5. hit_src - если число, то рассматривается как story_id обьекта, со стороны
        которого наносится хит (он же является и инициатором хита), иначе это
        точка (waypoint), из которой по объекту наносится хит.
        Если не задано, то берется позиция обьекта, из которого была вызвана
        данная функция.
--]]
function hit_obj(actor, npc, p)
  local h = hit()
  local obj = level_object_by_sid(p[1])
  local sid = nil

  if not obj then
    return
  end

  h:bone(p[2])
  h.power = p[3]
  h.impulse = p[4]

  if p[5] then
      sid = tonumber(p[5])
      if sid then
          sid = level_object_by_sid(sid)
          if sid then
              h.direction = vector():sub(sid:position(), obj:position())
          end
      end
      if not sid then
          h.direction = vector():sub(patrol(p[5]):point(0), obj:position())
      end
  else
      h.direction = vector():sub(npc:position(), obj:position())
  end

  h.draftsman = sid or npc
  h.type = hit.wound
  obj:hit(h)
end

--[[
Дать сталкеру небольшой пинок после смерти. Аналогично предыдущему, только направление хита теперь
вычисляется через убийцу. Поэтому параметра direction нет.
параметры: actor, npc, p[bone,power,impulse]
FIXME: killer:position() isn't working
--]]
function hit_by_killer(actor, npc, p)
  if not npc then return end
  local t = db.storage[npc:id()].death
  if t == nil or t.killer == -1 then return end
  local killer = db.storage[t.killer]
  if killer == nil then return end
  local p1, p2
  p1 = npc:position()
  p2 = killer:position()
  local h = hit()
  h.draftsman = npc
  h.type = hit.wound
  h.direction = utils.vector_copy_by_val(p1):sub(p2)
  h.bone = p[1]
  h.power = p[2]
  h.impulse = p[3]
  npc:hit(h)
end

function set_friends(actor, npc, p)
    local npc1
  for i, v in pairs(p) do
    npc1 = level_object_by_sid(v)
    if npc1 and npc1:alive() then
      npc:set_relation(game_object.friend, npc1)
      npc1:set_relation(game_object.friend, npc)
    end
  end
end

function set_enemies(actor, npc, p)
    local npc1
  for i, v in pairs(p) do
    npc1 = level_object_by_sid(v)
    if npc1 and npc1:alive() then
      npc:set_relation(game_object.enemy, npc1)
      npc1:set_relation(game_object.enemy, npc)
    end
  end
end

-- играть звук в голове актёра
function play_snd(actor, npc, p)
  if p[1] then
    local snd_obj = xr_sound.get_safe_sound_object(p[1])
    snd_obj:play_no_feedback(Actor, sound_object.s2d, p[2] or 0, xyz(), 1.0)
  end
end

-- играть звук от указанного объекта
function play_snd_from_obj(actor, npc, p)
  if p[1] and p[2] then
    local snd_obj = xr_sound.get_safe_sound_object(p[2])
    local obj     = level_object_by_sid(p[1])
        if obj ~= nil then
    snd_obj:play_no_feedback(obj, sound_object.s3d, 0, obj:position(), 1.0)
    end
  end
end

-- играть звук от указанного объекта
function play_snd_now(actor, npc, p)
  xr_sound.set_sound_play(npc, p[1])
end

-- прибавить к указанному счётчику актёра 1
function inc_counter(actor, npc, p)
	if p[1] then
		set_value(p[1], get_value(p[1], 0) + 1)
	end
end

function dec_counter(actor, npc, p)
	if p[1] then
		set_value(p[1], get_value(p[1], 0) - 1)
	end
end

-- переключает камеру на монстра или на актёра
function alien_control( actor, npc, p )
  npc:set_alien_control( p[1] == "true" )
end

-- сделать актёра врагом персонажам, которые в онлайне под указанным смартом
function set_gulag_enemy_actor( actor, npc, p )
  if p[1] then
    xr_gulag.setGulagEnemy(p[1], Actor)
  end
end

-- принудительное обновление смарта. Использовать только в КРАЙНИХ случаях!!!
-- каждое использование согласовывать со мной. Чугай.
function smart_terrain_force_update(actor, npc, p)
  if p[1] then
    local gulag = xr_gulag.get_gulag(p[1])

    if gulag then
      gulag.smrttrn:update()
    end
  end
end

------------------------------------------------------------------------------------------------------------------------

-- постпроцесс и влияние удара в морду
function actor_punch(npc)
	if Actor:position():distance_to_sqr(npc:position()) > 4 then
		return
	end

	reap.drop_weapon(true)
	set_inactivate_input_time(punch_recovery_time)
	local snd_obj = xr_sound.get_safe_sound_object([[affects\hit_fist]])
	snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, xyz(), 1.0)

	local h = hit()
	h.draftsman = Actor
	h.type = hit.strike
	h.direction = xyz()
	h:bone("pelvis")
	h.power = 0.25
	h.impulse = 0
	Actor:hit(h)

	level.add_cam_effector("camera_effects\\fusker.anm", 999, false, "")
	level.add_pp_effector("amk_shoot.ppe", 2011, false)
	amk_offline_alife.clear_be_enemy(npc:id())
end

-- Принудительное усыпание игрока на радаре.
function force_actor_sleep(npc)
  Actor:actor_sleep(24, 0)
end

-- забывание обиды
function clearAbuse(npc)
  xr_abuse.clear_abuse(npc)
end

---Выключение динамической лампочки (hanging_lamp)
function turn_off(actor, npc, p)
  local obj = level_object_by_sid(p[1])

  if not obj then
    abort("TURN_OFF [%s]. Target object does not exist", npc:name())
    return
  end
  obj:get_hanging_lamp():turn_off()
end
function turn_off_object(actor, npc)
  npc:get_hanging_lamp():turn_off()
end

---Включение динамической лампочки (hanging_lamp)
function turn_on(actor, npc, p)
  local obj = level_object_by_sid(p[1])

  if not obj then
    abort("TURN_ON [%s]. Target object does not exist", npc:name())
    return
  end
  obj:get_hanging_lamp():turn_on()
end
function turn_on_object(actor, npc)
  npc:get_hanging_lamp():turn_on()
end

------------------------------------------------------------------------------------------------

-- Кто-то из участников сценки вступил в бой - теперь нужно пообижать всех на всех
function gar_dm_bandits_fight(actor, npc)
  local novice = level_object_by_sid(104)
  if not novice or not novice:alive() then
    return
  end

	local ignore_actor = distance_between(Actor, novice) > 25
	local bandits = {
		101,
		102,
		103
	}
	for i, sid in ipairs(bandits) do
		local bandit = level_story_object(sid)
		if bandit then
			novice:set_relation(game_object.enemy, bandit)
			if not ignore_actor then
				bandit:set_relation(game_object.enemy, Actor)
				bandit:set_character_community("bandit", 0, 0)
			end
			bandit:set_relation(game_object.enemy, novice)
		end
	end
end

function gar_dm_bandit_demand(actor, npc)
	for i = 1, 3 do
		if has_info("gar_dm_bandit" .. i .. "_demand") then
			return
		end
	end

	give_info("gar_dm_bandit" .. math_random(3) .. "_demand")
end

function gar_send_dymon_alarm(actor, npc)
	if has_alife_info("gar_start_graveyard") then
		news_manager.send_tip("tips_gar_hellcar_alarm", 2, "bes", 10000)
	end
end

function gar_direction_fire(actor, npc)
	if has_alife_info("gar_hellcar_help") and not has_alife_info("gar_counter_fire") and not has_alife_info("gar_open_fire") then
		news_manager.send_tip("gar_direction_fire", 0, "bes", 0)
	end
end

function gar_hellcar_victory(actor, npc)
	if not has_alife_info("gar_hellcar_tips_end") and has_alife_info("gar_hellcar_help") and not has_alife_info("gar_hellcar_thanks") then
		news_manager.send_tip("gar_hellcar_victory", 0, "bes", 0)
		Actor:give_info_portion("gar_hellcar_tips_end")
	end
end

function gar_seryi_victory(actor, npc)
	give_info("gar_seriy_bandits_killed")
	news_manager.send_tip("gar_hellcar_victory", 0, "seryi", 0)
end

function gar_boars_counter(actor, npc)
	local c = get_value("gar_boars_counter", 0, true)
	local sender_icon = "dolg"
	if not has_alife_info("gar_dolg_blokpost_4_umer") then
		sender_icon = "prapor"
	end
	if c < 1 then
		news_manager.send_tip("gar_actor_looser", 0, sender_icon, 0)
	else
		news_manager.send_tip("gar_actor_normal", 0, sender_icon, 0)
		give_info("gar_kill_boars_request")
	end
end

function signal_sos(actor, npc)
	news_manager.send_tip("gar_wounded_help", 0, "stalker", 0)
end

--' Escape

function play_snd_from_radio(actor, npc)
  local snd_obj = xr_sound.get_safe_sound_object([[characters_voice\scenario\escape\wolf_to_rangers_1]])
  local obj   = npc:object("hand_radio")
  snd_obj:play_no_feedback(obj, sound_object.s3d, 0, obj:position(), 1.0)
end

function esc_direction_fire(actor, npc)
	if not has_alife_info("esc_fanat_die") then
		news_manager.send_tip("esc_direction_fire", 7, "fanat", 0)
	end
end

function esc_fanat_victory(actor, npc)
	if has_alife_info("escape_lager_killers_die") and not has_alife_info("esc_fanat_die") then
		if has_alife_info("escape_lager_help") then
			news_manager.send_tip("esc_fanat_victory", 0, "fanat", 10000)
		end
	end
end

function esc_return_dv(actor, npc)
    news_manager.send_tip("esc_return_dv", 0, "trader", 10)
end

--' garbage

function gar_mapspot_blockpost (actor, npc)
	level_tasks.add_location(115, "crlc_small", "gar_dolg_blokpost_leader_name")
end

function actor_friend(actor, npc)
  npc:set_relation(game_object.friend, Actor)
end

function actor_neutral(actor, npc)
  npc:set_relation(game_object.neutral, Actor)
end

function actor_enemy(actor, npc)
  npc:set_relation(game_object.enemy, Actor)
end

function give_all_quests(actor, npc)
  --bar_dialogs.quests()
end

function give_rostok_quests(actor, npc)
  bar_dialogs.rostok_quests()
end

-- Вызов этой функции отключит обработчик [combat] боя для персонажа.
-- Используется в случаях, когда все необходимые действия, такие как переключение на другую секцию,
-- уже выполнены, и повторно выполнять их во время боя нельзя (а условия секции [combat] проверяются на каждом
-- апдейте, когда персонаж в бою, если, конечно, не отключены вызовом этой функции).
function disable_combat_handler(actor, npc)
  if db.storage[npc:id()].combat then
    db.storage[npc:id()].combat.enabled = false
  end

  if db.storage[npc:id()].mob_combat then
    db.storage[npc:id()].mob_combat.enabled = false
  end
end

-- Вызов этой функции отключит обработчик [combat_ignore] перехвата боя для персонажа.
function disable_combat_ignore_handler(actor, npc)
  if db.storage[npc:id()].combat_ignore then
    db.storage[npc:id()].combat_ignore.enabled = false
  end
end

function log_bp1(actor, npc)
end

function psi_hit_npc(actor, npc,p)
end

function mil_paul_frost_dead (actor, npc)
    local gulag = xr_gulag.get_gulag_by_name ("mil_freedom")
    if (gulag) then
       gulag:set_relation (game_object.neutral, Actor)
    end
end

function set_freedom_actor_enemy (actor, npc)
    local luk = level_object_by_sid (707)
    actor_enemy (Actor, luk)
end

function military_dolg_dead (actor, npc)
    -- если нет актера, то вылетаем с грохотом и треском
    if Actor == nil then return end

	-- проапдейтим количество мертвых долговцев
	local mil_dolg_killed = get_value("mil_dolg_killed", 0) + 1
	set_value("mil_dolg_killed", mil_dolg_killed)
	if mil_dolg_killed == 8 or xr_gulag.getGulagPopulation("mil_dolg") <= 1 then
		give_info("mil_dolg_dead")
		del_value("mil_dolg_killed")
	end
end

function mil_patrol_death_check (actor, npc)
    if has_alife_info("mil_patrol_man1_dead") and has_alife_info("mil_patrol_man2_dead") and has_alife_info("mil_patrol_man3_dead") then
       give_info("mil_patrol_dead")
    end
end

function mil_cook_dead (actor, npc)
end

function search_gulag_job(actor, npc)
  xr_gulag.resetJob(npc)
end

---------------------------------------------------------
-- BAR-ROSTOK
---------------------------------------------------------

function bar_freedom_spam_1(actor, npc)
	news_manager.send_tip("bar_freedom_spam_1", nil, "volkodav", nil, 509)
end
function bar_freedom_spam_2(actor, npc)
	news_manager.send_tip("bar_freedom_spam_2", nil, "volkodav", nil, 509)
end
function bar_freedom_spam_3(actor, npc)
	news_manager.send_tip("bar_freedom_spam_3", nil, "volkodav", nil, 509)
end
function bar_freedom_spam_4(actor, npc)
	news_manager.send_tip("bar_freedom_spam_4", nil, "volkodav", nil, 509)
end
function bar_ecolog_spam_1(actor, npc)
  news_manager.send_tip("bar_ecolog_spam_1", nil, "ecolog", nil, 503)
end
function bar_ecolog_spam_2(actor, npc)
  news_manager.send_tip("bar_ecolog_spam_2", nil, "ecolog", nil, 503)
end
function bar_ecolog_spam_3(actor, npc)
  news_manager.send_tip("bar_ecolog_spam_3", nil, "ecolog", nil, 503)
end
function bar_ecolog_spam_4(actor, npc)
  news_manager.send_tip("bar_ecolog_spam_4", nil, "ecolog", nil, 503)
end
function bar_ecolog_spam_5(actor, npc)
  if not has_alife_info("bar_heli_scene_volkodav_die") and not has_alife_info("bar_ecolog_saw_chase") then
    news_manager.send_tip("bar_freedom_chase", nil, "ecolog", nil, 503)
    Actor:give_info_portion("bar_ecolog_saw_chase")
  end
end
function bar_ecolog_hit(actor, npc)
  news_manager.send_tip("bar_ecolog_hit", nil, "ecolog", nil, 503)
end
function bar_freedom_spam_5(actor, npc)
  if not has_alife_info("bar_heli_scene_volkodav_die") then
    news_manager.send_tip("bar_ecolog_escape", nil, "volkodav", nil, 509)
  end
end
function bar_freedom_angry_actor(actor,npc)
  if has_alife_info("bar_ecolog_crush_actor_enemy")
  then
    npc:set_relation(game_object.enemy, Actor)
  end
end
function bar_freedom_defence_ecolog(actor,npc)
  news_manager.send_tip("bar_ecolog_attack", nil, "ecolog", nil, 503)
end
function bar_freedom_angry_actor_notify(actor,npc)
  if has_alife_info("bar_ecolog_crush_actor_enemy") then
    news_manager.send_tip("bar_freedom_attack_spy", 4, "volkodav", nil, 509)
  end
end
function bar_crush_heli_start(actor,npc)
  news_manager.send_tip("bar_ecolog_crush_start_heli", nil, "ecolog", nil, 503)
end
function rostok_kruglov_tip_1(actor,npc)
  news_manager.send_tip("rostok_kruglov_spam_1", nil, "ecolog", nil, 503)
end
function rostok_kruglov_tip_2(actor,npc)
  news_manager.send_tip("rostok_kruglov_spam_2", nil, "ecolog", nil, 503)
  level_tasks.add_location(597, "volkodav_location", "rostok_banda_volkodava")
end
function rostok_kruglov_attract_1(actor,npc)
  xr_sound.set_sound_play(npc, "kruglov_stop_enemy_1")
  local tips_sound = news_manager.send_tip_nosound("bar_freedom_chase", 0, "ecolog")
  if tips_sound ~= nil then
    --' Играем звук забитый
    tips_sound:play(Actor, 0, sound_object.s2d)
  end
end
function rostok_kruglov_attract_2(actor,npc)
  xr_sound.set_sound_play(npc, "kruglov_stop_enemy_2",3)
  local tips_sound = news_manager.send_tip_nosound("rostok_kruglov_follow_2",3000, "ecolog")
  if tips_sound ~= nil then
    --' Играем звук забитый
    tips_sound:play(Actor, 0, sound_object.s2d)
  end
end
function rostok_kruglov_ambush(actor,npc)
  xr_sound.set_sound_play(npc, "rostok_kruglov_help_5")
  local tips_sound = news_manager.send_tip_nosound("rostok_kruglov_follow_3", 0, "ecolog")
  if tips_sound ~= nil then
    --' Играем звук забитый
    tips_sound:play(Actor, 0, sound_object.s2d)
  end
end
function bar_crush_heli_down(actor,npc)
	news_manager.send_tip("bar_ecolog_crush_heli_down", 1, "volkodav", nil, 509)
end
function bar_ecolog_crush_attract_actor(actor,npc)
  if not has_alife_info("bar_heli_scene_professor_die") then
    news_manager.send_tip("bar_ecolog_crush_attract_actor", nil, "ecolog")
  end
end
function bar_freedom_attack_attract_actor(actor,npc)
		news_manager.send_tip("bar_freedom_attack_attract_actor", nil, "volkodav")
	end
function bar_freedom_attack_start(actor,npc)
    if not has_alife_info("bar_freedom_defence_ecolog") then
      news_manager.send_tip("bar_freedom_attack", nil, "volkodav", nil, 509)
            Actor:give_info_portion("bar_freedom_defence_ecolog")
    end
  end
function bar_arena_hit(actor, npc)
  local h = hit()
  h.power = 0.01
  h.direction = npc:direction()
  h.draftsman = Actor
  h.impulse = 1
  h.type = hit.wound
  npc:hit(h)
end
function esc_hit_from_fox(actor, npc)
  local fox = level_object_by_sid (005)
  if fox == nil then
    return
  end
  local h = hit()
  h.power = 0.01
  h.direction = npc:direction()
  h.draftsman = fox
  h.impulse = 1
  h.type = hit.wound
  npc:hit(h)
end

function bar_territory_logic(actor, npc)
	local level = level.name()
	local sender_icon = "dolg"
	if level == "l05_bar" then
		if not has_alife_info("bar_voronin_dead") then
			sender_icon = "voronin"
		elseif not has_alife_info("bar_dolg_petrenko_umer") then
			sender_icon = "petrenko"
		elseif not has_alife_info("bar_dolg_ivancov_umer") then
			sender_icon = "ivancov"
		elseif not has_alife_info("bar_dolg_regular_5_umer") then
			sender_icon = "plichko"
		end
    if dialogs.actor_in_dolg(actor,npc) then
      if has_alife_info("bar_dolg_territory_kill") then
				news_manager.send_tip("bar_territory_dolg_kill", nil, sender_icon, nil, 507)
        xr_gulag.setGulagEnemy("bar_dolg_general", Actor)
        xr_gulag.setGulagEnemy("bar_dolg_veterans", Actor)
        xr_gulag.setGulagEnemy("bar_dolg_bunker", Actor)
		xr_gulag.setGulagEnemy("bar_zastava", Actor)
		xr_gulag.setGulagEnemy("bar_zastava_2", Actor)
        xr_gulag.setGulagEnemy("bar_visitors", Actor)
        return
      end
      if has_alife_info("bar_dolg_territory_3_hit") then
				news_manager.send_tip("bar_territory_dolg_3_hit", nil, sender_icon, nil, 507)
        xr_gulag.setGulagEnemy("bar_dolg_general", Actor)
        xr_gulag.setGulagEnemy("bar_dolg_veterans", Actor)
        xr_gulag.setGulagEnemy("bar_dolg_bunker", Actor)
		xr_gulag.setGulagEnemy("bar_zastava", Actor)
		xr_gulag.setGulagEnemy("bar_zastava_2", Actor)
        return
      end
      if has_alife_info("bar_dolg_territory_2_hit") then
				news_manager.send_tip("bar_territory_dolg_2_hit", nil, sender_icon, nil, 507)
        return
      end
      if has_alife_info("bar_dolg_territory_1_hit") then
				news_manager.send_tip("bar_territory_dolg_1_hit", nil, sender_icon, nil, 507)
        return
      end
    else
      if has_alife_info("bar_dolg_territory_kill") then
        Actor:give_info_portion("bar_territory_nodolg_kill")
				news_manager.send_tip("bar_territory_nodolg_kill", nil, sender_icon, nil, 507)
        xr_gulag.setGulagEnemy("bar_dolg_general", Actor)
        xr_gulag.setGulagEnemy("bar_dolg_veterans", Actor)
        xr_gulag.setGulagEnemy("bar_dolg_bunker", Actor)
		xr_gulag.setGulagEnemy("bar_zastava", Actor)
		xr_gulag.setGulagEnemy("bar_zastava_2", Actor)
        xr_gulag.setGulagEnemy("bar_visitors", Actor)
        return
      end
      if has_alife_info("bar_dolg_territory_2_hit") then
        Actor:give_info_portion("bar_territory_nodolg_2_hit")
				news_manager.send_tip("bar_territory_nodolg_2_hit", nil, sender_icon, nil, 507)
        xr_gulag.setGulagEnemy("bar_dolg_general", Actor)
        xr_gulag.setGulagEnemy("bar_dolg_veterans", Actor)
        xr_gulag.setGulagEnemy("bar_dolg_bunker", Actor)
		xr_gulag.setGulagEnemy("bar_zastava", Actor)
		xr_gulag.setGulagEnemy("bar_zastava_2", Actor)
        xr_gulag.setGulagEnemy("bar_visitors", Actor)
        return
      end
      if has_alife_info("bar_dolg_territory_1_hit") then
        Actor:give_info_portion("bar_territory_nodolg_1_hit")
				news_manager.send_tip("bar_territory_nodolg_1_hit", nil, sender_icon, nil, 507)
        return
      end
    end
  end
  return
end

function bar_psih_come(actor, npc)
  news_manager.send_tip("bar_psih_come", nil, "barman")
end

function bar_actor_is_enemy(actor, npc)
      xr_gulag.setGulagEnemy("bar_dolg_general", Actor)
      xr_gulag.setGulagEnemy("bar_dolg_veterans", Actor)
      xr_gulag.setGulagEnemy("bar_dolg_bunker", Actor)
      xr_gulag.setGulagEnemy("bar_visitors", Actor)

	local obj = level_story_object(story_ids.bar_dolg_polkovnik_petrenko)
	if obj then
		obj:set_relation(game_object.enemy, Actor)
	end
end

function bar_actor_enemy_set (actor, npc)
    local dog = level_object_by_sid (509)
    if dog ~= nil then
       dog:set_relation (game_object.enemy, Actor)
    end
end

local arena_equip = {
	["bar_arena_fight_1"] = {
		"wpn_pm",
		"ammo_9x18_pmm",
		"ammo_9x18_pmm",
		"wpn_knife"
	},
	["bar_arena_fight_2"] = {
		"wpn_mp5",
		"ammo_9x19_pbp",
		"wpn_knife"
	},
	["bar_arena_fight_3"] = {
		"wpn_bm16",
		"ammo_12x70_buck",
		"ammo_12x70_buck",
		"wpn_knife"
	},
	["bar_arena_fight_4"] = {
		"wpn_ak74",
		"ammo_5.45x39_ap",
		"ammo_5.45x39_ap",
		"wpn_knife",
		"bandage",
		"bandage"
	},
	["bar_arena_fight_5"] = {
		"wpn_abakan",
		"ammo_5.45x39_ap",
		"ammo_5.45x39_ap",
		"ammo_5.45x39_ap",
		"wpn_knife",
		"bandage",
		"medkit",
		"svoboda_light_outfit"
	},
	["bar_arena_fight_6"] = {
		"wpn_groza",
		"ammo_9x39_ap",
		"ammo_9x39_ap",
		"ammo_9x39_ap",
		"wpn_knife",
		"grenade_f1",
		"specops_outfit"
	},
	["bar_arena_fight_7"] = {
		"wpn_knife",
		"bandage",
		"grenade_f1",
		"grenade_f1",
		"grenade_f1",
		"grenade_f1"
	},
	["bar_arena_fight_8"] = {
		"wpn_g36",
		"ammo_5.56x45_ap",
		"ammo_5.56x45_ap",
		"ammo_5.56x45_ap",
		"ammo_5.56x45_ap",
		"wpn_knife"
	}
}

function bar_arena_teleport()
  local inv_box_1 = level_object_by_sid (573)

	Actor:inventory_for_each(function(item)
		Actor:transfer_item(item, inv_box_1)
	end)

	local spawn_items
	for k, v in pairs(arena_equip) do
		if has_info(k) then
			spawn_items = v
			break
		end
	end

	got_item_random(spawn_items[1])
	for i = 2, #spawn_items do
		got_item(spawn_items[i])
	end
end

function arena_act_slot(sect)
	local obj = Actor:object(sect)

	Actor:move_to_slot(obj)
	Actor:activate_slot(obj:get_slot())
end

function bar_arena_weapon_slot()
	for k, v in pairs(arena_equip) do
		if has_info(k) then
			timer("xr_effects.arena_act_slot", 200, true, v[1])
			break
		end
	end
end

function bar_arena_teleport_2b()
	xr_zones.purge_arena_items("bar_arena")
	del_value("arena_counter")
	Actor:set_actor_position(patrol("t_walk_2"):point(0))
	local dir = patrol("t_look_2"):point(0):sub(patrol("t_walk_2"):point(0))
	Actor:set_actor_direction(-dir:getH())
end

function bar_arena_teleport_2_tp()
	level.add_pp_effector ("blink.ppe", 234, false)

	Actor:set_actor_position(vector():set(219.3,16,128.3))
	Actor:set_actor_direction(-vector():set(-1,0,0):getH())

	timer("xr_effects.bar_arena_teleport_2b", 200, true)
end

function bar_arena_teleport_2_box()
	local player_arena_item_ids = { }
	Actor:inventory_for_each(function(item)
		player_arena_item_ids[#player_arena_item_ids + 1] = item
	end)

	for i = 1, #player_arena_item_ids do
		release(player_arena_item_ids[i])
	end
end

function bar_arena_teleport_2()
	bar_arena_teleport_2_tp()
	bar_arena_teleport_2_box()
end

function barman_give_extra_task (actor, npc)
  if has_alife_info ("agroprom_military_case_done") and not has_alife_info ("bar_darklab_document_start") then
    Actor:give_info_portion("barman_job_1")
    return
  elseif has_alife_info ("bar_darklab_document_done") and not has_alife_info ("bar_x16_documents_start") then
    Actor:give_info_portion("barman_job_2")
    return
  elseif has_alife_info ("bar_x16_documents_done") and not has_alife_info ("bar_deactivate_radar_start") then
    Actor:give_info_portion("barman_job_3")
    return
  end
  return
end

function trader_extra_task (actor, npc)
  if has_alife_info ("esc_serious_talk") and not has_alife_info ("agroprom_military_case") then
    Actor:give_info_portion("trader_job")
    return
  end
  return
end

function scientist_extra_task (actor, npc)
  if has_alife_info ("yan_find_scientist_done") and not has_alife_info ("yan_find_vasilyev_start") then
    Actor:give_info_portion("scientist_job")
    return
  end
  return
end

function military_max_dead (actor, npc)
end

function military_lukash_dead (actor, npc)
end

function mil_courier_death (actor, npc)
    give_info("mil_courier_dead")
    if has_alife_info("mil_leader_quest2_start") then
       if not has_alife_info("mil_courier_visited") then
          level_tasks.set_task_state (task.fail, "mil_courier_job", 1)
       end
       level_tasks.set_task_state (task.completed, "mil_courier_job", 2)
       level_tasks.set_task_state (task.completed, "mil_courier_job", 0)
    end
end

function mil_courier_quest_fail (actor, npc)
    if has_alife_info("mil_courier_quest") == false then return end
    level_tasks.set_task_state (task.fail, "mil_courier_job", 0)
    give_info("mil_courier_quest_failed")
end

function mil_scull_news (actor, npc)
end

function mil_sniper_dead (actor, npc)
    if has_alife_info("mil_dolg_final_task") then
       level_tasks.remove_location (npc:story_id (), "mil_sniper_location")
    end
end

function mil_actor_enemy_set (actor, npc)
    local sniper = level_object_by_sid (704)
    if sniper ~= nil then
       sniper:set_relation (game_object.enemy, Actor)
    end
end

function mil_actor_enemy_reset (actor, npc)
    local sniper = level_object_by_sid (704)
    if sniper ~= nil then
       sniper:set_relation (game_object.neutral, Actor)
    end
end

function mil_bomb_explode (actor, npc)
	local source = level_story_object(story_ids.Mil_Bomb)
    if source == nil then
       return
    end

    local h = hit ()
    h.power = 1000000
    h.direction = vector():set( 1, 0, 0 )
    h.impulse = 1
    h.draftsman = source
    h.type = hit.chemical_burn
    source:hit (h)

    source:explode(0)
end

function mil_set_alarm (actor, npc)
    give_info("mil_freedom_under_attack")

    local skull = level_object_by_sid (708)
    if skull == nil then
       return
    end

    this.set_stalker_enemy (702, skull)     -- hit to Max
    this.set_stalker_enemy (707, skull)     -- hit to Lukash
    this.set_stalker_enemy (730, skull)     -- hit to Sniper1
    this.set_stalker_enemy (731, skull)     -- hit to Sniper2
    this.set_stalker_enemy (732, skull)     -- hit to Sniper3
end

function sar2_monolith_explode (actor, npc)
    local monolith = level_object_by_sid (1305)
    if monolith == nil then
       abort ("Object MONOLITH with SID 1305 not found")
    end
    local h = hit ()
    h.power = 1000
    h.direction = vector():set( 1, 0, 0 )
    h.impulse = 1
    h.draftsman = Actor
    h.type = hit.chemical_burn
    monolith:hit (h)
end

function set_stalker_enemy (sid, draftsman)
    local npc = level_object_by_sid (sid)
    if npc == nil or npc:alive () == false then
       return
    end
    local h = hit ()
    h.power = 0
    h.direction = vector():set( 1, 0, 0 )
    h.impulse = 0
    h.draftsman = draftsman
    h.type = hit.strike
    npc:hit (h)
end

function mil_remove_cook_map_spot (actor, npc)
    level_tasks.remove_location (728, "mil_cook_location")
end

function mil_emeny_nearest (actor, npc)
    if Actor == nil or Actor:alive () == false then
       return
    end

    local gulag = xr_gulag.get_gulag_by_name ("mil_freedom")
    if gulag == nil then return end

    if gulag:npc_is_enemy_to_anybody(Actor) then
       give_info("mil_enemy_nearest")
    end
end

function mil_cap_mapspot (actor, npc)
    local cap = level_object_by_sid (724)
    if cap == nil or cap:alive () == false then
       return
    end

    if not has_alife_info("mil_fblockpost_spot_set") then
       give_info("mil_fblockpost_spot")
       give_info("mil_fblockpost_spot_set")
       level_tasks.add_location (724, "mil_fblockpost_location")
    end
end

function mil_cap_mapspot_remove (stalker1, stalker2)
    if has_alife_info("mil_fblockpost_spot") then
       level_tasks.remove_location_safe (724, "mil_fblockpost_location")
       Actor:disable_info_portion ("mil_fblockpost_spot_remove")
    end
end

function set_actor_enemy_for_freedom (actor, npc)
    xr_gulag.setGulagEnemy ("mil_freedom", Actor)
end

-- GARBAGE

function gar_send_dolg_warning()
  if Actor then
    if xr_gulag.getGulagPopulation("gar_dolg") > 0 then
      news_manager.send_tip("gar_dolg_warning", 0, "dolg")
    end
  end
end

-------------------------------------------------------------------------------------
-- Функции для DarkValley
-------------------------------------------------------------------------------------
function val_escort_guard_death(actor, npc)
    local idx = string.sub(npc:name(), -1)
  local t = db.storage[npc:id()].death

    disable_info("val_escort_guard" .. idx .. "_combat")
    give_info("val_escort_guard" .. idx .. "_dead")

  if t ~= nil and (t.killer == 0 or t.killer == -1) then
        give_info("val_escort_actor_helped")
  end
    --"on_info     = %-val_escort_guard1_combat +val_escort_guard1_dead%\n" ..
    --"on_info2    = {=killed_by_actor} %+val_escort_actor_helped%\n" ..
end

function val_escort_guard_hit(actor, npc)
    local idx = string.sub(npc:name(), -1)
  local t = db.storage[npc:id()].hit

  if t ~= nil then
      if t.who == 0 then
            give_info("val_escort_combat")
            give_info("val_escort_actor_helped")
            if not has_info("val_escort_nap1_start_combat") then
                give_info("val_escort_captive_enemy")
            end
      else
          local npc1 = level_object_by_sid(406)
          if npc1 ~= nil and t.who == npc1:id() then
                give_info("val_escort_combat")
                give_info("val_escort_nap1_start_combat")
          end
      end
  end
    --"on_info     = {=hit_by_actor} %+val_escort_combat +val_escort_actor_helped%, %+val_escort_guard1_combat%\n" ..
    --"on_info2    = {+val_escort_combat -val_escort_nap1_start_combat} %+val_escort_captive_enemy%\n" ..
    --"on_info3    = {=hitted_by(406) -val_escort_captive_enemy} %+val_escort_nap1_start_combat%\n" ..
end

function val_escort_guard_combat(actor, npc)
    local idx = string.sub(npc:name(), -1)

    give_info("val_escort_guard" .. idx .. "_combat")

    if npc:see(Actor) then
        if not has_alife_info("val_escort_nap1_start_combat") then
            give_info("val_escort_captive_enemy")
        end
        give_info("val_escort_combat")
    end
    --"on_info     = %+val_escort_guard1_combat%\n" ..
    --"on_info2    = {=see_actor -val_escort_nap1_start_combat -val_escort_captive_enemy} %+val_escort_captive_enemy%\n" ..
    --"on_info3    = {=see_actor -val_escort_combat} %+val_escort_combat% ;remark@val_escort_guard1_fight\n" ..
end

function val_escort_guard_free(actor, npc)
    --local idx = string.sub(npc:name(), -1)

    give_info("val_escort_guards_free")
    disable_info("val_escort_guard" .. string.sub(npc:name(), -1) .. "_combat")
    --"on_info             = %+val_escort_guards_free -val_escort_guard1_combat%\n"
end

-------------------------------------------------------------------------------------
-- kill
-------------------------------------------------------------------------------------
function killactor (actor, npc)
    npc:set_relation (game_object.enemy, Actor)
end

function kill(actor, npc)
  npc:kill( npc )
end

-------------------------------------------------------------------------------------
-- Функции для Агропрома
-------------------------------------------------------------------------------------

function agr_krot_sos( actor, npc )
  news_manager.send_tip( "tips_agr_krot_sos", 0, "krot", 10000 )
end

function agr_krot_sos_1_2( actor, npc )
  if not has_alife_info( "agr_help_krot_start" ) and
     not has_alife_info( "agr_help_krot_done" ) and
     not has_alife_info( "agr_krot_skirmish_start" ) and
     not has_alife_info( "agr_krot_dead" ) and not(agroprom_tasks.agr_actor_enemy())
  then
    give_info( "agr_help_krot_start" )
    news_manager.send_tip( "tips_agr_krot_sos1", 0, "krot", 10000 )

    if has_info( "agr_help_stalkers_defence_dead" ) then
      news_manager.send_tip( "tips_agr_krot_sos2", 0, "krot", 10000 )
    end
  end
end

function agr_knockdown ()
  local snd_obj = xr_sound.get_safe_sound_object([[affects\tinnitus3a]])
  snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, xyz(), 1.0)
  level.add_cam_effector("camera_effects\\earthquake.anm", 1974, false, "")
end

function agr_contuz (actor, npc)
    local sound_obj_l   = xr_sound.get_safe_sound_object( [[affects\psy_blackout_l]] )
        local sound_obj_r   = xr_sound.get_safe_sound_object( [[affects\psy_blackout_r]] )

    sound_obj_l:play_no_feedback(Actor, sound_object.s2d, 0, vector():set(-1, 0, 1), 1.0)
    sound_obj_r:play_no_feedback(Actor, sound_object.s2d, 0, vector():set( 1, 0, 1), 1.0)
end

function agr_cam_effect ()
  level.add_cam_effector2("camera_effects\\agroprom_doctor_cam.anm", 123, false, "")

end

function agr_weapon(actor, npc)
  if Actor ~= nil then Actor:activate_slot(2)
  end
end
function agr_hold_enemy(actor, npc)
  local gulag = xr_gulag.get_gulag_by_name("agr_factory_hold")

  local h  = hit()
  h.power     = 0.01
  h.direction = vector():set( 1, 0, 0 )
  h.draftsman = Actor
  h.impulse   = 1
  h.type      = hit.wound

  for k, v in pairs(gulag.Object) do
    if v ~= true and level.object_by_id( k ) ~= nil then
      v:hit( h )
    end
  end
end
---------------------------------------------------------
-- PRIPYAT
---------------------------------------------------------
function pri_zombied_in_combat_inc(actor, npc)
    gulag_pripyat.zombied_in_combat[npc:name()] = true
end

function pri_zombied_in_combat_dec(actor, npc)
    gulag_pripyat.zombied_in_combat[npc:name()] = nil
end

function pri_drop_rpg_ammo(actor, npc)
    local item = npc:object("ammo_og-7b")
    if item then
        npc:drop_item(item)
    end
end

function pri_give_ammo_og7b(actor, npc)
    AI:create("ammo_og-7b", npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
    AI:create("ammo_og-7b", npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
end

-------------------------------------------------------------------------------------
-- Функции для работы с вертолётами
-------------------------------------------------------------------------------------

function heli_set_enemy_actor(actor, npc)
  local st = db.storage[npc:id()]
  if not st.combat.enemy_id and Actor:alive() then
    st.combat.enemy_id = 0

    heli_snd.play_snd( st, "snd_see_enemy", 1 )
  end
end

function heli_set_enemy(actor, npc, p)
  local st  = db.storage[npc:id()]
  local obj = level_object_by_sid( p[1] )

  if not st.combat.enemy_id and obj:alive() then
    st.combat.enemy_id = obj:id()

    heli_snd.play_snd( st, "snd_see_enemy", 1 )
  end
end

function heli_clear_enemy(actor, npc)
    db.storage[npc:id()].combat:forget_enemy()
end

function heli_start_flame(actor, npc)
  bind_heli.heli_start_flame( npc )
end

function heli_die(actor, npc)
  bind_heli.heli_die( npc )
end

-------------------------------------------------------------------------------------
-- Функции для работы с погодными эффектами
-------------------------------------------------------------------------------------
function start_small_reject (actor, npc)
	local hr = level.get_time_hours()
	if level.get_time_minutes() >= 30 then
		hr = hr < 23 and hr + 1 or 0
	end

	level.set_weather_fx("surge_day_" .. hr)

  level.add_pp_effector ("vibros_p.ppe", 1974, false)
  this.aes_earthshake (npc)
end

function start_full_reject (actor, npc)
	local hr = level.get_time_hours()
	if level.get_time_minutes() >= 30 then
		hr = hr < 23 and hr + 1 or 0
	end

	level.set_weather_fx("surge_day_" .. hr)

    level.remove_pp_effector (1974)
    level.add_pp_effector ("vibros.ppe", 1974, false)
end

function aes_grenade_explode (actor, npc)
    local obj = level_object_by_sid (1101)
    if obj == nil then return end
    local h = hit ()
    h.power = 1000
    h.direction = vector():set (1, 0, 0)
    h.impulse = 1
    h.draftsman = obj
    h.type = hit.chemical_burn
    obj:hit (h)
end

function aes_kill_actor (actor, npc)
    if Actor ~= nil and Actor.health > 0 then
       Actor:kill (Actor)
    end
end

function set_sidorovich_animation (npc)
    local sidor = level_object_by_sid (1118)
    if sidor == nil then
       abort ("SIDOROVICH NOT FOUND !!!")
    end
    sidor:play_cycle ("wonder", true)
end

-- постпроцесс и влияние удара в морду
function aes_earthshake (npc)
  local snd_obj = xr_sound.get_safe_sound_object([[ambient\earthquake]])
  snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, xyz(), 1.0)
  level.add_cam_effector("camera_effects\\earthquake.anm", 1974, false, "")
end

function vovan_camera_test (npc)
  level.add_cam_effector("camera_effects\\test.anm", "")
end
-------------------------------------------------------------------------------------
-- Функции для Янтаря
----------------------------------------------------------------------------------
function yan_actor_sleep (actor, npc)
  Actor:set_actor_position(patrol("yan_actor_sleep"):point(0))
  local dir = patrol("yan_actor_sleep"):point(1):sub(patrol("yan_actor_sleep"):point(0))
  Actor:set_actor_direction(-dir:getH())
end

function yan_actor_sleep_1 (actor, npc)
  Actor:set_actor_position(patrol("yan_actor_sleep_1"):point(0))
  local dir = patrol("yan_actor_sleep_1"):point(1):sub(patrol("yan_actor_sleep_1"):point(0))
  Actor:set_actor_direction(-dir:getH())
end

function yan_dream_voices (actor, npc)
        local sound_obj_l   = xr_sound.get_safe_sound_object( [[characters_voice\scenario\yantar\dream_talk_l]] )
        local sound_obj_r   = xr_sound.get_safe_sound_object( [[characters_voice\scenario\yantar\dream_talk_r]] )

    sound_obj_l:play_no_feedback(Actor, sound_object.s2d, 0, vector():set(-1, 0, 1), 1.0)
    sound_obj_r:play_no_feedback(Actor, sound_object.s2d, 0, vector():set( 1, 0, 1), 1.0)
end

function yan_gluk (actor, npc)

    local sound_obj_l   = xr_sound.get_safe_sound_object( [[affects\psy_blackout_l]] )
        local sound_obj_r   = xr_sound.get_safe_sound_object( [[affects\psy_blackout_r]] )

    sound_obj_l:play_no_feedback(Actor, sound_object.s2d, 0, vector():set(-1, 0, 1), 1.0)
    sound_obj_r:play_no_feedback(Actor, sound_object.s2d, 0, vector():set( 1, 0, 1), 1.0)
  level.add_cam_effector("camera_effects\\earthquake.anm", 1974, false, "")

end
function x18_gluk (actor, npc)
    level.add_pp_effector ("blink.ppe", 234, false)
    local sound_obj_l   = xr_sound.get_safe_sound_object( [[affects\psy_blackout_l]] )
        local sound_obj_r   = xr_sound.get_safe_sound_object( [[affects\psy_blackout_r]] )
        local snd_obj     = xr_sound.get_safe_sound_object( [[affects\tinnitus3a]] )
    snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, xyz(), 1.0)
    sound_obj_l:play_no_feedback(Actor, sound_object.s2d, 0, vector():set(-1, 0, 1), 1.0)
    sound_obj_r:play_no_feedback(Actor, sound_object.s2d, 0, vector():set( 1, 0, 1), 1.0)
  level.add_cam_effector("camera_effects\\earthquake.anm", 1974, false, "")

end

function yan_sleep_not_relocate (actor, npc)
    Actor:actor_sleep(0, 180)
end
function yantar_kruglov_talk(actor,npc)
  xr_sound.set_sound_play(npc, "rostok_kruglov_help_6")
end

function yantar_professor_spam_1 (actor, npc)
    news_manager.send_tip("general_ecolog_tip_1", nil, "saharov", nil, 902)
end

function yantar_professor_spam_2 (actor, npc)
    news_manager.send_tip("general_ecolog_tip_2", nil, "saharov", nil, 902)
end

function yantar_vasilyev_spam (actor, npc)
    news_manager.send_tip("storyline_vasilyev_tip", nil, "vasilyev", nil, 903)
end
function yan_saharov_message (actor, npc)
    news_manager.send_tip("yan_saharov_message", nil, "saharov", nil, 902)
    Actor:give_info_portion("labx16_find")
end

function yan_saharov_message_2 (actor, npc)
    news_manager.send_tip("yan_saharov_message_2", nil, "saharov", nil, 902)
end
function yan_saharov_message_3 (actor, npc)
    news_manager.send_tip("yan_saharov_message_3", nil, "saharov", nil, 902)
end
function yan_ghost_pda()
    if has_info("agr_find_gunslinger_cache_final") then
        give_info("yan_provodnik_spawn")
    end
    news_manager.send_tip("storyline_ghost_tip", nil, "prizrak")
end

function start_yantar_dream(actor, npc)
  game.start_tutorial("yantar_dream")
end

function end_yantar_dream(actor, npc)
  Actor:give_info_portion("yantar_find_ghost_task_start")
	-- Proper70 Strelok
	give_info("strelok_taynik_pda0_start")
	-- Proper70 end
end
-----------------------------radar
function rad_sos_spam(actor, npc)
  news_manager.send_tip("tips_rad_sos_suicide", nil, "stalker", nil, 1004)
end

function monolith_generator_hit (actor, npc)
end

function start_x18_dream(actor, npc)
  game.start_tutorial("x18_dream")
end
function end_x18_dream(actor, npc)
  Actor:give_info_portion("dar_x18_dream")
end

function activate_agr_u_controller_boss()
	local se_obj = server_object("kat2_m_controller_old_0000")
	if se_obj then
		level.client_spawn_manager():add(se_obj.id, 0,
			function(id, obj)
				sa_mob_health_bar.add_mob_health_bar(obj)
			end
		)
	end
end

function activate_x18_flame_boss()
	local obj = level_object("dar_m_poltergeist_normal_flame_0000")
	if obj then
		sa_mob_health_bar.add_mob_health_bar(obj)
	end
end

function activate_x16_controller_boss()
	local obj = level_object("x16_m_controller_e")
	if obj then
		sa_mob_health_bar.add_mob_health_bar(obj)
	end
end

function activate_x10_bloodsucker_boss()
	local se_obj = server_object("bun_bloodsucker_prim")
	if se_obj then
		level.client_spawn_manager():add(se_obj.id, 0,
			function(id, obj)
				sa_mob_health_bar.add_mob_health_bar(obj)
			end
		)
	end
end

function set_invisible(actor, npc, p)
	npc:set_invisible(p[1] == "true")
end

function aes_final_movie(actor, npc)
  game.start_tutorial("mov_refuse_osoznanie")
end
------------------------------------------------------------------------------------
-- Функции для Радара
------------------------------------------------------------------------------------
function rad_psi_hit (actor, npc)
  level.add_pp_effector ("radar_psi.ppe", 2006, false)
end

function start_radar_dream(actor, npc)
  game.start_tutorial("radar_dream")
end

function end_radar_dream(actor, npc)
  Actor:give_info_portion("bun_patrol_start")
end
------------------------------------------------------------------------------------
-- Функции для саркофага
------------------------------------------------------------------------------------
function destroy_monolith_generator(actor, npc)
    local source = nil
       local se_obj = AI:story_object(1305)
       if se_obj then
          source = level.object_by_id(se_obj.id)
       end

    if source == nil then
       abort ("MONOLITH GENERATOR story id 1305 not found")
       return
    end

    local h = hit ()
    h.power = 1000000
    h.direction = vector():set( 1, 0, 0 )
    h.impulse = 1
    h.draftsman = source
    h.type = hit.chemical_burn
    source:hit (h)

	del_value("mon_destroy_generator")
end

function del_mon_counter()
	del_value("mon_clear_control_room")
end

function sar_monolith_miracle(actor, npc)
  --' Убил лидеров группировок
  if has_alife_info("mil_lukash_dead") and
     has_alife_info("bar_voronin_dead")
  then
    game.start_tutorial("mov_desire_3")
    return
  end

  --' Много денег
  if Actor:money() >= 100000 then
    game.start_tutorial("mov_desire_2")
    return
  end

  --' Хорошая репутация
  if Actor:character_reputation() >= 1000 then
    game.start_tutorial("mov_desire_1")
    return
  end

  --' плохая репутация
  if Actor:character_reputation() <= -1000 then
    game.start_tutorial("mov_desire_4")
    return
  end

  game.start_tutorial("mov_desire_5")
end

function game_credits(actor, npc)
  db.gameover_credits_started = true
  game.start_tutorial("credits_seq")
end

function game_over(actor, npc)
  if db.gameover_credits_started ~= true then
    return
  end
	console:execute("main_menu on")
end

function after_credits(actor, npc)
  if db.gameover_credits_started ~= true then
    return
  end
	console:execute("disconnect")
end

function pri_game_over(actor, npc)
	console:execute("main_menu on")
end

function esc_init_dialod ()
  local trader = level_object_by_sid(003)
  Actor:run_talk_dialog(trader)
end

function oso_init_dialod ()
end

function change_leader(actor, npc)
  if xr_gulag.getGulagPopulation(823) == 0 then
    Actor:give_info_portion("pri_followers_all_dead")
  end
end

function on_tutor_gameover_stop()
	console:execute("main_menu on")
end

-- удаление объекта из его логики
function release_obj(actor, npc)
	release(npc)
end

------------------------------------------------------- ARENA_EXTENSION_MOD--------------------------------------------------------

function aem_draw()
	Actor:set_character_community("trader",0,0)
	aem_lights.draw()
end

function aem_win()
	aem_lights.win()
end

function aem_foul()
	aem_lights.foul()
end

function aem_death(actor, npc, p)
	Arena:on_death(npc, p[1])
end

function aem_finish()
	Arena:finish()
end

function switch(actor, npc)
	if Actor:has_info("aem_go_bar") then
		npc:add_restrictions("bar_restrictor", "")
	else
		npc:remove_all_restrictions()
	end
end

------------------------------------------------------- ARENA_EXTENSION_MOD-----------------------------------------
