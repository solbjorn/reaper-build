----------------------------------------------------------------------------------------------------
-- Do nothing
----------------------------------------------------------------------------------------------------

class "action_tip"

function action_tip:__init(obj, storage)
	self.object = obj
	self.st = storage
end

function action_tip:reset_scheme()
	self.st.tips_sended = false
	self.st.signals = {}
end

function action_tip:update(delta)
	if self.object:inside(db_actor:position()) then
		if self.st.conditions == nil or
		   xr_logic.pick_section_from_condlist(nil, self.st.conditions.condlist) ~= nil
		then
			if self.st.tips_sended == false then
  				news_manager.send_tip(self.st.info, self.st.timeout, self.st.sender, self.st.showtime)
				self.st.signals["tip_sended"] = true
				self.st.tips_sended = true
			end
		end
	end

	xr_logic.try_switch_to_another_section(self.object, self.st)
end

---------------------------------------------------------------------------------------------------------------------
function add_to_binder(npc, storage)
	storage.actions[ action_tip(npc, storage) ] = true
end

function set_scheme(obj, ini, scheme, section, gulag_name)
	local st = xr_logic.assign_storage_and_bind(obj, ini, scheme, section)
	st.logic = xr_logic.cfg_get_switch_conditions(ini, section, obj)

	st.info     = utils.cfg_get_string( ini, section, "name",     obj, true,  "", "" )
	st.sender   = utils.cfg_get_string( ini, section, "sender",   obj, false, "", nil )
	st.timeout  = utils.cfg_get_number( ini, section, "timeout",  obj, false,     nil )
	st.showtime = utils.cfg_get_number( ini, section, "showtime", obj, false,     nil )

	st.conditions = xr_logic.cfg_get_condlist( ini, section, "cond", obj )
end
