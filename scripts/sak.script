---------------------------------------------------------------------
-- Привет от Сяка 
---------------------------------------------------------------------



function add_new_escape_100() 
add_new_lc(9100,6854,"На Кордон","info_way100a")
end
function add_new_agroprom_101()
add_new_lc(9101,16,"На Агропром","info_way101a")
end
function add_new_yantar_102()
add_new_lc(9102,6855,"На Янтарь","info_way102a")
end
function add_new_agroprom_103()
add_new_lc(9103,7853,"На Агропром","info_way103a")
end
function add_new_mil_104()
add_new_lc(9104,7378,"На Склады","info_way104a")
end
function add_new_rostok_105()
add_new_lc(9105,1940,"На Дикую Территорию","info_way105a")
end
function add_new_radar_106()
add_new_lc(9106,7854,"На Выжигатель","info_way106a")
end
function add_new_darkvalley_107()
add_new_lc(9107,3449, "В Темную Долину","info_way107a")
end
function add_new_yantar_108()
add_new_lc(9108,3448,"На Янтарь","info_way108a")
end
function add_new_radar_109()
add_new_lc(9109,4590,"На выжигатель","info_way109a")
end
function add_new_mil_110()
add_new_lc(9110,4591,"На Склады","info_way110a")
end
function add_new_darkvalley_111()
add_new_lc(9111,1941,"В Темную Долину","info_way111a")
end
function add_new_military_01()
add_new_lc(1008,3730,"На Склады","info_way112a")
end
function add_new_military()
add_new_lc(592,1883,"На Склады","info_way113a")
end
function add_new_rostok()
add_new_lc(594,1591,"На Дикую территорию","info_way114a")
end
function add_new_lc(levch,levchn,levchm,info)
  local objt = alife():story_object(levch)
  if not objt then
  alife():create(levchn)
  end
  local obj = alife():story_object(levch)
  if obj then
  level.map_add_object_spot(obj.id, "level_changer",levchm)
  db.actor:give_info_portion(info)
  info_received()
  end
end
function add_new_military_false()
local obj = alife():story_object(5212)
level.map_add_object_spot(obj.id, "level_changer","На ЧАЭС")
  db.actor:give_info_portion("info_way_false")
  info_received()
end
function out_new_lc(levch,info)
  if not db.actor:has_info(info) then
    local objt = alife():story_object(levch)
    if objt then
      alife():release(objt)
    end
  end
end
function add_new_item_in(item,sidlh)
local nps = sidlh.id
amk.spawn_item_in_inv(item,nps) 
end
local krysyk_treasure
function add_new_lcitem()
amk.spawn_item("sak_document",vector():set(350,-51.74,-24.45),2031,93051) -- документ под трупом ученого в рж лесу
amk.spawn_item("rad_document6",vector():set(621.95,-42.64,187.38),1910,224619) -- дело в кунге у монолитовцув
amk.spawn_item("amk_zapiska",vector():set(-132.93,11.04,-203.2),629,105467) --записка на третьем этаже Агропрома
amk.spawn_item("sak_document2",vector():set(-80,-1.30,153),163,187916) -- документ  под жд насыпью Кордона
amk.spawn_item("garbage_pda",vector():set(-226,-7.37,-132.36),252,208345) -- ПДА в лагере бандитов на свалке
amk.spawn_item("rad_document6",vector():set(-28.4,-0.26,-173.55),676,211656) -- дело в вагончике Агропрома
amk.spawn_item("rad_pda",vector():set(530.7,-49.41,-241.61),2061,180657) -- ПДА в вагончике на Радаре
amk.spawn_item("rad_document6",vector():set(-139.6,-25.03,-355.6),19,116593) -- дело на кордоне
amk.spawn_item("sak_book4",vector():set(-3.77,-4.25,191.19),2195,97948) --книга доктора
amk.spawn_item("playboy3",vector():set(-212.99,-22.51,-126.06),59,40605) 
amk.spawn_item("playboy2",vector():set(112.87,-1.94,1.6),117,413895)
amk.spawn_item("playboy1",vector():set(138.57,-3.5,22.0),1237,37466)
amk.spawn_item("playboy4",vector():set(-156.23,1.44,-162.05),669,82783)
amk.spawn_item("playboy5",vector():set(-19.52,-3.22,-19.91),1593,287481)
amk.spawn_item("playboy6",vector():set(-52.11,-10.52,35.31),1608,257284)
amk.spawn_item("playboy7",vector():set(41.4,5.45,-84.15),1100,226116)
amk.spawn_item("playboy8",vector():set(-135.57,1.29,-523.72),832,22097)
amk.spawn_item("playboy9",vector():set(-6.19,-4.21,201.42),2195,94368)
amk.spawn_item("playboy10",vector():set(306.45,-38.06,-23.05),1930,69058)
amk.spawn_item("playboy11",vector():set(30.92,-2.46,-41.34),1997,20510)
amk.spawn_item("m_inventory_seif",vector():set(306.47,-39.39,-26.22),1930,69058)
	for a=1000,20000,1 do
		local obj=alife():object(a)
		if obj and ((string.find(obj:name(),"af_") and not string.find(obj:name(),"esc_af_")  and not string.find(obj:name(),"pri_af_" ) and not string.find(obj:name(),"af_dumm")) or string.find(obj:name(),"esc_wpn")) then
			alife():release(obj,true)
		end
	end
end
function add_ak47()
amk.spawn_item("wpn_ak47",vector():set(108.5,7.74,-9.07),987,304788)
end
function add_doktor_book()
amk.spawn_item("sak_book4",vector():set(-3.49,-4.26,191.34),2195,96166)
end
function add_notebook()
amk.spawn_item("notebook",vector():set(23.87,-5.65,-18.38),1140,6287) 
end
function add_diplomat()
amk.spawn_item("diplomat",vector():set(90.96,10.18,-9.03),1544,6334) 
end
function add_computer()
amk.spawn_item("computer",vector():set(-114.96,-2.23,8.18),2248,8511) 
end
function add_new_103item()
amk.spawn_item("quest_case_06",vector():set(-196.5,2.48,92.88),678,40284) --кейс в кунге дезертира
end
function add_sak_plan()
amk.spawn_item("sak_plan",vector():set(-213.13,2.96,92.58),535,22245) -- мешок плана в кунге дезертира 
end
function add_krot_pda()
amk.spawn_item("agroprom_pda",vector():set(253,-0.2,76.17),498,428034) --ПДА в ЖД тоннеле Агропрома
end
function add_und_pda()
amk.spawn_item("und_pda",vector():set(-45.12,-4.01,-30.08),718,4466) --ПДА в подземелье Агропрома
end
function add_seif()
amk.spawn_item("inventory_sakbox_03",vector():set(15.52,-12.43,8.59),1156,5132) --Сейф в подземелье X-18
end
function give_seif(obj)
amk.remove_item_from_inventory_by_name(obj,db.actor)
amk.spawn_item("m_inventory_seif",vector():set(34.37,-3.37,-37.29),1997,21736)  --передача сейфа
end
function add_decoder()
amk.spawn_item("decoder1",vector():set(-42.65,19.18,1.97),1530,2557) --декодер в  X-16 возле главного пульта
end
function add_gauss()
amk.spawn_item("wpn_gungauss",vector():set(-126.11,0.91,-533.55),836,31356) --Гаусс-пистолет  в ТД
end
function add_medusa_green()
amk.spawn_item("af_medusa_green",vector():set(260.59,-9.82,-135),404,373051) --Изумрудная медуза на свалке
end
function add_pellicle_red()
amk.spawn_item("af_dummy_pellicle_red",vector():set(-239.99,4.85,99.93),1362,13956) --Изумрудная медуза на Ростке
end
function add_vyvert_green()
amk.spawn_item("af_vyvert_green",vector():set(115.13,4.83,-409.26),942,311330) --Изумрудный выверт в ТД
end
function add_blood_green()
amk.spawn_item("af_blood_green",vector():set(55.34,1.27,40.89),1511,68094) --Изумрудная кровь на Янтаре 
end
function add_battery_red()
amk.spawn_item("af_dummy_battery_red",vector():set(668.9,-45.79,-39.93),1896,227187) --Рубиновая батарейка на Радаре 
end
function add_order()
local obj = alife():story_object(9115)
alife():create("rad_document7",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
end
function add_two_corpses()
	local obj=amk.spawn_item("yan_ecolog_respawn_2",vector():set(187.84,5.18,-360.68),938,386349)
	if (_g.IsStalker(obj)) then
		local tbl = amk.read_stalker_params(obj)
		tbl.sid = 48800
		tbl.health = 0
		tbl.updhealth = 0
		amk.write_stalker_params(tbl, obj)					
	end	
	alife():create("scaintist_docs",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
	local obj=amk.spawn_item("yan_ecolog_respawn_2",vector():set(187.66,5.03,-375.97),938,386327)
	if (_g.IsStalker(obj)) then
		local tbl = amk.read_stalker_params(obj)
		tbl.sid = 48801
		tbl.health = 0
		tbl.updhealth = 0
		amk.write_stalker_params(tbl, obj)					
	end	
	amk.spawn_item("inventory_sakbox_05",vector():set(176.83,8.37,-375.96),938,377568)
end
function add_scaintist_body()
	local obj=amk.spawn_item("yan_ecolog_respawn_2",vector():set(-46.53,-2.2,-98.36),2258,53082)
	if (_g.IsStalker(obj)) then
		local tbl = amk.read_stalker_params(obj)
		tbl.sid = 48802
		tbl.health = 0
		tbl.updhealth = 0
		amk.write_stalker_params(tbl, obj)					
	end	
	alife():create("scaintist_pda",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
end
function add_agroprom_box()
	for a=1000,10000,1 do
	local obj=alife():object(a)
		if (obj and obj.name and obj:name() == "agr_quest_case_02") then
		alife():release(obj, true)
		--dbglog("keis: "..a) ~5665
		end
	end	
	--amk.spawn_item("quest_case_02",vector():set(18.76,-2.23,-219.12),436,259029)
	dialogs.relocate_item_section(db.actor, "quest_case_02", "in")
end
function add_kontainer()
amk.spawn_item("inventory_sakbox_05",vector():set(378,-52,-179.20),2097,101537)
end
function agroprom_wpm()
local obj = alife():story_object(9115)
alife():create("wpn_vintorez_m1",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
end
function add_books()
amk.spawn_item("sak_book1",vector():set(28.11,-12.07,38.93),1161,6530) 
amk.spawn_item("sak_book2",vector():set(-120.27,21.56,-32.65),1529,165) 
amk.spawn_item("sak_book3",vector():set(0.77,-19.45,24.89),2768,6203) 
end
function add_new_111item()
amk.spawn_item("dynamite",vector():set(-213.57,-23.19,-127.39),59,39928) 
end
function add_new_109item()
amk.spawn_item("quest_case_05",vector():set(150.57,7.02,-254.55),966,348350)  
end
function info_received()
  amk.send_tip("","Новый путь!",0,10,"gen_info")
end
function add_resiver()
amk.spawn_item("sak_resiver",vector():set(-185.57,-3.58,94.89),338,39411) 
end
function add_drug()
amk.spawn_item("dogfrend",vector():set(-6.71,0.41,247.19),258,170000) 
end
function add_strelok_pda()
amk.spawn_item("strelok_pda",vector():set(42.95,61.56,-26.25),2417,6406) 
end
function info_strelok_pda()
  amk.send_tip("","Сталкер! Остановись!",0,10,"gen_info")
end
function info_artmod()
  amk.send_tip("","Новый артмод!",0,10,"gen_info")
end
function info_doktor()
  amk.send_tip("","Болотный доктор жив!",0,10,"gen_info")
end
function info_teleport()
  amk.send_tip("","Телепорт готов...",0,10,"gen_info")
end

local items_count=0
local itemin=nil

function have_item_namber(itm,need_namber)
local actor=db.actor
items_count=0
itemin=itm
actor:iterate_inventory(cheking_item,actor)
	if items_count>=need_namber then
		return true
	else
		return false
	end
end
function cheking_item(actor,item)
local items=item:section()
	if items==itemin then
		items_count=items_count+1
	end
end
function create_items(npc,section,number)
        for i=1,number do
			alife():create(section, 
            npc:position(),
            npc:level_vertex_id(),  
            npc:game_vertex_id(),
            npc:id())
        end 
end
local reloc_params={}
local stalk
function out_item_namber(itm_section,need_number)
	reloc_params.itm_section=itm_section
	reloc_params.itm_cnt=need_number
	reloc_params.itm_cnt_found=0
	db.actor:iterate_inventory(checkout_items_count,db.actor)
	reloc_params.itm_cnt_found=0
	if reloc_params.itm_cnt_found<=reloc_params.itm_cnt then
		db.actor:iterate_inventory(out_items_count,db.actor)
	end
	news_manager.relocate_item(db.actor, "out", itm_section)
	reloc_params={}
end
function relocate_item_namber(stalker,itm_section,need_number)
	stalk=stalker
	reloc_params.itm_section=itm_section
	reloc_params.itm_cnt=need_number
	reloc_params.itm_cnt_found=0
	db.actor:iterate_inventory(checkout_items_count,db.actor)
	reloc_params.itm_cnt_found=0
	if reloc_params.itm_cnt_found<=reloc_params.itm_cnt then
		db.actor:iterate_inventory(reloc_items_count,db.actor)
	end
	news_manager.relocate_item(db.actor, "out", itm_section)
	reloc_params={}
end
function checkout_items_count(actor,item)
	if item.section and item:section()==reloc_params.itm_section then
		reloc_params.itm_cnt_found = reloc_params.itm_cnt_found + 1
	end
end
function reloc_items_count(actor,item)
	if item.section and item:section()==reloc_params.itm_section and reloc_params.itm_cnt_found<reloc_params.itm_cnt then
		db.actor:transfer_item(item, stalk)
		reloc_params.itm_cnt_found = reloc_params.itm_cnt_found + 1
	end
end
function out_items_count(actor,item)
	if item.section and item:section()==reloc_params.itm_section and reloc_params.itm_cnt_found<reloc_params.itm_cnt then
		amk.remove_item_from_inventory(item, actor)
		reloc_params.itm_cnt_found = reloc_params.itm_cnt_found + 1
	end
end

function artmodscheck(nearest_anomaly,af,anom_sect)
local af_sect=af:section()
if string.find(anom_sect,"_zharka")~=nil then 
  artmod(nearest_anomaly,af,"af_medusa","af_rusty_thorn","af_vyvert","vodka","info_artmod_electra_flash_zharka","af_electra_flash") 
  artmod(nearest_anomaly,af,"af_medusa","af_blood","kolbasa","mutant_dog_tail","info_artmod_ameba_slime_zharka","af_ameba_slime") 
  artmod(nearest_anomaly,af,"af_medusa","af_blood","bandage","conserva","info_artmod_gravi_zharka","af_gravi") 
  artmod(nearest_anomaly,af,"af_rusty_kristall","af_vyvert","af_electra_flash","mutant_snork_leg","info_artmod_night_star_zharka","af_night_star") 
  artmod(nearest_anomaly,af,"af_gravi","af_medusa","af_electra_flash","mutant_krovosos_jaw","info_artmod_electra_moonlight_zharka","af_electra_moonlight") 
  artmod(nearest_anomaly,af,"af_electra_flash","af_ameba_mica","vodka","mutant_dog_tail","info_artmod_dummy_battery_zharka","af_dummy_battery")  
end
if string.find(anom_sect,"_galant")~=nil then 
  if af_sect=="af_dummy_battery_red" then af_zone_off(af)  end
  artmod(nearest_anomaly,af,"af_blood","af_medusa","vodka","mutant_dog_tail","info_artmod_fireball_galant","af_fireball") 
  artmod(nearest_anomaly,af,"af_vyvert","af_drops","conserva","mutant_dog_tail","info_artmod_cristall_flower_galant","af_cristall_flower") 
  artmod(nearest_anomaly,af,"af_ameba_slime","af_drops","af_medusa","kolbasa","info_artmod_ameba_mica_galant","af_ameba_mica") 
  artmod(nearest_anomaly,af,"af_gravi","af_blood","af_fireball","mutant_psevdodog_tail","info_artmod_electra_moonlight_galant","af_soul") 
  artmod(nearest_anomaly,af,"af_medusa","af_rusty_thorn","af_cristall_flower","mutant_flesh_eye","info_artmod_gold_fish_galant","af_gold_fish") 
  artmod(nearest_anomaly,af,"af_cristall_flower","af_cristall","mutant_psevdodog_tail","conserva","info_artmod_dummy_spring_galant","af_dummy_spring") 
  artmod(nearest_anomaly,af,"mutant_face_tushkano","bandage","conserva","mutant_dog_tail","info_artmod_medusa_galant","af_medusa") 
end
if string.find(anom_sect,"_buzz")~=nil then 
  artmod(nearest_anomaly,af,"af_electra_sparkler","af_medusa","af_drops","bread","info_artmod_rusty_kristall_buzz","af_rusty_kristall") 
  artmod(nearest_anomaly,af,"af_blood","bandage","bread","mutant_dog_tail","info_artmod_rusty_thorn_buzz","af_rusty_thorn") 
  artmod(nearest_anomaly,af,"af_rusty_thorn","af_vyvert","mutant_snork_leg","bread","info_artmod_fireball_buzz","af_fireball") 
  artmod(nearest_anomaly,af,"af_cristall_flower","af_medusa","af_fireball","mutant_krovosos_jaw","info_artmod_cristall_buzz","af_cristall") 
  artmod(nearest_anomaly,af,"af_gravi","af_blood","af_electra_flash","mutant_psevdodog_tail","info_artmod_night_star_buzz","af_gold_fish") 
  artmod(nearest_anomaly,af,"af_night_star","af_soul","af_electra_moonlight","af_rusty_sea-urchin","info_artmod_fuzz_kolobok_buzz","af_fuzz_kolobok")
  artmod(nearest_anomaly,af,"mutant_face_tushkano","bandage","conserva","mutant_dog_tail","info_artmod_vyvert_buzz","af_vyvert")   
end 
if string.find(anom_sect,"_mincer")~=nil then 
  artmod(nearest_anomaly,af,"af_blood","af_medusa","bandage","conserva","info_artmod_cristall_flower_mincer","af_cristall_flower") 
  artmod(nearest_anomaly,af,"af_vyvert","bandage","vodka","mutant_dog_tail","info_artmod_drops_mincer","af_drops") 
  artmod(nearest_anomaly,af,"af_electra_sparkler","af_medusa","conserva","mutant_dog_tail","info_artmod_rusty_kristall_mincer","af_rusty_kristall") 
  artmod(nearest_anomaly,af,"af_fireball","af_blood","af_ameba_slug","mutant_krovosos_jaw","info_artmod_electra_moonlight_mincer","af_electra_moonlight") 
  artmod(nearest_anomaly,af,"af_electra_flash","af_vyvert","af_fireball","mutant_psevdodog_tail","info_artmod_ameba_slug_mincer","af_ameba_mica") 
  artmod(nearest_anomaly,af,"af_ameba_mica","af_rusty_sea-urchin","af_gold_fish","af_night_star","info_artmod_dummy_glassbeads_mincer","af_dummy_glassbeads") 
  if af_sect=="af_dummy_spring_red" and db.actor:has_info("info_red_spring") then af_zone_off(af) end
end
if string.find(anom_sect,"_mosquito_bald")~=nil then 
  artmod(nearest_anomaly,af,"af_vyvert","af_blood","vodka","mutant_dog_tail","info_artmod_mincer_meat_mosquito_bald","af_mincer_meat") 
  artmod(nearest_anomaly,af,"af_drops","bandage","kolbasa","mutant_dog_tail","info_artmod_electra_sparkler_mosquito_bald","af_electra_sparkler") 
  artmod(nearest_anomaly,af,"af_medusa","af_drops","bandage","vodka","info_artmod_ameba_slug_mosquito_bald","af_ameba_slug") 
  artmod(nearest_anomaly,af,"af_mincer_meat","af_vyvert","af_fireball","mutant_flesh_eye","info_artmod_cristall_mosquito_bald","af_cristall") 
  artmod(nearest_anomaly,af,"af_ameba_slime","af_blood","af_rusty_kristall","mutant_krovosos_jaw","info_artmod_rusty_sea-urchin_mosquito_bald","af_rusty_sea-urchin") 
  artmod(nearest_anomaly,af,"af_ameba_mica","af_cristall","af_mincer_meat","af_night_star","info_artmod_dummy_dummy_mosquito_bald","af_dummy_dummy") 
  if af_sect=="af_dummy_pellicle_red" and db.actor:has_info("info_red_pellicle") then af_zone_off(af) end
end
if string.find(anom_sect,"_gravi_zone")~=nil then 
  artmod(nearest_anomaly,af,"af_vyvert","af_medusa","kolbasa","mutant_dog_tail","info_artmod_ameba_slug_gravi_zone","af_ameba_slug") 
  artmod(nearest_anomaly,af,"af_medusa","bandage","conserva","mutant_dog_tail","info_artmod_ameba_slime_gravi_zone","af_ameba_slime") 
  artmod(nearest_anomaly,af,"af_vyvert","af_blood","mutant_dog_tail","vodka","info_artmod_electra_flash_gravi_zone","af_electra_flash") 
  artmod(nearest_anomaly,af,"af_rusty_thorn","af_medusa","af_rusty_kristall","mutant_psevdodog_tail","info_artmod_night_star_gravi_zone","af_night_star") 
  artmod(nearest_anomaly,af,"af_electra_flash","af_cristall_flower","af_ameba_slug","mutant_snork_leg","info_artmod_soul_gravi_zone","af_soul") 
  artmod(nearest_anomaly,af,"af_ameba_mica","af_cristall","af_gold_fish","af_soul","info_artmod_dummy_pellicle_gravi_zone","af_dummy_pellicle") 
  if af_sect=="af_dummy_battery_red" and db.actor:has_info("info_red_battery") then af_zone_off(af) end 
end
if string.find(anom_sect,"_ice")~=nil then
	artmod(nearest_anomaly,af,"af_dummy_dummy","af_rusty_sea-urchin","af_gold_fish","af_night_star","life_heart_final","af_life_heart") 
  artmod01(af,"af_dummy_battery","af_dummy_battery_red","info_red_battery")
  artmod01(af,"af_dummy_spring","af_dummy_spring_red","info_red_spring")
  artmod01(af,"af_dummy_pellicle","af_dummy_pellicle_red","info_red_pellicle")
end end

function artmod(nearest_anomaly,af,item1,item2,item3,item4,info_artmod,item_targ)
local af_sect=af:section()
local pos=af:position()
local startflag=false
local zombieflag=false
   if not db.actor:has_info(info_artmod) then 
     return 
   end
   if alife():object(af:id())==nil then 
     return 
   end
   if (af_sect==item1 or af_sect==item2 or af_sect==item3 or af_sect==item4) and db.actor:has_info(info_artmod) then
      local s={}
      s.i0t=-1 
      s.i1t=-1 
      s.i2t=-1 
      s.i3t=-1 
      s.i4t=-1
      s.ams=0
      s.ami=-1
      s=amk.unpack_array_from_string(amk.load_variable("artmod_activation",amk.pack_array_to_string(s)))
      if s.i0t~=nearest_anomaly then 
        s.i0t=nearest_anomaly
        s.i1t=-1 
        s.i2t=-1 
        s.i3t=-1 
        s.i4t=-1
        s.ams=0
        s.ami=-1
      end
	if s.ams==1 and s.ami~=info_artmod then return 
	end
	if af_sect==item1 and s.i1t==-1 then s.i1t=af:id() 
		if s.ams==0 then startflag = true 
		end 
	end
	if af_sect==item2 and s.i2t==-1 then s.i2t=af:id() 
		if s.ams==0 then startflag = true 
		end 
	end
	if af_sect==item3 and s.i3t==-1 then s.i3t=af:id() 
		if s.ams==0 then startflag = true 
		end 
	end
	if af_sect==item4 and s.i4t==-1 then s.i4t=af:id() 
		if s.ams==0 then startflag = true 
		end 
	end
	if startflag then
         s.ams=1
         s.ami=info_artmod
         startflag=false
	end         
	if ((s.i1t~=-1) and (alife():object(s.i1t)==nil)) then s.i1t=-1 zombieflag=true end
	if ((s.i2t~=-1) and (alife():object(s.i2t)==nil)) then s.i2t=-1 zombieflag=true end
	if ((s.i3t~=-1) and (alife():object(s.i3t)==nil)) then s.i3t=-1 zombieflag=true end
	if ((s.i4t~=-1) and (alife():object(s.i4t)==nil)) then s.i4t=-1 zombieflag=true end
	if zombieflag then
		if (s.i1t==-1 and s.i2t==-1 and s.i3t==-1 and s.i4t==-1) then
          s.i0t=-1 
          s.ams=0
          s.ami=-1
          zombieflag = false
		end 
	end
	if (s.i1t~=-1 and s.i2t~=-1 and s.i3t~=-1 and s.i4t~=-1) then
        alife():release(alife():object(s.i1t))
        alife():release(alife():object(s.i2t))
        alife():release(alife():object(s.i3t))
        alife():release(alife():object(s.i4t))
        level.add_pp_effector("teleport.ppe", 1524, false)
        amk.del_variable("artmod_activation")
        amk_mod.af_start_transform_timer(amk_mod.af_start_transform(100,0,"af_buliz",item_targ) , pos ,0,0,5,game.translate_string(amk.get_inv_name(item_targ)))
        return
    end
      amk.save_variable("artmod_activation",amk.pack_array_to_string(s))
   end
end

function artmod01(af,item,item_targ,info_zone_off)
local af_sect=af:section()
local pos=af:position()
	if af_sect==item and db.actor:has_info(info_zone_off) then
      amk_mod.af_flash(af)
      amk_mod.af_start_transform_timer(amk_mod.af_start_transform(99,1,af_sect,item_targ), pos ,0,0,5,game.translate_string(amk.get_inv_name(item_targ)))
    end
end
function make_kill_task_failed(actor,npc,p1,p2) 
  local nid=npc:id()
  if nid==db.actor:id() then
    nid=actor:id()
  end
  local targets=task_manager.amk_kill_targets()
  for n,v in pairs(targets) do
    if v.id==nid then
      task_manager.make_task_failed(v.task_id)
    end
  end  
end

function check_used_item(obj) 
arc_main.get_item(obj)
local info=nil 
if level.name()=="l03_agroprom" and obj:section()=="amk_zapiska" then add_new_escape_100() amk.drop_item(db.actor,obj) amk.remove_item(obj) 
elseif level.name()=="l10_radar" and obj:section()=="rad_document6" then add_new_darkvalley_107() amk.drop_item(db.actor,obj) amk.remove_item(obj) 
elseif level.name()=="l03_agroprom" and obj:section()=="rad_document6" then info="info_artmod_rusty_thorn_buzz" amk.drop_item(db.actor,obj) amk.remove_item(obj) info_artmod()
elseif level.name()=="l01_escape" and obj:section()=="rad_document6" then info="info_artmod_rusty_kristall_mincer" amk.drop_item(db.actor,obj) amk.remove_item(obj)  info_artmod()
elseif level.name()=="l10_radar" and obj:section()=="sak_document" then add_new_radar_106() amk.drop_item(db.actor,obj) amk.remove_item(obj) 
elseif level.name()~="l03_agroprom" and db.actor:has_info("ratcatcher_order_done") then info="ratcatcher_out" 
elseif level.name()~="l05_bar" and db.actor:has_info("info_way_false") then info="informer_out" 
elseif not db.actor:has_info("info_way104a") and obj:section()=="ara_pda" then  add_new_rostok_105()  add_new_mil_104() 
elseif not db.actor:has_info("info_artmod_electra_flash_zharka") and obj:section()=="sak_document2" then info="info_artmod_electra_flash_zharka" info_artmod()
elseif not db.actor:has_info("info_artmod_drops_mincer") and obj:section()=="garbage_pda" then info="info_artmod_drops_mincer" info_artmod()
elseif not db.actor:has_info("info_artmod_ameba_mica_galant") and obj:section()=="rad_pda" then info="info_artmod_ameba_mica_galant" info_artmod()
elseif not db.actor:has_info("info_artmod_fireball_buzz") and obj:section()=="volkodav_pda" then info="info_artmod_fireball_buzz" info_artmod()
elseif obj:section()=="outfit_bandit_m1" and not db.actor:has_info("esc_shustryi_outfit") 
then info="esc_shustryi_outfit"
elseif obj:section()=="sak_book4" and not db.actor:has_info("doktor_alife") 
then info="doktor_alife" info_doktor()
elseif obj:section()=="repair_item_outfit" or obj:section()=="repair_item_weapon" then repair_box_close(obj) 
end 
  if db.actor==nil or info==nil or db.actor:has_info(info) then
    return
  end
  db.actor:give_info_portion(info)
end

local point_drop={
    {x=-240, y=-7, z=300},
    {x=-250, y=-5, z=294},
	{x=55, y=18, z=157},
    {x=67, y=22, z=154},
	{x=7, y=-1, z=115},
    {x=12, y=1, z=125},
	{x=35, y=60, z=30}, 
	{x=17, y=50, z=35},
	{x=376, y=-1, z=15}, 
	{x=393, y=2, z=65} 
	} 

function check_droped_item(obj)
arc_main.lose_item(obj)
local info=nil 
if level.name()=="l07_military" and db.actor:has_info("yan_scientist_teleport_01_start") and obj:section()=="sak_resiver_yantar" and amk.check_npc_in_box(db.actor, point_drop[1],point_drop[2])~=false then info="yan_scientist_teleport_01_done" amk.remove_item(obj) amk.spawn_item("m_sak_resiver_yantar",vector():set(-244.62,-5.98,299.94),1797,89408) 
elseif level.name()=="l01_escape" and db.actor:has_info("yan_scientist_teleport_02_start") and obj:section()=="sak_resiver_yantar" and amk.check_npc_in_box(db.actor, point_drop[3],point_drop[4])~=false then info="yan_scientist_teleport_02_done" amk.remove_item(obj) amk.spawn_item("m_sak_resiver_yantar",vector():set(62.99,29.23,154.39),97,359827) 
elseif level.name()=="l11_pripyat" and db.actor:has_info("yan_scientist_teleport_03_start") and obj:section()=="sak_resiver_yantar" and amk.check_npc_in_box(db.actor, point_drop[5],point_drop[6])~=false then info="yan_scientist_teleport_03_done" amk.remove_item(obj) amk.spawn_item("m_sak_resiver_yantar",vector():set(9.47,0.32,119.13),2166,113785)
elseif level.name()=="l12_stancia" and db.actor:has_info("life_heart_sahar_start") and obj:section()=="sak_resiver_yantar" and amk.check_npc_in_box(db.actor, point_drop[9],point_drop[10])~=false then info="life_heart_sahar_have" amk.remove_item(obj) amk.spawn_item("m_sak_resiver_yantar",vector():set(387.51,0.16,31.10),2384,168953)
elseif level.name()=="l12u_sarcofag" and db.actor:has_info("strelok_pda_have") and obj:section()=="af_gold_fish" and amk.check_npc_in_box(db.actor, point_drop[7],point_drop[8])~=false then amk_mod.af_flash(obj) get_sarcofag_stancia()
elseif obj:section()=="af_life_heart" and db.actor:has_info("life_heart_final") then deadman_to_life(obj)
elseif obj:section()=="repair_box_outfit" then repair_box_outfit(obj)
end 
  if db.actor==nil or info==nil or db.actor:has_info(info) then
    return
  end
  db.actor:give_info_portion(info)
end
function agr_ratcatcher__id()
for a=5000,6000,1 do
		local obj=alife():object(a)
		if (obj and obj.name and obj:name() == "agr_ratcatcher") then
		--dbglog("Entered: "..obj:name().." id "..a.." sid "..obj.m_story_id) -- id~5564
		amk.save_variable("agr_ratcatcher_id", a) 
		end
	end
end
local nepis={9501,4,5,6,7,9,22,32,92,104,107,115,302,370,400,406,505,506,507,516,702,707,728,734,777888}
local nepis_id={3450,499,193,156,161,174,244,224,344,998,1101,1019,7026,7058,4899,4902,1667,1666,1668,1674,2157,2161,2162,2163,2158}
local nepis_logic={4,5,6,7,9,22,32,92,104,107} --шустрый, лис,волк,толик,петруха,фанат,кузнецов, проводник,юрик, бес
function new_sak_logic()
		--[[--local npis=nepis_logic[3]
		local obj=alife():story_object(npis)
		local tbl = amk.read_stalker_params(obj)
		dbglog("Entered: "..tbl.custom)
		tbl.custom="[smart_terrains]\nsak_lager = true"
		dbglog("Entered: "..obj:name().." sid-"..obj.m_story_id) --id~11017
		dbglog("Entered: "..tbl.custom)
		amk.write_stalker_params(tbl, obj)	
			--local tb2 = amk.read_stalker_params(obj)
			--dbglog("Entered: "..tb2.custom)--]]
end
function deadman_to_life(art)
	for a=1,table.getn(nepis),1 do 
		local npis=nepis[a]
		local npis_id=nepis_id[a]
		local obj=alife():story_object(npis)
		if  obj and IsStalker(obj) and not obj:alive() then
			local name=obj:name()
			local posobj=obj.position
			local actorpos=db.actor:position()
			if (posobj:distance_to(actorpos) < 2) then 
			amk_mod.af_flash(art)
			set_npc_health(obj,npis_id)
			end
		end
	end
end
function set_npc_health(obj,nps_id)
	alife():release(obj)
	--local obj = alife():story_object(sid)  
	--if not obj then 
		alife():create(nps_id)
	--end				
end
function nepis_umer()
	for a=1,table.getn(nepis),1 do
	local npis=nepis[a]
	local obj=alife():story_object(npis)
	if  obj and IsStalker(obj) and not obj:alive() then
	local name=obj:name()
		if not has_alife_info(name.."_umer") then
			db.actor:give_info_portion(name.."_umer")
		end
	end
	end
	if has_alife_info("mil_Svoboda_trader_plan_faze") and  has_alife_info("agr_ratcatcher_umer") then
	db.actor:give_info_portion("mil_Svoboda_trader_plan_2faze") add_sak_plan()
	elseif (has_alife_info("esc_vagon_wounded_umer") or has_alife_info("esc_wolf_umer")) and not has_alife_info("mil_volk_resiver_fail") then
	db.actor:give_info_portion("mil_volk_resiver_fail")
	elseif (has_alife_info("bar_dolg_ivancov_umer") or has_alife_info("mil_freedom_member0021_umer")) and not has_alife_info("bar_ivancov_rg6_fail") then
	db.actor:give_info_portion("bar_ivancov_rg6_fail")
	elseif (has_alife_info("about_life_heart_sahar") and has_alife_info("about_life_heart_sidor") and has_alife_info("about_life_heart_barman")) and not has_alife_info("about_life_heart_done") then
	db.actor:give_info_portion("about_life_heart_done")
	end
end
function af_zone_off(af)
 local anom=amk_anoms.get_nearest_anomaly(db.actor)
 local sid=alife():object(anom)
  level.add_pp_effector("teleport.ppe", 1524, false)
  amk.remove_item(af)
  alife():release(sid,true)
end
function inv_item_cond(item,val)
local obj=db.actor:object(item)
	if obj~=nil then
	  obj:set_condition(val)
	end
end
function get_lc_data(obj)
	local packet = net_packet()
	obj:STATE_Write(packet)
	local t={}
	t.game_vertex_id = packet:r_u16()
	t.distance = packet:r_float()
	t.direct_control = packet:r_s32()
	t.level_vertex_id = packet:r_s32()
	t.object_flags = packet:r_s32()
	t.custom_data = packet:r_stringZ()
	t.story_id = packet:r_s32()
	t.spawn_story_id = packet:r_s32()
	local shape_count = packet:r_u8()
	t.shapes={}
	for i=1,shape_count do
	local shape_type = packet:r_u8()
	t.shapes[i]={}
	t.shapes[i].shtype=shape_type
	if shape_type == 0 then
	t.shapes[i].center = packet:r_vec3()
	t.shapes[i].radius = packet:r_float()
	else
	t.shapes[i].v1 = packet:r_vec3()
	t.shapes[i].v2 = packet:r_vec3()
	t.shapes[i].v3 = packet:r_vec3()
	t.shapes[i].offset = packet:r_vec3()
	end
	end
	t.restrictor_type = packet:r_u8()
	t.dest_game_vertex_id = packet:r_u16()
	t.dest_level_vertex_id = packet:r_s32()
	t.dest_position = packet:r_vec3()
	t.dest_direction = packet:r_vec3()
	t.dest_level_name = packet:r_stringZ()
	t.dest_graph_point = packet:r_stringZ()
	t.silent_mode = packet:r_u8()
	if packet:r_elapsed() ~= 0 then
		abort("left=%d", packet:r_elapsed())
	end
	return t
end

function set_lc_data(t,obj)
	local packet = net_packet()
	obj:STATE_Write(packet)
	packet:w_begin(t.game_vertex_id)
	packet:w_float(t.distance)
	packet:w_s32(t.direct_control)
	packet:w_s32(t.level_vertex_id)
	packet:w_s32(t.object_flags)
	packet:w_stringZ(t.custom_data)
	packet:w_s32(t.story_id)
	packet:w_s32(t.spawn_story_id)
	packet:w_u8(table.getn(t.shapes))
	for i=1,table.getn(t.shapes) do
	packet:w_u8(t.shapes[i].shtype)
	if t.shapes[i].shtype == 0 then
	packet:w_vec3(t.shapes[i].center)
	packet:w_float(t.shapes[i].radius)
	else
	packet:w_vec3(t.shapes[i].v1)
	packet:w_vec3(t.shapes[i].v2)
	packet:w_vec3(t.shapes[i].v3)
	packet:w_vec3(t.shapes[i].offset)
	end
	end
	packet:w_u8(t.restrictor_type)
	packet:w_u16(t.dest_game_vertex_id)
	packet:w_s32(t.dest_level_vertex_id)
	packet:w_vec3(t.dest_position)
	packet:w_vec3(t.dest_direction)
	packet:w_stringZ(t.dest_level_name)
	packet:w_stringZ(t.dest_graph_point)
	packet:w_u8(t.silent_mode)
	packet:r_seek(0)
	obj:STATE_Read(packet, packet:w_tell())
end
local points_kordon={
    {position={x=-244.69,y=-14.27,z=-16.33},gv=67,lv=12579}, 
    {position={x=107.54,y=-7.14,z=1.09},gv=119,lv=408816}, 
	{position={x=71.48,y=1.92,z=158.79},gv=96,lv=362726}, 
	{position={x=33.69,y=5.02,z=407.89},gv=246,lv=565356}, 
    {position={x=220.57,y=7.62,z=100.55},gv=152,lv=511605} 
}
local points_yantar={
    {position={x=165.06,y=-8.19,z=-103.95},gv=1442,lv=131181}, 
    {position={x=92.58,y=0.02,z=-39.23},gv=1515,lv=87813},
	{position={x=34.48,y=0.04,z=18.19},gv=1445,lv=56341},
	{position={x=24.61,y=0.02,z=-62.60},gv=1505,lv=51069}, 
    {position={x=-60.17,y=-10.21,z=-202.66},gv=1447,lv=17529} 
}
local points_pripat={
    {position={x=49.78,y=-3.6,z=120.99},gv=2166,lv=161768}, 
    {position={x=191.20,y=-2.0,z=219.52},gv=2219,lv=260280}, 
	{position={x=164.51,y=-3.89,z=80.83},gv=2145,lv=250751}, 
	{position={x=-97.65,y=-2.4,z=71.81},gv=2140,lv=18233}, 
    {position={x=116.64,y=-0.61,z=216.98},gv=2163,lv=226288} 
}
local points_military={
    {position={x=81.65,y=-12.57,z=60.67},gv=1558,lv=379105}, 
    {position={x=-35.96,y=-21.29,z=375.80},gv=1821,lv=272475}, 
	{position={x=-264.86,y=-22.6,z=275.85},gv=1797,lv=72698},
    {position={x=-340.59,y=-13.62,z=388.84},gv=1847,lv=12469}
}
local points_stancia={
    {position={x=374.82,y=0,z=33.345},gv=2384,lv=161393} 
}
local out_points_kordon_sak={
    {position={x=-210,y=-20.53,z=-145.78},gv=61,lv=43273}}
local out_points_kordon={
    {position={x=301.11,y=13.31,z=276.43},gv=246,lv=565356}}
local out_points_yantar={
    {position={x=-60.78,y=-13.02,z=-253.92},gv=1454,lv=17204}}
local out_points_pripat={
    {position={x=52.17,y=-3.5,z=120.94},gv=2166,lv=164012}}
local out_points_military={
    {position={x=-94.71,y=-20.55,z=229.54},gv=1734,lv=220072}}
local out_points_sarcofag={
    {position={x=23.58,y=56,z=25.68},gv=2417,lv=5160}}	
function get_kordon_military() get_teleport("kordon","military",1,9121) end
function get_kordon_yantar() get_teleport("kordon","yantar",1,9121) end
function get_kordon_pripyat() get_teleport("kordon","pripat",1,9121) end
function get_pripyat_military() get_teleport("pripat","military",1,9122) end
function get_pripyat_yantar() get_teleport("pripat","yantar",1,9122) end
function get_pripyat_kordon() get_teleport("pripat","kordon",1,9122) end
function get_military_kordon() get_teleport("military","kordon",1,9123) end
function get_military_pripyat() get_teleport("military","pripat",1,9123) end
function get_military_yantar() get_teleport("military","yantar",1,9123) end
function get_yantar_military() get_teleport("yantar","military",1,9124) end
function get_yantar_kordon() get_teleport("yantar","kordon",1,9124) end
function get_yantar_pripyat() get_teleport("yantar","pripat",1,9124) end
function get_kordon_militaryr() get_teleport("kordon","military",0,9121) end
function get_kordon_yantarr() get_teleport("kordon","yantar",0,9121) end
function get_kordon_pripyatr() get_teleport("kordon","pripat",0,9121) end
function get_pripyat_militaryr() get_teleport("pripat","military",0,9122) end
function get_pripyat_yantarr() get_teleport("pripat","yantar",0,9122) end
function get_pripyat_kordonr() get_teleport("pripat","kordon",0,9122) end
function get_military_kordonr() get_teleport("military","kordon",0,9123) end
function get_military_pripyatr() get_teleport("military","pripat",0,9123) end
function get_military_yantarr() get_teleport("military","yantar",0,9123) end
function get_yantar_militaryr() get_teleport("yantar","military",0,9124) end
function get_yantar_kordonr() get_teleport("yantar","kordon",0,9124) end
function get_yantar_pripyatr() get_teleport("yantar","pripat",0,9124) end
function get_sarcofag_stancia() get_teleport("sarcofag","stancia",1,9125) end
function get_teleport(pos_out,pos_in,made,sidlc) local obj1, name_level, obj_tport local a, b
if     pos_out == "kordon"	then	a = out_points_kordon[1]
elseif pos_out == "pripat" 	then 	a = out_points_pripat[1]
elseif pos_out == "military" then 	a = out_points_military[1]
elseif pos_out == "yantar" 	then 	a = out_points_yantar[1]
elseif pos_out == "sarcofag" then 	a = out_points_sarcofag[1]
end
if made==0 then 
if     pos_in == "kordon"	then	name_level="l01_escape" 
b = points_kordon[math.random(table.getn(points_kordon))]
elseif pos_in == "pripat" 	then 	name_level="l11_pripyat" 
b = points_pripat[math.random(table.getn(points_pripat))]
elseif pos_in == "military" then 	name_level="l07_military" 
b = points_military[math.random(table.getn(points_military))]
elseif pos_in == "yantar" 	then 	name_level="l08_yantar" 
b = points_yantar[math.random(table.getn(points_yantar))] end
elseif made==1 then
if     pos_in == "kordon"	then	name_level="l01_escape" b = points_kordon[1]
elseif pos_in == "pripat" 	then 	name_level="l11_pripyat" b = points_pripat[1]
elseif pos_in == "military" then 	name_level="l07_military" b = points_military[1]
elseif pos_in == "yantar" 	then 	name_level="l08_yantar" b = points_yantar[1]
elseif pos_in == "stancia" 	then 	name_level="l12_stancia" b = points_stancia[1]  end end
obj1=alife():create("level_changer",vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
obj_tp=amk.spawn_item("zone_teleport",vector():set(a.position.x,a.position.y,a.position.z), a.gv, a.lv)
obj_tport=obj_tp.id
amk.save_variable("sak_teleport", obj_tport)  
if obj1 then local obj2 = alife():story_object(9120) local t = get_lc_data(obj2)
t.story_id = sidlc
t.dest_level_name = name_level
t.dest_position = vector():set(b.position.x,b.position.y,b.position.z)
t.dest_game_vertex_id = b.gv
t.dest_level_vertex_id = b.lv
t.silent_mode = 1
set_lc_data(t,obj1) end 
info_teleport()
end
function out_teleport()
local sid={9121,9122,9123,9124,9125}
local lev={"l01_escape","l11_pripyat","l07_military","l08_yantar","l12u_sarcofag"}
	for a=1,table.getn(sid),1 do
	local sidlc=sid[a]
	local lname=lev[a]	
	local obj=alife():story_object(sidlc)
		if obj and level.name()~=lname then
		local objt = amk.load_variable("sak_teleport", 0)
		alife():release(obj)
			if objt ~= 0 then
                alife():release(alife():object(objt), true)
            end
		amk.del_variable("sak_teleport")
		end
	end
	show_time()
	arc_main.actor_update() -- !!!!!!!!!!!
end
function show_time()
	local hud = get_hud()
	local cs = hud:GetCustomStatic("hud_show_time")
	if cs == nil then
		hud:AddCustomStatic("hud_show_time", true)
		cs = hud:GetCustomStatic("hud_show_time")
	end
	local time_h = level.get_time_hours()
	local time_m = level.get_time_minutes()
	local msg
	msg = string.format("%02d:%02d\\n", time_h, time_m)
	if cs ~= nil then cs:wnd():SetText(msg)
	end
end
function readvu32u8(packet)
  local v={}
  local len=packet:r_s32()
  for i=1,len,1 do
    table.insert(v,packet:r_u8())
  end return v end
function readvu8u8(packet)
  local v={}
  local len=8
  for i=1,len,1 do
    table.insert(v,packet:r_u8())
  end return v end
function readvu32u16(packet)
  local v={}
  local len=packet:r_s32()
  for i=1,len,1 do
    table.insert(v,packet:r_u16())
  end return v end
function writevu32u8(pk,v)
  local len=table.getn(v)
  pk:w_s32(len)
  for i=1,len,1 do
    pk:w_u8(v[i])
  end
end
function writevu8u8(pk,v)
  local len=8
  for i=1,len,1 do
    pk:w_u8(v[i])
  end
end
function writevu32u16(pk,v)
  local len=table.getn(v)
  pk:w_s32(len)
  for i=1,len,1 do
    pk:w_u16(v[i])
  end
end
function parse_skeleton_packet(ret,stpk,updpk)
  ret.skeleton=stpk:r_stringZ()
  ret.skeleton_flags=stpk:r_u8()
  ret.source_id=stpk:r_u16()
  return ret end
function fill_skeleton_packet(ret,stpk,updpk)
  stpk:w_stringZ(ret.skeleton)
  stpk:w_u8(ret.skeleton_flags)
  stpk:w_u16(ret.source_id)
end
function parse_visual_packet(ret,stpk,updpk)
  ret.visual=stpk:r_stringZ()
  ret.vsu8u1=stpk:r_u8()
  return ret end
function fill_visual_packet(ret,stpk,updpk)
  stpk:w_stringZ(ret.visual)
  stpk:w_u8(ret.vsu8u1)
end
function parse_object_physic_packet(ret,stpk,updpk)
	ret.physic_type=stpk:r_s32()
	ret.mass=stpk:r_float()
	ret.fixed_bones=stpk:r_stringZ()
  return ret end
function fill_object_physic_packet(ret,stpk,updpk)
	stpk:w_s32(ret.physic_type)
	stpk:w_float(ret.mass)
	stpk:w_stringZ(ret.fixed_bones)
end
function parse_shape_packet(t,stpk,uppk)
	local shape_count = stpk:r_u8()
	t.shapes={}
	for i=1,shape_count do
		local shape_type = stpk:r_u8()
		t.shapes[i]={}
		t.shapes[i].shtype=shape_type
		if shape_type == 0 then
			t.shapes[i].center = stpk:r_vec3()
			t.shapes[i].radius = stpk:r_float()
		else
			t.shapes[i].v1 = stpk:r_vec3()
			t.shapes[i].v2 = stpk:r_vec3()
			t.shapes[i].v3 = stpk:r_vec3()
			t.shapes[i].offset = stpk:r_vec3()
		end
	end
end
function fill_shape_packet(t,stpk,updpk)
	stpk:w_u8(table.getn(t.shapes))
	for i=1,table.getn(t.shapes) do
		stpk:w_u8(t.shapes[i].shtype)
		if t.shapes[i].shtype == 0 then
			stpk:w_vec3(t.shapes[i].center)
			stpk:w_float(t.shapes[i].radius)
		else
			stpk:w_vec3(t.shapes[i].v1)
			stpk:w_vec3(t.shapes[i].v2)
			stpk:w_vec3(t.shapes[i].v3)
			stpk:w_vec3(t.shapes[i].offset)
		end
	end
end
function parse_object_packet(ret,stpk,updpk)
  ret.gvid=stpk:r_u16()
  ret.obf32u1=stpk:r_float()
  ret.obs32u2=stpk:r_s32()
  ret.lvid=stpk:r_s32()
  ret.oflags=stpk:r_s32()
  ret.custom=stpk:r_stringZ()
  ret.sid=stpk:r_s32()
  ret.obs32u3=stpk:r_s32()
  return ret
end
function fill_object_packet(ret,stpk,updpk)
  stpk:w_u16(ret.gvid)
  stpk:w_float(ret.obf32u1)
  stpk:w_s32(ret.obs32u2)
  stpk:w_s32(ret.lvid)
  stpk:w_s32(ret.oflags)
  stpk:w_stringZ(ret.custom)
  stpk:w_s32(ret.sid)
  stpk:w_s32(ret.obs32u3)
end
function get_restrictor_data(sobj)
  local stpk=net_packet()
  local uppk=net_packet()
  sobj:STATE_Write(stpk)
  sobj:UPDATE_Write(uppk)
  local size=stpk:w_tell()
  local size1=uppk:w_tell()
  stpk:r_seek(0)
  uppk:r_seek(0)
  local t={}
	parse_object_packet(t,stpk,uppk,size)
	parse_shape_packet(t,stpk,uppk,size)
	t.restrictor_type = stpk:r_u8()
  return t end
function set_restrictor_data(t,sobj)
  local stpk=net_packet()
  local uppk=net_packet()
  fill_object_packet(t,stpk,uppk)
  fill_shape_packet(t,stpk,uppk)
	stpk:w_u8(t.restrictor_type)
  local size=stpk:w_tell()
  local size1=uppk:w_tell()
  stpk:r_seek(0)
  uppk:r_seek(0)
  sobj:STATE_Read(stpk,size)
  sobj:UPDATE_Read(uppk)
end
function get_destroyable_data(sobj)
  local stpk=net_packet()
  local uppk=net_packet()
  sobj:STATE_Write(stpk)
  sobj:UPDATE_Write(uppk)
  local size=stpk:w_tell()
  local size1=uppk:w_tell()
  stpk:r_seek(0)
  uppk:r_seek(0)
  local t={}
  parse_object_packet(t,stpk,uppk,size)
  parse_visual_packet(t,stpk,uppk,size)
  parse_skeleton_packet(t,stpk,uppk,size)
  parse_object_physic_packet(t,stpk,uppk,size)
  return t end
function set_destroyable_data(t,sobj)
  local stpk=net_packet()
  local uppk=net_packet()
	fill_object_packet(t,stpk,uppk)
	fill_visual_packet(t,stpk,uppk)
	fill_skeleton_packet(t,stpk,uppk)
	fill_object_physic_packet(t,stpk,uppk)
  local size=stpk:w_tell()
  local size1=uppk:w_tell()
  stpk:r_seek(0)
  uppk:r_seek(0)
  sobj:STATE_Read(stpk,size)
  sobj:UPDATE_Read(uppk)
end
function switch_timer_stancia()
	for a=2000,2100,1 do
		local obj=alife():object(a)
		if (obj and obj.name and obj:name() == "aes_space_restrictor_timer") then
		local params=get_restrictor_data(obj)
		--dbglog("Entered: "..obj:name().." id-"..a.." sid-"..obj.m_story_id) --id~2031
		params.custom="[logic]\ncfg = scripts\\aes\\aes_space_timer.ltx"
		set_restrictor_data(params,obj)
		end
	end
end
function switch_mil_matugalnik()
	for a=10500,11500,1 do
		local obj=alife():object(a)
		if (obj and obj.name and obj:name() == "mil_physic_destroyable_object_0046") then
		local params=get_destroyable_data(obj)
		--dbglog("Entered: "..params.custom)
		--dbglog("Entered: "..obj:name().." id-"..a.." sid-"..obj.m_story_id) --id~11017
		params.custom="[logic]\ncfg = scripts\\mil\\matugalnik.ltx"
		--dbglog("Entered: "..params.custom)
		set_destroyable_data(params,obj)
		end
	end
end
local rep_percent=0.1
function repair_box_outfit(obj)
	local actor=db.actor
	local dir=device().cam_dir
	local a=vector() a.y=math.atan2(dir.x,dir.z)
	local xdelta=math.sin(a.y)
	local zdelta=math.cos(a.y)
	local act_pos=actor:position()
	local lvid=actor:level_vertex_id()
	local gvid=actor:game_vertex_id()
	local robjd
	local repiout =amk.load_variable("repair_item_outfit", 0)
	local repiweap =amk.load_variable("repair_item_weapon", 0)
	local enemy=false 
		for a=0,65534 do
			local objg=level.object_by_id(a)
			if objg then
				if (objg and (( IsStalker(objg) and amk.get_npc_relation(objg,db.actor)=="enemy" ) or 
				IsMonster(objg)) and objg:position():distance_to(db.actor:position())<40 and objg:see(db.actor))
				then 
				enemy=true 
				break
				end 
			end 
		end
		if enemy==true then 
		amk.send_tip(game.translate_string("Какой ремонт! Враг рядом!"),nil,nil,5) 
		else
			if obj:section()=="repair_box_outfit" then 
				if (repiout~=0 or repiweap~=0) and (repiout or repiweap) then
	amk.remove_item(obj)
				robjd=amk.spawn_item("m_repair_box_outfit",vector():set((act_pos.x+xdelta),(act_pos.y+0.5),(act_pos.z+zdelta)),gvid,lvid)
					if repiout~=0 then
					se_respawn.create_ammo("repair_item_outfit", robjd.position, robjd.level_vertex_id, robjd.game_vertex_id, robjd.id,repiout)
					end
					if repiweap~=0 then
					se_respawn.create_ammo("repair_item_weapon", robjd.position, robjd.level_vertex_id, robjd.game_vertex_id, robjd.id,repiweap)
					end
				amk.save_variable("repair_box", robjd.id)
				else
				amk.remove_item(obj)
				amk.spawn_item("repair_box_outfit",vector():set((act_pos.x+xdelta),(act_pos.y+0.5),(act_pos.z+zdelta)),gvid,lvid)
				end
			end
		end
end
function repair_box_close(obj)
	local objd = amk.load_variable("repair_box", 0)
	local robjd = alife():object(objd)
	if robjd and obj then
		local pos=robjd.position
		local lvid=robjd.level_vertex_id
		local gvid=robjd.game_vertex_id
		local repiout =amk.load_variable("repair_item_outfit", 0)
		local repiweap =amk.load_variable("repair_item_weapon", 0)
		local slot = 0
		local slot_1 = db.actor:item_in_slot(1)
		local slot_2 = db.actor:item_in_slot(2)
		local armor = db.actor:item_in_slot(6)
		if (slot_1 ~= nil) then
			slot = 1
		end
		if (slot_2 ~= nil) then
			if (slot == 0) then
				slot = 2
			elseif (slot == 1) then
				if (slot_1:condition() > slot_2:condition()) then
					slot = 2
				end
			end
		end
			if obj and obj:section()=="repair_item_weapon" then
				if (slot_1 and slot_1:condition() >=0.5 and slot_1:condition() <0.97) or (slot_2 and slot_2:condition() >=0.5 and slot_2:condition() <0.97) then
					repiweap=repiweap-1
					amk.save_variable("repair_item_weapon", repiweap)
					if (slot == 1) then
						local rep_point = slot_1:condition() + rep_percent
						if (rep_point > 1) then
						rep_point = 1
						end
					slot_1:set_condition(rep_point)
					amk.send_tip(game.translate_string("Оружие в первом слоте отремонтировано."),nil,nil,5)
					elseif (slot == 2) then
						local rep_point = slot_2:condition() + rep_percent
						if (rep_point > 1) then
						rep_point = 1
						end
					slot_2:set_condition(rep_point)
					amk.send_tip(game.translate_string("Оружие во втором слоте отремонтировано."),nil,nil,5)
					end
				elseif  (slot_1 and slot_1:condition() <0.5) or (slot_2 and slot_2:condition() <0.5) then
				amk.send_tip(game.translate_string("Слишком сильное повреждение оружия!"),nil,nil,5) 
				else
				amk.send_tip(game.translate_string("Оружие не нуждается в починке!"),nil,nil,5)
				end 
			elseif obj and obj:section()=="repair_item_outfit" then
				if armor then
					if armor:condition() >=0.5 and armor:condition() <0.97 then
					repiout=repiout-1
					amk.save_variable("repair_item_outfit", repiout)
						if armor then
						local rep_point = armor:condition() + rep_percent
							if (rep_point > 1) then
							rep_point = 1
							end
						amk_mod.repair_armor(rep_point)
						amk.send_tip(game.translate_string("Броня отремонтирована."),nil,nil,5)
						end
					elseif  armor:condition() <0.5 then
					amk.send_tip(game.translate_string("Слишком сильное повреждение брони!"),nil,nil,5)
					else
					amk.send_tip(game.translate_string("Броня не нуждается в починке!"),nil,nil,5)
					end
				else 
				amk.send_tip(game.translate_string("Броня где? Придурок!"),nil,nil,5)
				end
			end	
			amk.remove_item(obj)
			repair_box_closed(objd)			
	end
	local self=level.main_input_receiver()
	self:GetHolder():start_stop_menu	(self,true)
end
function repair_box_closed(obj)
	local robjd = alife():object(obj)
	local pos=robjd.position
	local lvid=robjd.level_vertex_id
	local gvid=robjd.game_vertex_id
		if robjd then
			alife():release(alife():object(obj), true)
		end
	amk.del_variable("repair_box")
	amk.spawn_item("repair_box_outfit",pos,gvid,lvid)
end
function add_3repair_item_outfit()
	local repiout =amk.load_variable("repair_item_outfit", 0)
	repiout = repiout + 3
	amk.save_variable("repair_item_outfit", repiout)
	amk.send_tip("","Получено три ремкомплекта RIA-10",0,10,"gen_info")
end
function add_3repair_item_weapon()
	local repiweap =amk.load_variable("repair_item_weapon", 0)
	repiweap = repiweap + 3
	amk.save_variable("repair_item_weapon", repiweap)
	amk.send_tip("","Получено три ремкомплекта RIW-10",0,10,"gen_info")
end
function add_repair_item_outfit()
	local repiout =amk.load_variable("repair_item_outfit", 0)
	repiout = repiout + 1
	amk.save_variable("repair_item_outfit", repiout)
	amk.send_tip("","Получен ремкомплект RIA-10",0,10,"gen_info")
end
function add_repair_item_weapon()
	local repiweap =amk.load_variable("repair_item_weapon", 0)
	repiweap = repiweap + 1
	amk.save_variable("repair_item_weapon", repiweap)
	amk.send_tip("","Получен ремкомплект RIW-10",0,10,"gen_info")
end
function add_repair_box()
	--amk.spawn_item("repair_box_outfit",vector():set(301.11,13.31,276.43),246,565356)
end
function add_medkit(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "medkit", "in")
end 
function set_community(actor, npc)
	db.actor:set_character_community("stranger", 0, 0)
end
function drink_vodka()
	db.actor:eat(db.actor:object("vodka"))
end
function take_trasure(npc, npc1)
	treasure_manager.get_treasure_manager():dialog(npc)
end
function have_trasure(first_speaker, second_speaker)
	local tres
	if amk.load_variable("option_treasure", 0) == 2 then 
	  tres = 75
	else 
      tres = 50
	end
	local ran=math.random(100)
	if ran > tres then db.actor:give_info_portion("have_sak_treasure")
	else db.actor:give_info_portion("havent_sak_treasure")
	end
end
function zombie_checkup()
	if db.actor ~= nil then
		if math.random() > 0.7 then
		local a=math.random()
		local h = hit()
		h.draftsman = db.actor
		h.type = hit.telepatic
		h.power = 0.3+a/2
		h.impulse = 1.0
		db.actor:hit(h)
		h.type = hit.strike
		db.actor:hit(h)
		h.type = hit.radiation
		db.actor:hit(h)
		level.add_pp_effector("alcohol.ppe", 100, false)
		local rnd=math.random(1,6)
		local snd_obj
			if rnd==1 then
			snd_obj = 	xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_1]])
			elseif rnd==2 then
			snd_obj = 	xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_2]])
			elseif rnd==3 then
			snd_obj = 	xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_3]])
			elseif rnd==4 then
			snd_obj = 	xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_6]])
			elseif rnd==5 then
			snd_obj = 	xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_7]])
			elseif rnd==6 then
			snd_obj = 	xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_8]])
			end
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
		end
	end
end
function add_spot_of_docent(a)
local old_spot=amk.load_variable("spot_of_nps", 0)
	if old_spot~=0 then
	local obj_old = alife():story_object(old_spot)
	amk.remove_spot_from_map(obj_old.id,'blue_location')
	end
local obj = alife():story_object(a)
	if obj and IsStalker(obj) then
	amk.add_spot_on_map(obj.id,'blue_location',obj:name().."_sak")
	old_spot=a
	amk.save_variable("spot_of_nps", old_spot)
	end
end
function add_tail()
	if level.name()=="l04_darkvalley" then
		local obj=alife():story_object(425)
		if obj and IsStalker(obj) and obj:alive() then
			if db.actor:has_info("val_bandit_talk") then
			db.actor:set_character_community("stranger", 0, 0)
			end
		
	else
	db.actor:set_character_community("actor", 0, 0)
	end
else
	db.actor:set_character_community("actor", 0, 0)
	end
	local testobj=0
	for a=10,65635,1 do
	local obj=alife():object(a)
		if obj and string.find(obj:name(),"testsak_"..level.name()) then
		--dbglog("Vot on: "..obj:name())
		testobj=1
		end
	end
	if (level.name()~="l03u_agr_underground" and level.name()~="l04u_labx18" and level.name()~="l08u_brainlab" and level.name()~="l10u_bunker" and level.name()~="l12u_control_monolith" and level.name()~="l12u_sarcofag" and level.name()~="l12_stancia_2") then
		if testobj==0 then
		amk_anoms.generate_arts()
		end
	end
	if level.name()=="l05_bar" then
	db.actor:give_info_portion("bar_retro")
	end
end
function off_testobj()
	for a=10,65635,1 do
	local obj=alife():object(a)
		if obj and string.find(obj:name(),"testsak_") then
		alife():release(obj,true)
		end
	end
end
function off_repair_box()
	for a=10,65635,1 do
	local obj=alife():object(a)
		if obj and string.find(obj:name(),"repair_box_outfit") then
		alife():release(obj,true)
		end
	end
end
function add_borov_treasure()
	treasure_manager.get_treasure_manager():give_treasure("mil_borov_secret")
end
function add_krysyk_treasure()
	treasure_manager.get_treasure_manager():give_treasure("agr_krysyk_secret")
end
function add_krysyk_pda()
	treasure_manager.get_treasure_manager():give_treasure("val_krysyk_secret")
end
function dbglog(fmt,...)
  local msg = string.format(fmt, ...)
  local msg_no_ws = string.gsub(msg, "%s", "___")
  get_console():execute("dbg:" .. msg_no_ws)
end
-----------------------------------------------------------------------------------------------------------