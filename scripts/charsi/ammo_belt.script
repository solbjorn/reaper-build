local ammo_fake_types = {}
local need_convert = true

for k,v in pairs(ammo_section) do
	ammo_fake_types[k .. "_fake"] = k
end

function on_info(info_id)
	if info_id == "ui_inventory" or info_id == "ui_trade" or info_id == "ui_car_body" then
        on_inventory_open()
    elseif info_id == "ui_inventory_hide" or info_id == "ui_trade_hide" or info_id == "ui_car_body_hide" then
        on_inventory_close()
    end
end

local se_respawn_create_ammo = se_respawn.create_ammo

function on_inventory_open()
	need_convert = false
	local t = {}
	Actor:iterate_inventory(
		function(npc,item)
			local sect = ammo_fake_types[item:section()]
			if sect then
				t[sect] = item:get_current_ammo() + (t[sect] or 0)
				AI:release(AI:object(item:id()), true)
			end
		end
	)

	local pos, lvid, gvid = Actor:position(), Actor:level_vertex_id(), Actor:game_vertex_id()
	for sec, num in pairs(t) do
		se_respawn_create_ammo(sec, pos, lvid, gvid, 0, num)
	end
end

function on_inventory_close()
	need_convert = true
	local t = {}
	Actor:iterate_inventory(
		function(npc,item)
			local sect = item:section()
			if ammo_section[sect] and Actor:is_in_ruck(item) then
				sect = sect .. "_fake"
				t[sect] = item:get_current_ammo() + (t[sect] or 0)
				AI:release(AI:object(item:id()), true)
			end
		end
	)

	local pos, lvid, gvid = Actor:position(), Actor:level_vertex_id(), Actor:game_vertex_id()
	for sec, num in pairs(t) do
		se_respawn_create_ammo(sec, pos, lvid, gvid, 0, num)
	end
end

function on_item_ruck(item)
	local section = item:section()
	if ammo_section[section] and need_convert == true then
		local cnt = item:get_current_ammo()

		AI:release(AI:object(item:id()), true)
		se_respawn_create_ammo(section .. "_fake", Actor:position(),
				       Actor:level_vertex_id(),
				       Actor:game_vertex_id(),
				       0, cnt)
	end
end
