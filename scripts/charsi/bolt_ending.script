-----------------------[[Заканчивающиеся болты]]-----------------------------------
-- Автор: Charsi
-- Дата: 17/08/2010 - 26/04/2011
-----------------------------------------------------------------------------------

local game_start = true
local boxes = { }

function on_item_take(obj)
	local sect = obj:section()
	if sect == "fake_bolt" then
		if get_value("b_dr", false, true) then
			got_item("bolt")
			release(obj)
		end

		game_start = false
	elseif sect == "bolt" then
		if game_start and get_value("b_dr") then
			-- выкидываем только движковый стартовый
			reap.load_del_bolt = true
		end
		if not Actor:is_in_slot(obj) then
			got_item("fake_bolt")
			del_bolt()
		end

		del_value("b_dr")
		game_start = false
	end
end

function on_item_drop(obj)
	if obj:section() == "bolt" and not Actor:item_in_slot(5) then
		set_value("b_dr", true)
	end
end

function bolt_to_belt(id, obj)
	level.parked_call(function()
		Actor:move_to_belt(obj)
	end)
end

function on_item_belt(obj)
	local sect = obj:section()
	if sect == "fake_bolt" then
		local actor = Actor

		AI:release(AI:object(obj:id()), true)
		local sobj = AI:create_ammo("bolt_box", actor:position(), actor:level_vertex_id(),
					    actor:game_vertex_id(), 0, 1)
		level.client_spawn_manager():add(sobj.id, 0, bolt_to_belt)
	elseif sect == "bolt_box" then
		local size = obj:get_current_ammo()
		boxes[obj:id()] = obj

		if not Actor:object("bolt") and get_value("b_dr") then
			amk.spawn_item_in_inv("bolt")
			use_one(obj, size)
		end
	end
end

function fake_bolt_drop(id, obj)
	Actor:drop_item(obj)
end

function on_item_drop_from_belt(obj, drop)
	if obj:section() ~= "bolt_box" then return end
	boxes[obj:id()] = nil

	local sobj = server_object(obj)
	if not sobj then return end

	local num = obj:get_current_ammo()
	release(sobj)

	for i = 1, num do
		sobj = amk.spawn_item_in_inv("fake_bolt")
		if drop and sobj then
			level.client_spawn_manager():add(sobj.id, 0, fake_bolt_drop)
		end
	end
end

function use_one(box, left)
	if left > 1 then
		box:set_ammo_box_curr(left - 1)
	else
		release(box)
	end
end

function remove_bolt()
	local box, left, size = nil, 20

	for id, obj in pairs(boxes) do
		size = obj:get_current_ammo()
		if size < left then
			box = obj
			left = size
		end
	end

	if box then use_one(box, left) else del_bolt() end
end

function del_bolt()
	local obj = Actor:object("bolt")
	if obj then
		Actor:drop_item_and_teleport(obj, xyz())
	end
end

function drop_bolt()
	del_bolt()
	create("fake_bolt", random_position(Actor:position(), 1),
	       Actor:level_vertex_id(), Actor:game_vertex_id())
end

function net_spawn()
	amk.spawn_item_in_inv("bolt_fix")
end
