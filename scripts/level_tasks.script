local level_scripts = {
	l01_escape  = escape_tasks,
	l02_garbage = garbage_tasks,
	l03u_agr_underground = agroprom_tasks,
	l04u_labx18 = darkvalley_tasks,
	l06_rostok  = bar_rostok_tasks,
	l08_yantar = yantar_tasks,
	l07_military = mil_tasks,
	l10_radar = radar_tasks,
	l11_pripyat = pripyat_tasks
}

local info_scripts = {
	esc = escape_tasks,
	gar = garbage_tasks,
	agr = agroprom_tasks,
	val = darkvalley_tasks,
	bar = bar_rostok_tasks,
	yan = yantar_tasks,
	mil = mil_tasks,
	["rad"] = radar_tasks,
	pri = pripyat_tasks,
	aes = pripyat_tasks
}

function proceed()
	if db_actor == nil then
		return
	end
	local task_stuff = level_scripts[level.name()]
	if task_stuff then task_stuff.proceed() end
end

local string_sub = string.sub
function process_info_portion(info_id)
	if db_actor == nil then
		return
	end
	local info_script = info_scripts[string_sub(info_id, 1, 3)]
	if info_script then info_script.process_info_portion(info_id) end
end

function add_location(sid, location, hint)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj then
			if not hint then hint = "" end
			level.map_add_object_spot(obj.id, location, hint)
		end
	end
end

function remove_location(sid, location)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj and level.map_has_object_spot(obj.id, location) > 0 then
			level.map_remove_object_spot(obj.id, location)
		end
	end
end

function remove_location_safe(sid, location)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj then
		   for a = 1, level.map_has_object_spot(obj.id, location), 1 do
			   level.map_remove_object_spot(obj.id, location)
		   end	
		end
	end
end

function is_map_spot_present(sid, location)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj and level.map_has_object_spot(obj.id, location) ~= 0 then
		   return true
		end
	end
	return false
end
  

function add_lchanger_location()
	local sim = alife()
	if sim then
		-- escape
		local obj = sim:story_object(91)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_up_location", "to_garbage")
		end

		-- garbage
		obj = sim:story_object(191)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_left_location", "to_agroprom")
		end
		obj = sim:story_object(192)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_left_location", "to_agroprom")
		end
		obj = sim:story_object(193)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_down_location", "to_escape")
		end
		obj = sim:story_object(194)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_up_location", "to_bar")
		end
		obj = sim:story_object(195)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_right_location", "to_darkvalley")
		end
		obj = sim:story_object(196)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_right_location", "to_darkvalley")
		end
		
		-- agroprom
		obj = sim:story_object(391)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_right_location", "to_garbage")
		end
		obj = sim:story_object(392)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_right_location", "to_garbage")
		end

		-- darkvalley
		obj = sim:story_object(415)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_left_location", "to_garbage")
		end
		obj = sim:story_object(416)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_left_location", "to_garbage")
		end
		obj = sim:story_object(417)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_down_location", "to_escape")
		end

		-- rostok
		obj = sim:story_object(591)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_right_location", "to_bar")
		end

		obj = sim:story_object(608)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_left_location", "to_yantar")
		end
		
		-- bar
		obj = sim:story_object(592)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_up_location", "to_military")
		end
		obj = sim:story_object(593)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_down_location", "to_garbage")
		end
		obj = sim:story_object(594)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_left_location", "to_rostok")
		end

		-- military
		obj = sim:story_object(771)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_left_location", "to_bar")
		end
		obj = sim:story_object(773)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_right_location", "to_radar")
		end
		
		-- yantar
		obj = sim:story_object(925)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_right_location", "to_rostok")
		end

		-- radar
		obj = sim:story_object(1007)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_up_location", "to_pripyat")
		end
		obj = sim:story_object(1008)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_down_location", "to_military")
		end

		-- pripyat
		obj = sim:story_object(833)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_down_location", "to_radar")
		end
		obj = sim:story_object(832)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_up_location", "to_aes")
		end
		obj = sim:story_object(6001)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_down_location", "to_pripyat")
		end
		obj = sim:story_object(6002)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_right_location", "to_darkvalley")
		end
		obj = sim:story_object(9100)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_down_location", "to_escape")
		end
		obj = sim:story_object(9101)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_left_location", "to_agroprom")
		end
		obj = sim:story_object(9102)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_up_location", "to_yantar")
		end
		obj = sim:story_object(9103)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_down_location", "to_agroprom")
		end
		obj = sim:story_object(9104)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_up_location", "to_military")
		end
		obj = sim:story_object(9105)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_left_location", "to_rostok")
		end
		obj = sim:story_object(9106)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_up_location", "to_radar")
		end
		obj = sim:story_object(9107)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_down_location", "to_darkvalley")
		end
		obj = sim:story_object(9108)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_left_location", "to_yantar")
		end
		obj = sim:story_object(9109)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_up_location", "to_radar")
		end
		obj = sim:story_object(9110)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_up_location", "to_military")
		end
		obj = sim:story_object(9111)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_down_location", "to_darkvalley")
		end

		-- с ЧАЭС-2 в Саркофаг
		obj = sim:story_object(31710)
		if obj then
			level.map_add_object_spot(obj.id, "lchanger_location", "to_sarcofag")
		end

		-- выходы на подземных уровнях
		sa_main.lchanger_indoor_locations()
	end
end


function set_task_state(id_state, id_task, id_subtask)
	if db_actor then
		db_actor:set_task_state(id_state, id_task, id_subtask)
	end
end

function notify_new_task()
end
