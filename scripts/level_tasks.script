local level_map_add_object_spot = level.map_add_object_spot
local level_map_has_object_spot = level.map_has_object_spot
local level_map_remove_object_spot = level.map_remove_object_spot
local string_sub = string.sub

local level_scripts = {
	l01_escape  = escape_tasks,
	l02_garbage = garbage_tasks,
	l04u_labx18 = darkvalley_tasks,
	l06_rostok  = bar_rostok_tasks,
	l11_pripyat = pripyat_tasks
}

local info_scripts = {
	esc = escape_tasks,
	gar = garbage_tasks,
	agr = agroprom_tasks,
	val = darkvalley_tasks,
	bar = bar_rostok_tasks,
	mil = mil_tasks,
	pri = pripyat_tasks,
	aes = pripyat_tasks
}

function proceed()
	if db_actor == nil then
		return
	end
	local task_stuff = level_scripts[level.name()]
	if task_stuff then task_stuff.proceed() end
end

function process_info_portion(info_id)
	if db_actor == nil then
		return
	end
	local info_script = info_scripts[string_sub(info_id, 1, 3)]
	if info_script then info_script.process_info_portion(info_id) end
end

function add_location(sid, location, hint, persistent)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj then
			if not hint then hint = "" end
			if persistent then
				level.map_add_object_spot_ser(obj.id, location, hint)
			else
				level_map_add_object_spot(obj.id, location, hint)
			end
		end
	end
end

function remove_location(sid, location)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj and level_map_has_object_spot(obj.id, location) > 0 then
			level_map_remove_object_spot(obj.id, location)
		end
	end
end

function remove_location_safe(sid, location)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj then
		   for a = 1, level_map_has_object_spot(obj.id, location), 1 do
			   level_map_remove_object_spot(obj.id, location)
		   end	
		end
	end
end

function is_map_spot_present(sid, location)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj and level_map_has_object_spot(obj.id, location) ~= 0 then
		   return true
		end
	end
	return false
end

local lc_location = {
	-- escape
	[91] = {
		dir	= "lchanger_up_location",
		dest	= "to_garbage"
	},

	-- garbage
	[191] = {
		dir	= "lchanger_left_location",
		dest	= "to_agroprom"
	},
	[192] = {
		dir	= "lchanger_left_location",
		dest	= "to_agroprom"
	},
	[193] = {
		dir	= "lchanger_down_location",
		dest	= "to_escape"
	},
	[194] = {
		dir	= "lchanger_up_location",
		dest	= "to_bar"
	},
	[195] = {
		dir	= "lchanger_right_location",
		dest	= "to_darkvalley"
	},
	[196] = {
		dir	= "lchanger_right_location",
		dest	= "to_darkvalley"
	},
	
	-- agroprom
	[391] = {
		dir	= "lchanger_right_location",
		dest	= "to_garbage"
	},
	[392] = {
		dir	= "lchanger_right_location",
		dest	= "to_garbage"
	},

	-- darkvalley
	[415] = {
		dir	= "lchanger_left_location",
		dest	= "to_garbage"
	},
	[416] = {
		dir	= "lchanger_left_location",
		dest	= "to_garbage"
	},
	[417] = {
		dir	= "lchanger_down_location",
		dest	= "to_escape"
	},

	-- rostok
	[591] = {
		dir	= "lchanger_right_location",
		dest	= "to_bar"
	},

	[608] = {
		dir	= "lchanger_left_location",
		dest	= "to_yantar"
	},
	
	-- bar
	[592] = {
		dir	= "lchanger_up_location",
		dest	= "to_military"
	},
	[593] = {
		dir	= "lchanger_down_location",
		dest	= "to_garbage"
	},
	[594] = {
		dir	= "lchanger_left_location",
		dest	= "to_rostok"
	},

	-- military
	[771] = {
		dir	= "lchanger_left_location",
		dest	= "to_bar"
	},
	[773] = {
		dir	= "lchanger_right_location",
		dest	= "to_radar"
	},
	
	-- yantar
	[925] = {
		dir	= "lchanger_right_location",
		dest	= "to_rostok"
	},

	-- radar
	[1007] = {
		dir	= "lchanger_up_location",
		dest	= "to_pripyat"
	},
	[1008] = {
		dir	= "lchanger_down_location",
		dest	= "to_military"
	},

	-- pripyat
	[833] = {
		dir	= "lchanger_down_location",
		dest	= "to_radar"
	},
	[832] = {
		dir	= "lchanger_up_location",
		dest	= "to_aes"
	},

	-- С ЧАЭС1 в Припять
	[6001] = {
		dir	= "lchanger_down_location",
		dest	= "to_pripyat"
	},
	-- С Кордона в ТД
	[6002] = {
		dir	= "lchanger_right_location",
		dest	= "to_darkvalley"
	},

	-- С Агропрома на Кордон
	[9100] = {
		dir	= "lchanger_down_location",
		dest	= "to_escape"
	},
	-- С Кордона на Агропром
	[9101] = {
		dir	= "lchanger_left_location",
		dest	= "to_agroprom"
	},
	-- С Агропрома на Янтарь
	[9102] = {
		dir	= "lchanger_up_location",
		dest	= "to_yantar"
	},
	-- С Янтаря на Агропром
	[9103] = {
		dir	= "lchanger_down_location",
		dest	= "to_agroprom"
	},
	-- С ДТ на АС
	[9104] = {
		dir	= "lchanger_up_location",
		dest	= "to_military"
	},
	-- С АС на ДТ
	[9105] = {
		dir	= "lchanger_left_location",
		dest	= "to_rostok"
	},
	-- С Янтаря на Радар
	[9106] = {
		dir	= "lchanger_up_location",
		dest	= "to_radar"
	},
	-- С Радара в ТД
	[9107] = {
		dir	= "lchanger_down_location",
		dest	= "to_darkvalley"
	},
	-- С Радара на Янтарь
	[9108] = {
		dir	= "lchanger_left_location",
		dest	= "to_yantar"
	},
	-- Из ТД на Радар
	[9109] = {
		dir	= "lchanger_up_location",
		dest	= "to_radar"
	},
	-- Из ТД на АС
	[9110] = {
		dir	= "lchanger_up_location",
		dest	= "to_military"
	},
	-- С АС в ТД
	[9111] = {
		dir	= "lchanger_down_location",
		dest	= "to_darkvalley"
	},

	-- с ЧАЭС-2 в Саркофаг
	[31710] = {
		dir	= "lchanger_location",
		dest	= "to_sarcofag"
	}
}

function add_lchanger_location()
	local sim = alife()

	for story_id, lc_data in pairs(lc_location) do
		local obj = sim:story_object(story_id)
		if obj then
			level_map_add_object_spot(obj.id, lc_data.dir, lc_data.dest)
		end
	end

	-- выходы на подземных уровнях
	sa_main.lchanger_indoor_locations()
end

function set_task_state(id_state, id_task, id_subtask)
	if db_actor then
		db_actor:set_task_state(id_state, id_task, id_subtask)
	end
end

function notify_new_task()
end
