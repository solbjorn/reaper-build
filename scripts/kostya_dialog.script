function esc_pda_have(task, objective)
if db.actor ~= nil then
return db.actor:object("kostya_pda") ~= nil
end
return false
end

function esc_pda_done(first_speaker, second_speaker)
dialogs.relocate_item_section(first_speaker, "kostya_pda", "out")
second_speaker:set_relation(game_object.friend, first_speaker)
end

function esc_art_have(task, objective)
if db.actor ~= nil then
return db.actor:object("kostya_af_gold_fish") ~= nil
end
return false
end

function esc_art_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "kostya_af_gold_fish", "out")
second_speaker:set_relation(game_object.friend, first_speaker)
end

function esc_pda2_have(task, objective)
if db.actor ~= nil then
return db.actor:object("kostya_pda2") ~= nil
end
return false
end

function esc_pda2_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "kostya_pda2", "out")
end

function esc_pda3_have(task, objective)
if db.actor ~= nil then
return db.actor:object("kostya_pda3") ~= nil
end
return false
end

function esc_pda3_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "kostya_pda3", "out")
end

function esc_pda4_have(task, objective)
if db.actor ~= nil then
return db.actor:object("kostya_pda4") ~= nil
end
return false
end

function esc_pda4_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "kostya_pda4", "out")
end

function esc_pda5_have(task, objective)
if db.actor ~= nil then
return db.actor:object("kostya_pda5") ~= nil
end
return false
end

function esc_pda5_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "kostya_pda5", "out")
end

function esc_pda6_have(task, objective)
if db.actor ~= nil then
return db.actor:object("kostya_pda6") ~= nil
end
return false
end

function esc_pda6_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "kostya_pda6", "out")
end

function esc_pda7_have(task, objective)
if db.actor ~= nil then
return db.actor:object("kostya_pda7") ~= nil
end
return false
end

function esc_pda7_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "kostya_pda7", "out")
end

function esc_pda8_have(task, objective)
if db.actor ~= nil then
return db.actor:object("kostya_pda8") ~= nil
end
return false
end

function esc_pda8_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "kostya_pda8", "out")
end

function esc_pda9_have(task, objective)
if db.actor ~= nil then
return db.actor:object("kostya_pda9") ~= nil
end
return false
end

function esc_pda9_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "kostya_pda9", "out")
end

function sacharov_pda_have(task, objective)
if db.actor ~= nil then
return db.actor:object("pda_vasilyev") ~= nil
end
return false
end

function sacharov_pda_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "pda_vasilyev", "out")
    news_manager.send_tip("Получена информация", nil, nil, 30000)
end

function kostya_art2_have(task, objective)
if db.actor ~= nil then
return db.actor:object("af_dummy_battery") ~= nil
end
return false
end

function kostya_art2_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "af_dummy_battery", "out")
end

function document_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "kostya_documents", "out")
end

function kostya_teleport(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "science_teleport", "in")
end

function kostya_teleport2(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "science_teleport2", "in")
end

function kostya_teleport3(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "science_teleport3", "in")
end

function kostya_teleport4(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "device_teleport", "in")
end

function actor_has_money_100000()
	return has_money(reap.with_discount(100000))
end

function give_money_100000()
	lost_money(reap.with_discount(100000))
end
