----------------------------------------------------------------------------------------------------
-- Схема котроля за территорией
----------------------------------------------------------------------------------------------------

territory = nil

class "danger_territory"
function danger_territory:__init(obj, storage)
	self.object = obj
	self.st = storage
end
function danger_territory:update(delta)
	xr_logic.try_switch_to_another_section(self.object, self.st)
end
function danger_territory:deactivate(delta)
	if sr_danger.territory ~= nil then sr_danger.territory[self.object:name()] = nil end
end

---------------------------------------------------------------------------------------------------------------------
function add_to_binder(obj, storage)
	storage.actions[danger_territory(obj, storage)] = true
end

function set_scheme(obj, ini, scheme, section, gulag_name)
	local st = xr_logic.assign_storage_and_bind(obj, ini, scheme, section)
	st.logic = xr_logic.cfg_get_switch_conditions(ini, section, obj)
	if territory == nil then
		territory = {}
	end
	territory[obj:name()] = true
end

-- Проверяет отсеивается ли денжер по настройкам зоны.
-- Если возвращает true, то денжер отсеивается и его проверять не следует.
function check_danger_position(position)
	local t = 0
	for key,value in pairs(territory) do
		t = db.zone_by_name[key]
		if t then
			if t:inside(position) then
				return true
			end
		end
	end
	return false
end
