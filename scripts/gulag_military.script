-------------------------------------------------------------------------------------------
-- Проверка, имеется ли у гулага враг
-------------------------------------------------------------------------------------------
function check_enemy (gulag)
	for k,v in pairs(gulag.Object) do
		if v ~= true then
			local best_enemy = v:best_enemy()
			if best_enemy ~= nil and best_enemy:alive() and v:story_id() ~= 710 then
				return true
			end
		end
	end
	return false
end

function check_freedom(npc_community)
	return npc_community == "freedom"
end

function predicate_mil_sniper(info, sid)
	if not info.is_sniper then return false end

	if sid then
		local se_npc = story_object(sid)
		if se_npc and se_npc:alive() then
			return info.story_id == sid
		end
	end

	return string.find(info.profile_name, "Svoboda_sniper") ~= nil
end

local gulags = {
	["mil_freedom"] = {
		-------------------------------------------------------------------------------------------
		-- Загрузка работ для Свободы
		-------------------------------------------------------------------------------------------
		job = function(sj, gname, squad, groups)
		    -----------------------------------------------------------------------
		    -- Нормальное состояние базы
		    -----------------------------------------------------------------------
		    -- Лукаш
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_lukash",
				prior = 20, state = {0, 3},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_leader" and info.story_id == 707
					    end
				}
		    -- Повар
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_cook",
				prior = 20, state = {0, 2, 3, 4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_cook"
					    end
				}
		    -- Снайпер №1
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_sniper1",
				prior = 20, state = {0, 2, 3},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function(info)
					return predicate_mil_sniper(info, story_ids.Mil_Sniper)
				end
			}

		    -- Снайпер №2
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_sniper2",
				prior = 20, state = {0, 2, 3},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function(info)
					return predicate_mil_sniper(info, story_ids.Mil_Sniper2)
				end
			}

		    -- Снайпер №3
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_sniper5",
				prior = 20, state = {0, 2, 3},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function(info)
					return predicate_mil_sniper(info, story_ids.Mil_Sniper1)
				end
			}

		    -- Снайпер №4
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_sniper4",
				prior = 19, state = {0, 2, 3},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = predicate_mil_sniper
			}

		    -- Снайпер №5
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_sniper3",
				prior = 20, state = {0, 2, 3},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function(info)
					return predicate_mil_sniper(info, story_ids.Mil_Sniper3)
				end
			}

		    -- Скряга
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_trader",
				prior = 20, state = {0, 3, 4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_trader" and info.story_id == 734
					    end
				}

		    -- Охранник Лукаша
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_guard1",
				prior = 15, state = {0, 3 ,4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_specnaz"
					    end
				}
		    -- Охранник Лукаша
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_bodyguard1",
				prior = 19, state = {0, 3, 4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_bodyguard"
					    end
				}
		    -- Охранник Лукаша
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_bodyguard2",
				prior = 19, state = {0, 3, 4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_bodyguard"
					    end
				}
			-- Охранник арсенала
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_aguard",
				prior = 15, state = {0, 3, 4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_specnaz"
					    end
				}

		    -- Max
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_max",
				prior = 20, state = {0, 4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_master_Max"
					    end
				}

			sj[#sj + 1] = {
				section = "logic@mil_freedom_walker7",
				prior = 19, state = {0, 3, 4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
			predicate = function (info)
					    return info.profile_name == "mil_Svoboda_engineer"
					end
			}
			------
			-- мужик у костра 1
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker1",
				prior = 2, state = {0, 3, 4},
				squad = squad, group = groups[0],
				position_threshold = 600,
				in_rest = "mil_freedom_wall_restrictor"
				}

		    -- мужик у костра 2
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker2",
				prior = 2, state = {0, 3, 4},
				squad = squad, group = groups[0],
				position_threshold = 600,
				in_rest = "mil_freedom_wall_restrictor"
				}

		    -- одиночный патрульный на базе
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker4",
				prior = 10, state = {0, 3, 4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_specnaz"
					    end
				}

		    -- патрульный на базе
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker5",
				prior = 10, state = {0, 4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_specnaz"
					    end
				}

		    --охранник у входа
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker8",
				prior = 13, state = {0, 3, 4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_zoneguard"
					    end
				}
			-- просто мужик на входе
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker9",
				prior = 10, state = {0, 3, 4},
				squad = squad, group = groups[0],
				position_threshold = 600,
				in_rest = "mil_freedom_wall_restrictor"
				}
			-- просто мужик на входе
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker10",
				prior = 10, state = {0, 3, 4},
				squad = squad, group = groups[0],
				position_threshold = 600,
				in_rest = "mil_freedom_wall_restrictor"
				}

			sj[#sj + 1] = {
				section = "logic@mil_freedom_walker1",
				prior = 1, state = {0, 3, 4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600
			}
			------
			sj[#sj + 1] = {
				section = "logic@mil_freedom_walker2",
				prior = 1, state = {0, 3, 4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600
			}
			------
			sj[#sj + 1] = {
				section = "logic@mil_freedom_walker3",
				prior = 1, state = {0, 3, 4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600
			}
			------
			sj[#sj + 1] = {
				section = "logic@mil_freedom_walker4",
				state = {0, 3, 4},
				squad = squad, group = groups[0],
				position_threshold = 600,
				in_rest = "mil_freedom_wall_restrictor"
			}
			------
			sj[#sj + 1] = {
				section = "logic@mil_freedom_kamp1",
				prior = 1, state = {0, 3, 4},
				squad = squad, group = groups[0],
				position_threshold = 600,
				in_rest = "mil_freedom_wall_restrictor"
			    }
			------
			sj[#sj + 1] = {
				section = "logic@mil_freedom_kamp2",
				prior = 1, state = {0, 3, 4},
				squad = squad, group = groups[0],
				position_threshold = 600,
				in_rest = "mil_freedom_wall_restrictor"
			}
			------
			sj[#sj + 1] = {
				section = "logic@mil_freedom_kamp3",
				prior = 1, state = {0, 3, 4},
				squad = squad, group = groups[0],
				position_threshold = 600,
				in_rest = "mil_freedom_wall_restrictor"
			}
			------
			sj[#sj + 1] = {
				section = "logic@mil_freedom_sleep1",
				prior = 1, state = {0, 3, 4},
				squad = squad, group = groups[0],
				position_threshold = 600,
				in_rest = "mil_freedom_wall_restrictor"
			}

			-------------------------------- combat state 1-----------------------------
		    -- Лукаш
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_lukash_combat1",
				prior = 11, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 600,
				in_rest = "mil_freedom_wall_restrictor", out_rest = "mil_headquarter_restrictor",
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_leader"
					    end
				}
		    -- Скряга
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_trader_combat1",
				prior = 11, state = {2},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_trader"
					    end
				}
		    -- Охранник Лукаша
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_guard_combat1",
				prior = 11, state = {2},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_specnaz"
					    end
				}
		    -- Охранник Лукаша
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_bodyguard1_combat1",
				prior = 11, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 600,
				in_rest = "mil_freedom_wall_restrictor", out_rest = "mil_headquarter_restrictor",
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_bodyguard"
					    end
				}
		    -- Охранник Лукаша
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_bodyguard2_combat1",
				prior = 11, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 600,
				in_rest = "mil_freedom_wall_restrictor", out_rest = "mil_headquarter_restrictor",
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_bodyguard"
					    end
				}

			-------------------------------- combat state 2-----------------------------

			for a = 1, 23, 1 do
			    local sec = string.format ("logic@mil_freedom_defence%d", a)
				sj[#sj + 1] = {
					section = sec,
				    idle = 0,
				    prior = 8, state = {2},
				    squad = squad, group = groups[0],
				position_threshold = 600,
				    in_rest = "mil_freedom_wall_restrictor", out_rest = "mil_freedom_gulag_defense_res"
				}
			    sj[#sj+1] = t
		    end

			-------------------------------- Атака хутора Долга-----------------------------
			-- Макс
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_max_attack",
				prior = 18, state = {3},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				online = true,
				idle_after_death = 36000,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_master_Max"
					    end
				}
			-- Мужик у костра 1
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker1_attack",
				prior = 15, state = {3},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				idle_after_death = 36000,
				online = true
				}
			-- Мужик у костра 2
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker2_attack",
				prior = 15, state = {3},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				idle_after_death = 36000,
				online = true
				}
			--
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker4_attack",
				prior = 17, state = {3},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				idle_after_death = 36000,
				online = true
				}
			--
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker5_attack",
				prior = 15, state = {3},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				idle_after_death = 36000,
				online = true
				}
			--
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker6_attack",
				prior = 15, state = {3},
				squad = squad, group = groups[0],
				position_threshold = 600,
				online = true,
				idle_after_death = 36000,
				in_rest = "mil_freedom_wall_restrictor"
				}
			--
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker7_attack",
				prior = 15, state = {3},
				squad = squad, group = groups[0],
				position_threshold = 600,
				online = true,
				idle_after_death = 36000,
				in_rest = "mil_freedom_wall_restrictor"
				}
			--
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker8_attack",
				prior = 15, state = {3},
				squad = squad, group = groups[0],
				position_threshold = 600,
				online = true,
				idle_after_death = 36000,
				in_rest = "mil_freedom_wall_restrictor"
				}
			--
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_stalker9_attack",
				prior = 15, state = {3},
				squad = squad, group = groups[0],
				position_threshold = 600,
				online = true,
				idle_after_death = 36000,
				in_rest = "mil_freedom_wall_restrictor"
				}

		-- четвертое состояние гулага Свободы
		    -- Лукаш
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_commander",
				prior = 20, state = {4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = function (info)
						     if has_alife_info("mil_lukash_dead") then return true end
						     return info.profile_name == "mil_Svoboda_leader" and info.story_id == 707
					    end
				}

		    -- Снайпер №1
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_sniper14",
				prior = 20, state = {4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = predicate_mil_sniper
			}

		    -- Снайпер №2
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_sniper24",
				prior = 20, state = {4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = predicate_mil_sniper
			}

		    -- Снайпер №3
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_sniper54",
				prior = 20, state = {4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = predicate_mil_sniper
			}

		    -- Снайпер №4
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_sniper44",
				prior = 19, state = {4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = predicate_mil_sniper
			}

		    -- Снайпер №5
		    sj[#sj + 1] = {
				section = "logic@mil_freedom_sniper34",
				prior = 20, state = {4},
				squad = squad, group = groups[0],
				in_rest = "mil_freedom_wall_restrictor",
				position_threshold = 600,
				predicate = predicate_mil_sniper
			}
		end,
		-------------------------------------------------------------------------------------------
		-- Проверка состояния гулага Свободы
		-------------------------------------------------------------------------------------------
		state = function(gulag)
		    -- отсеиваем четвертое состояние.
		    if has_alife_info("mil_lukash_dead") then
		       if check_enemy (gulag) == true then
			  -- поскольку вопрос об отношении к актеру решаться не собирается, то выход будет именно таким.
			  if gulag:npc_is_enemy_to_anybody (Actor) == true then
			     relation_registry.set_community_goodwill ("freedom", 0, -5000)
			     xr_gulag.setGulagRelation ("mil_freedom", game_object.enemy, Actor)
			  end
			  return 2
		       else
			  Actor:disable_info_portion ("mil_freedom_under_attack")
			  return 4
		       end
		    end

		    if gulag.state == 3 then
		       if has_alife_info("mil_dolg_after_explode") or gulag:npc_is_enemy_to_anybody (Actor) == true then
			  Actor:disable_info_portion ("mil_freedom_attack")
			  -- поскольку вопрос об отношении к актеру решаться не собирается, то выход будет именно таким.
			  if gulag:npc_is_enemy_to_anybody (Actor) == true then
			     relation_registry.set_community_goodwill ("freedom", 0, -5000)
			     xr_gulag.setGulagRelation ("mil_freedom", game_object.enemy, Actor)
			  end
			  return 2
		       end
		       if has_alife_info("mil_freedom_attack") then
			  return 3
		       end
		    end

		    if has_alife_info("mil_freedom_under_attack") then
		       if check_enemy (gulag) == true or not has_alife_info("mil_dolg_dead") then
			  return 2
		       else
			  Actor:disable_info_portion ("mil_freedom_under_attack")
			  return 0
		       end
		    end

		    if has_alife_info("mil_freedom_attack") then
		       return 3
		    end
		    return 0
		end,
		check = check_freedom
	},
	["mil_fblockpost"] = {
		-------------------------------------------------------------------------------------------
		-- Загрузка работ для блокпоста Свободы у выхода на Радар
		-------------------------------------------------------------------------------------------
		job = function(sj, gname, squad, groups)
		    -- состояние 0
		    --мужик у костра 1
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_stalker",
				state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --мужик у костра 2
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_stalker",
				state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --мужик у костра 3
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_stalker",
				state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --мужик у костра 4
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_stalker",
				state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --мужик у костра 5
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_stalker",
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --командир
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_commander",
				prior = 10, state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100,
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_blockpost_leader"
					    end
				}
		    --патрульный 1
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_patrol1",
				state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --патрульный 2
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_patrol2",
				state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 1
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_camper3",
				state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 2
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_camper6",
				state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
			-- состояние 2
		    --кэмпер 1
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_camper1",
				state = {2},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 2
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_camper2",
				state = {2},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 3
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_camper3",
				state = {2},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 4
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_camper4",
				state = {2},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 5
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_camper5",
				state = {2},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 6
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_camper6",
				state = {2},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 7
		    sj[#sj + 1] = {
				section = "logic@mil_fblockpost_camper7",
				state = {2},
				squad = squad, group = groups[0],
				position_threshold = 100
			}
		end,
		--------------------------------------------------------------------------
		-- Функция проверки состояния гулага Свободы у выхода на Радар
		--------------------------------------------------------------------------
		state = function(gulag)
			if gulag:npc_is_enemy_to_anybody (Actor) == true then
				xr_gulag.setGulagEnemy ("mil_fneutral", Actor)
			end

			if has_alife_info("mil_fblockpost_alarm") then
				return 2
			end

			local hr = level.get_time_hours()
			if hr >= 5 and hr < 22 then
				return 0
			end

			return 1
		end,
		check = check_freedom
	},
	["mil_fneutral"] = {
		-------------------------------------------------------------------------------------------
		-- Загрузка работ для блокпоста нейтралов у выхода на Радар
		-------------------------------------------------------------------------------------------
		job = function(sj, gname, squad, groups)
		    -- состояние 0
		    --мужик у костра 1
		    sj[#sj + 1] = {
				section = "logic@mil_fneutral_stalker",
				prior = 1, state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --мужик у костра 2
		    sj[#sj + 1] = {
				section = "logic@mil_fneutral_stalker",
				prior = 1, state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --мужик у костра 3
		    sj[#sj + 1] = {
				section = "logic@mil_fneutral_stalker",
				prior = 1, state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --мужик у костра 4
		    sj[#sj + 1] = {
				section = "logic@mil_fneutral_stalker",
				prior = 1, state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --мужик у костра 5
		    sj[#sj + 1] = {
				section = "logic@mil_fneutral_stalker",
				prior = 1,
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 1
		    sj[#sj + 1] = {
				section = "logic@mil_fneutral_camper3",
				prior = 1, state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 2
		    sj[#sj + 1] = {
				section = "logic@mil_fneutral_camper5",
				prior = 1, state = {0, 1},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
			-- состояние 2
		    --кэмпер 1
		    sj[#sj + 1] = {
				section = "logic@mil_fneutral_camper1",
				prior = 1, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 2
		    sj[#sj + 1] = {
				section = "logic@mil_fneutral_camper2",
				prior = 1, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 3
		    sj[#sj + 1] = {
				section = "logic@mil_fneutral_camper3",
				prior = 1, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 4
		    sj[#sj + 1] = {
				section = "logic@mil_fneutral_camper4",
				prior = 1, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		    --кэмпер 5
		    sj[#sj + 1] = {
				section = "logic@mil_fneutral_camper5",
				prior = 1, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 100
				}
		end,
		--------------------------------------------------------------------------
		-- Функция проверки состояния гулага нейтралов у выхода на Радар
		--------------------------------------------------------------------------
		state = function(gulag)
		    if gulag:npc_is_enemy_to_anybody (Actor) == true then
		       xr_gulag.setGulagEnemy ("mil_fblockpost", Actor)
		    end

		    if has_alife_info("mil_fblockpost_alarm") then
		       return 2
			end

			local hr = level.get_time_hours()
			if hr >= 5 and hr < 22 then
				return 0
			end

			return 1
		end,
		check = check_freedom
	},
	["mil_village"] = {
		--------------------------------------------------------------------------
		-- Функция загрузки работ для деревни
		--------------------------------------------------------------------------
		job = function(sj, gname, squad, groups)
		    --Угрюмый
		    sj[#sj + 1] = {
				section = "logic@mil_village_ugrumy",
				prior = 1,
				squad = squad, group = groups[0],
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_master_Ugrumiy"
					    end
				}
		    --Спецназовец
		    sj[#sj + 1] = {
				section = "logic@mil_village_soldier1",
				prior = 1,
				squad = squad, group = groups[0],
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_specnaz"
					    end
				}
		    --Рядовой
		    sj[#sj + 1] = {
				section = "logic@mil_village_soldier2",
				prior = 1,
				squad = squad, group = groups[0],
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_regular"
					    end
				}
		    --Угрюмый
		    sj[#sj + 1] = {
				section = "logic@mil_village_ugrumy_search",
				prior = 1, state = {1},
				squad = squad, group = groups[0],
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_master_Ugrumiy"
					    end
				}
		    --Спецназовец
		    sj[#sj + 1] = {
				section = "logic@mil_village_specnaz_search",
				prior = 1, state = {1},
				squad = squad, group = groups[0],
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_specnaz"
					    end
				}
		    --Рядовой
		    sj[#sj + 1] = {
				section = "logic@mil_village_regular_search",
				prior = 1, state = {1},
				squad = squad, group = groups[0],
				predicate = function (info)
						     return info.profile_name == "mil_Svoboda_regular"
					    end
			}
		end,
		--------------------------------------------------------------------------
		-- Функция проверки состояния гулага деревни
		--------------------------------------------------------------------------
		state = function(gulag)
			if has_alife_info("mil_miser_task_complete") or
			   has_alife_info("mil_after_hunt_talked") then
				return 1
			end
			return 0
		end,
		check = check_freedom
	},
	["mil_dolg"] = {
		--------------------------------------------------------------------------
		-- Функция загрузки работ для Долга
		--------------------------------------------------------------------------
		job = function(sj, gname, squad, groups)
		    -- первое состояние
		    sj[#sj + 1] = {
				section = "logic@mil_dolg_skull",
				prior = 13,
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg" and info.story_id == 708
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier1",
				prior = 10,
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier2",
				prior = 12,
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg" and info.story_id == 711
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier3",
				prior = 10,
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier4",
				prior = 10,
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier5",
				prior = 10,
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier6",
				prior = 10,
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier7",
				prior = 10,
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}
		    -- второе состояние
		    sj[#sj + 1] = {
				section = "logic@mil_dolg_skull_attack",
				prior = 13, state = {1},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     if info.community ~= "dolg" then return false end
						     if has_alife_info("mil_scull_dead") then return true end
						     return info.story_id == 708
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier1_attack",
				prior = 10, state = {1},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier2_attack",
				prior = 12, state = {1},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg" and info.story_id == 711
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier3_attack",
				prior = 10, state = {1},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier4_attack",
				prior = 11, state = {1},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier5_attack",
				prior = 11, state = {1},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier6_attack",
				prior = 11, state = {1},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier7_attack",
				prior = 10, state = {1},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}
		    -- третье состояние
		    sj[#sj + 1] = {
				section = "logic@mil_dolg_skull_return",
				prior = 13, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     if info.community ~= "dolg" then return false end
						     if has_alife_info("mil_scull_dead") then return true end
						     return info.story_id == 708
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier1_return",
				prior = 10, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier2_return",
				prior = 12, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier3_return",
				prior = 10, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier4_return",
				prior = 10, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier5_return",
				prior = 10, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier6_return",
				prior = 10, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}

		    sj[#sj + 1] = {
				section = "logic@mil_dolg_soldier7_return",
				prior = 10, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 400,
				predicate = function (info)
						     return info.community == "dolg"
					    end
				}
		end,
		--------------------------------------------------------------------------
		-- Функция проверки состояния гулага Долга
		-- Возвращаемые значения:
		--              0 - первое состояние (убийство патруля и сбор в сарае)
		--              1 - снайпер умер, атака на базу Свободы
		--              2 - Лукаш убит - возвращение на хутор
		--------------------------------------------------------------------------
		state = function(gulag)
			if has_alife_info("mil_lukash_dead") == true then
				return 2
			end

			if has_alife_info("mil_dolg_skull_talk") == true and not has_alife_info("mil_lukash_dead") then
				return 1
			end

			return 0
		end,
		check = function(npc_community)
			return npc_community == "dolg"
		end
	},
	["mil_monolit"] = {
		--------------------------------------------------------------------------
		-- Функция загрузки работ гулага у выхода на Радар Монолита
		--------------------------------------------------------------------------
		job = function(sj, gname, squad, groups)
		    for a = 1, 3, 1 do
			sj[#sj + 1] = {
					section = "logic@mil_monolith_soldier1",
				    prior = a,
				    squad = squad, group = groups[0],
				    predicate = function (info)
							 return info.community == "monolith"
						end
				    }
			    sj[#sj+1] = t

			sj[#sj + 1] = {
					section = "logic@mil_monolith_soldier2",
				    prior = a,
				    squad = squad, group = groups[0],
				    predicate = function (info)
							 return info.community == "monolith"
						end
				    }
			    sj[#sj+1] = t

			sj[#sj + 1] = {
					section = "logic@mil_monolith_soldier3",
				    prior = a,
				    squad = squad, group = groups[0],
				    predicate = function (info)
							 return info.community == "monolith"
						end
				    }
			    sj[#sj+1] = t

			sj[#sj + 1] = {
					section = "logic@mil_monolith_soldier4",
				    prior = a,
				    squad = squad, group = groups[0],
				    predicate = function (info)
							 return info.community == "monolith"
						end
				    }
			    sj[#sj+1] = t

			sj[#sj + 1] = {
					section = "logic@mil_monolith_soldier5",
				    prior = a,
				    squad = squad, group = groups[0],
				    predicate = function (info)
							 return info.community == "monolith"
						end
				    }
			    sj[#sj+1] = t

			sj[#sj + 1] = {
					section = "logic@mil_monolith_soldier6",
				    prior = a,
				    squad = squad, group = groups[0],
				    predicate = function (info)
							 return info.community == "monolith"
						end
				    }
			    sj[#sj+1] = t
		    end
		end,
		check = function(npc_community)
			return npc_community == "monolith"
		end
	},
	["mil_monster"] = {
		-------------------------------------------------------------------------------------------
		-- Загрузка работ для мутантов
		-------------------------------------------------------------------------------------------
		job = function(sj, gname, squad, groups)
		    for a = 1, 10, 1 do
			--
			sj[#sj + 1] = {
					section = "logic@mil_monster1",
				    prior = 1,
				    squad = squad, group = groups[0]
				    }
			    sj[#sj+1] = t

			sj[#sj + 1] = {
					section = "logic@mil_monster2",
				    prior = 1, state = {1},
				    squad = squad, group = groups[0]
				    }
			    sj[#sj+1] = t
		    end
		end,
		-------------------------------------------------------------------------------------------
		-- Проверка состояния гулага мутантов
		-------------------------------------------------------------------------------------------
		state = function(gulag)
		    --создадим переменную, которая отвечает за то, что мутанты не попрут назад, когда кто-то
		    --из них помрет
		    if gulag.state == 0 then
		       --считаем только тех, кто уже пришёл, иначе создастся ситуация, когда гулаг
		       --формально наполнен, но все новосёлы ещё гуляют по соседним локациям
		       if gulag:get_population_comed () > 9 then
			  return 1
		       end
		    else
		       if gulag:get_population_comed () ~= 0 then
			  return 1
		       end
		    end
		    return 0
		end,
		-------------------------------------------------------------------------------------------
		-- Проверка на принадлежность мутантов нам
		-------------------------------------------------------------------------------------------
		check = function(npc_community, se_obj)
			return not se_obj
		end
	}
}

function get_gulag(gulag_type)
	return gulags[gulag_type]
end
