------------- БИОРАДАР ------------------------------------------
-- Dетектор живых форм, будь он неладен.
-- Автор Charsi 29.11.2012
-- Адаптация Charsi 25.12.2012; дополнение alen-fantom 29.12.2012
-----------------------------------------------------------------
-------------- настройки -----------
local biomap_sweep_enabled = true -- включить волну
local fading = true               -- затухание точек
------------------------------------

local colors = {
	[clsid.tushkano_s]	= { 50,50,255 },
	[clsid.flesh_s]		= { 64,153,79 },
	[clsid.boar_s]		= { 64,153,79 },
	[clsid.cat_s]		= { 252,158,66 },
	[clsid.zombie_s]	= { 200,200,200 },
	[clsid.burer_s]		= { 45,102,112 },
	[clsid.chimera_s]	= { 255,0,0 },
	[clsid.dog_s]		= { 252,158,66 },
	[clsid.pseudodog_s]	= { 171,94,23 },
	[clsid.psy_dog_s]	= { 132,80,32 },
	[clsid.snork_s]		= { 145,71,214 },
	[clsid.poltergeist_s]	= { 255,0,238 },
	[clsid.gigant_s]	= { 253,121,121 },
	[clsid.controller_s]	= { 0,238,255 },
	[clsid.bloodsucker_s]	= { 255,0,120 },
	[clsid.rat_s]		= { 94,3,80 }
}

local parts = {
	[clsid.tushkano_s]	= "mutant_face_tushkano",
	[clsid.flesh_s]		= "mutant_flesh_eye",
	[clsid.boar_s]		= "mutant_boar_leg",
	[clsid.cat_s]		= "mutant_tail_cat",
	[clsid.zombie_s]	= "mutant_zombie_hand",
	[clsid.burer_s]		= "mutant_burer_hand",
	[clsid.chimera_s]	= "mutant_chimera_kogot",
	[clsid.dog_s]		= "mutant_dog_tail",
	[clsid.pseudodog_s]	= "mutant_psevdodog_tail",
	[clsid.psy_dog_s]	= "mutant_psevdodog_tail",
	[clsid.snork_s]		= "mutant_snork_leg",
	[clsid.poltergeist_s]	= "mutant_poltergeist_glas",
	[clsid.gigant_s]	= "mutant_psevdogigant_hand",
	[clsid.controller_s]	= "mutant_hand_kontroler",
	[clsid.bloodsucker_s]	= "mutant_krovosos_jaw",
	[clsid.rat_s]		= "mutant_rat_tail"
}

local max_dist = 46 -- макс расстояние до цели
local screen_max_dist = 85 -- макс расстояние в пикселях радара
local biomap_width = 256 -- пиксельная ширина биорадара
local biomap_sweep_width = 238 --ширина статика волны
local step_angle = 3/180 -- шаг за апдейт (скорость поворота)
-------------------------------------
local dot_size = 3
local dots = {}
local creatures = {}
local d = 128
local koef_x = 0
local koef_x_old = 0
local a,s,c,b,xa = 0,0,1,0,0
local level_object_by_id = level.object_by_id
local ms, mc, math_atan2 = math.sin, math.cos, math.atan2
local math_fmod = math.fmod
local math_pi = math.pi
local hud = get_hud()
local angle = 0
local lim_angle = 1000*2*math_pi
local biomap_sweep = nil
-- вызывается из net_spawn биндера объекта
-- регистрирует объект
function add_obj(obj)
	creatures [obj:id()] = not IsMonster(obj)
end

-- вызывается из net_destroy биндера объекта
-- отрегистрирует объект
function remove_obj(obj)
	creatures[obj:id()] = nil
end

-- вызывается из update биндера актора
-- обновление положения точек и/или волны
function update()
	if not inventory.belt["bioradar"] or level.main_input_receiver() then bioradar_hide() return end

	-- скорректируем ширину под ш\ф
	koef_x = (device().height/device().width) / (768/1024)
	if koef_x ~= koef_x_old then
		koef_x_old = koef_x
		hud:RemoveCustomStatic("biomap_sweep")
		hud:RemoveCustomStatic("biomap")
		dots={}
	end
	if not hud:GetCustomStatic("biomap") then
		local biomap = hud:AddCustomStatic("biomap"):wnd()
		biomap:SetWndPos(1024 + 3 - biomap_width*koef_x,1)
		biomap:SetWidth(biomap_width*koef_x)

		if biomap_sweep_enabled then
			biomap_sweep = hud:AddCustomStatic("biomap_sweep"):wnd()
			biomap_sweep:SetColor(GetARGB(100,68,255,96)) -- устанавливаем цвет
			biomap_sweep:Init(1024 + 3 - (biomap_width + biomap_sweep_width)*koef_x/2,2 + (biomap_width - biomap_sweep_width)/2,biomap_sweep_width*koef_x,biomap_sweep_width)
		end
	end

	local actor_pos = db_actor:position()
	local sim = alife()
	local sdir = device().cam_dir
	a = math_atan2(-sdir.x,sdir.z)
	s,c = ms(a),mc(a)

	if biomap_sweep_enabled or fading then
		angle = angle - step_angle
		if angle < -lim_angle then angle = angle + lim_angle end
	end

	if biomap_sweep_enabled then
		biomap_sweep:SetHeading(angle) -- поворачиваем статик

		if koef_x<1 then -- коррекция волны на ш/ф
			local delta = ms(angle)
			delta = biomap_sweep_width*(koef_x-1)          --(убрал под 1.0006 alen-fantom)
			local delta_x = biomap_sweep_width*koef_x - delta
			local delta_y = biomap_sweep_width + delta
			biomap_sweep:Init(1024 + 3 - biomap_width*koef_x/2 - delta_x/2,2 + biomap_width/2 - delta_y/2,delta_x,delta_y)
		end
	end

	if fading then
		xa = - math_fmod(angle*(180 / math_pi),360)
	end

	for id,is_stalker in pairs(creatures) do
		local so = sim:object(id)
		if so then
			local o = level_object_by_id(id)
			if o then
				local d = dots[id] or dot(o,is_stalker)
				if d.need_show then
					d:draw(o:position():sub(actor_pos),o:alive())
				else
					d:hide()
				end
			elseif dots[id] then
				dots[id]:hide()
			end
		elseif dots[id] then
			dots[id]:hide()
			dots[id] = nil
		end
	end
end

-- убирает радар с экрана
function bioradar_hide()
	if hud:GetCustomStatic("biomap") then
		dots = {}
		hud:RemoveCustomStatic("biomap")

		if biomap_sweep_enabled then
			hud:RemoveCustomStatic("biomap_sweep")
			biomap_sweep = nil
		end
	end
end

-- классс точки объекта
class "dot"
function dot:__init(o,is_stalker)
	self.o_id = o:id()
	dots[self.o_id] = self
	self.alive = o:alive()
	self.need_show, self.color = self:get_color(o, is_stalker)
	self.a = fading and (self.o_id==0 and 255 or 0) or 255
	self.st = CUIStatic()
	self.st:Init(1024,0,dot_size,dot_size)
	self.st:InitTexture("biomap\\white_dot")
	self.st:SetStretchTexture(true)
	hud:GetCustomStatic("biomap"):wnd():AttachChild(self.st)
	self.st:SetAutoDelete(true)
	self.cnt = 0
	self.st:SetWndPos(d * koef_x - 1,d)
	self.st:SetColor(GetARGB(self.a,self.color[1],self.color[2],self.color[3]))
end

-- нарисовать точку
function dot:draw(dir,obj_alive)
	if self.cnt > 0 then
		self.cnt = self.cnt - 1
		return
	end

	local z = dir:magnitude()/ max_dist
	if z<=1 then
		if self.alive and not obj_alive then
			self.alive = false
			if fading then
				self.color = {127,127,127}
			else
				self.st:SetColor(GetARGB(self.a,127,127,127))
			end
		end
		local vx,vz = dir.x/max_dist * screen_max_dist , -dir.z/max_dist * screen_max_dist
		local x,y = vx * c - vz * s , vx * s + vz * c
		self.st:SetWndPos( (x + d)*koef_x - 1, y + d)
		if self.o_id == 0 then self.cnt = 100000 return end
		-------- угасание точек -------
		if fading then
			local u = math_atan2(y, x) * (180 / math_pi) + 180
			if (xa > u and xa-u or u-xa) < 1.5 then
				self.a = 255
			elseif self.a > 2 then
				self.a = self.a - 1
			end
			self.st:SetColor(GetARGB(self.a,self.color[1],self.color[2],self.color[3]))
		end
		---------------------------------
	else
		self.cnt = math.ceil(math.random(30,50)*z*z)
		self:hide()
	end
end

-- скрыть точку
function dot:hide()
	self.st:SetWndPos(1024,0)
end

-- получение цвета точки
function dot:get_color(obj, is_stalker)
	if not obj:alive() then
		return true, { 127, 127, 127 }
	end

	local clsid = obj:clsid()
	if clsid == clsid_actor then
		return true, { 0, 255, 0 }
	elseif is_stalker then
		return true, { 255, 255, 0 }
	end

	local part = parts[clsid]
	if part then
		return inventory.belt[part] ~= nil, colors[clsid]
	else
		return false, { 255, 255, 0 }
	end
end
