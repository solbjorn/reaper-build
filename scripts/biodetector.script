local counter = 1
local max_count = 30 --количество меток максимум
local max_dist = 60 --макс расстояние до цели
local screen_max_dist = 100 --макс расстояние в пикселях радара
local center_x = 876 --отсюда отсчитываем, центр радара
local center_y = 140 --отсюда отсчитываем, центр радара
local tex_arr = {}
local col_arr = {}

function draw_dot(dx,dy,color,tex)
	local hud = get_hud()
	
	local custom_static = hud:GetCustomStatic("target_dot_"..counter)
	if custom_static == nil then
		hud:AddCustomStatic("target_dot_"..counter, true)
		custom_static = hud:GetCustomStatic("target_dot_"..counter)
	end
	
	custom_static:wnd():SetWndPos(center_x+dx,center_y+dy)
	
	tex = tex or [[biomap\white_dot]]
	if not tex_arr[counter] or tex_arr[counter]~=tex then
		custom_static:wnd():InitTexture(tex)
		tex_arr[counter]=tex
	end
	color = color or GetARGB(255,255,0,0)
	if not col_arr[counter] or col_arr[counter]~=color then
		custom_static:wnd():SetColor(color)
		col_arr[counter]=color
	end
	
end

function transform_coords(tpos)
	local sdir = device().cam_dir
	local dir = tpos:sub(db.actor:position())
	local dx = dir.x / max_dist * screen_max_dist
	local dy = -dir.z / max_dist * screen_max_dist
	local vect = vector():set(dx,0,dy)
	vect = vector_rotate_y(vect,math.atan2(-sdir.x,sdir.z)/math.pi*180)
	return vect.x,vect.z
end

local parts = {
	[clsid.tushkano_s]	= "mutant_face_tushkano",
	[clsid.flesh_s]		= "mutant_flesh_eye",
	[clsid.boar_s]		= "mutant_boar_leg",
	[clsid.cat_s]		= "mutant_tail_cat",
	[clsid.zombie_s]	= "mutant_zombie_hand",
	[clsid.burer_s]		= "mutant_burer_hand",
	[clsid.chimera_s]	= "mutant_chimera_kogot",
	[clsid.dog_s]		= "mutant_dog_tail",
	[clsid.pseudodog_s]	= "mutant_psevdodog_tail",
	[clsid.psy_dog_s]	= "mutant_psevdodog_tail",
	[clsid.snork_s]		= "mutant_snork_leg",
	[clsid.poltergeist_s]	= "mutant_poltergeist_glas",
	[clsid.gigant_s]	= "mutant_psevdogigant_hand",
	[clsid.controller_s]	= "mutant_hand_kontroler",
	[clsid.bloodsucker_s]	= "mutant_krovosos_jaw",
	[clsid.rat_s]		= "mutant_rat_tail"
}

local good = {
	[clsid.tushkano_s]	= GetARGB(255,50,50,255),
	[clsid.flesh_s]		= GetARGB(255,64,153,79),
	[clsid.boar_s]		= GetARGB(255,64,153,79),
	[clsid.cat_s]		= GetARGB(255,252,158,66),
	[clsid.zombie_s]	= GetARGB(255,200,200,200),
	[clsid.burer_s]		= GetARGB(255,45,102,112),
	[clsid.chimera_s]	= GetARGB(255,255,0,0),
	[clsid.dog_s]		= GetARGB(255,252,158,66),
	[clsid.pseudodog_s]	= GetARGB(255,171,94,23),
	[clsid.psy_dog_s]	= GetARGB(255,132,80,32),
	[clsid.snork_s]		= GetARGB(255,145,71,214),
	[clsid.poltergeist_s]	= GetARGB(255,255,0,238),
	[clsid.gigant_s]	= GetARGB(255,253,121,121),
	[clsid.controller_s]	= GetARGB(255,0,238,255),
	[clsid.bloodsucker_s]	= GetARGB(255,255,0,120),
	[clsid.rat_s]		= GetARGB(255,94,3,80)
}

local bad = {
	[clsid.dog_s]		= GetARGB(0,252,158,66)
}

function get_color(obj)
	local obj_id = obj:id()
	local so = g_alife:object(obj_id)

	if not obj:alive() then
		return GetARGB(255,127,127,127)
	end

	if obj_id == db_actor_id then
		return GetARGB(255,0,255,0)
	elseif IsStalker(so) then
		return GetARGB(255,255,255,0)
	end

	local clsid = obj:clsid()
	if parts[clsid] then
		if inventory.belt[parts[clsid]] then
			return good[clsid]
		else
			return bad[clsid] or GetARGB(0,255,255,0)
		end
	end

	return nil
end

function update()
        if inventory.belt["bioradar"]==nil then
           local map = get_hud()
           if map:GetCustomStatic("biomap")~=nil then
              local custom_static=map:GetCustomStatic("biomap")
              custom_static:wnd():SetWndPos(-1000,-1000)
           end
		for a=1,25 do
              if map:GetCustomStatic("target_dot_"..a)~=nil then
                 local custom_static=map:GetCustomStatic("target_dot_"..a)
                 custom_static:wnd():SetWndPos(-100,-100)
              end
           end
           return
        end
        local hud = get_hud()
	if hud:GetCustomStatic("biomap") == nil then
		hud:AddCustomStatic("biomap", true)
	end
	local biomap_static=hud:GetCustomStatic("biomap")
	biomap_static:wnd():SetWndPos(752,16)
	counter = 1
	for id,obj in pairs(db.storage) do
		local o = level.object_by_id(id)
		local so = alife():object(id)
                if so and o then
			local stalker=IsStalker(so)
			local monster=IsMonster(so)
			if (stalker or monster) and o:position():distance_to_xz(db.actor:position())<=max_dist then
				local x,y=transform_coords(o:position())
                                local tex = nil
                                draw_dot(x,y,get_color(o),tex)
				counter = counter+1
				if counter>max_count then break end
			end
		end
	end
	
	if counter<=max_count then
		for a=counter,max_count do
			local custom_static = hud:GetCustomStatic("target_dot_"..a)
			if custom_static ~= nil then
				custom_static:wnd():SetWndPos(-100,-100)
			end
		end
	end
end







