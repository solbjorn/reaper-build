-- Биндер болтов
-- Автор: Charsi

local t = {} -- таблица зарегистрированных кинутых болтов
local updatable = { }

function init(obj)
	obj:bind_object(BBolt(obj))
end

class "BBolt" (object_binder)

function BBolt:__init(obj)
	super(obj)
end

function BBolt:reload(section)
	object_binder.reload(self, section)
end

function BBolt:reinit()
	object_binder.reinit(self)
end

function BBolt:update(delta)
	object_binder.update(self, delta)

	local id = self.object:id()
	if updatable[id] then
		local parent = self.object:parent()
		if parent and parent:id() == 0 then
			updatable[id] = nil
			return
		end

		local ps=self.object:get_physics_shell()
		if ps then
			local curr_vel=vector()
			ps:get_angular_vel(curr_vel)
			local current_velocity = vector()
			ps:get_linear_vel(current_velocity)
			if curr_vel:magnitude()>1 or current_velocity:magnitude()>15 then
				bolt_ending.remove_bolt()
				updatable[id] = nil
			end
		end
	end
end

function BBolt:net_spawn(data)
	if object_binder.net_spawn(self, data) == false then
		return false
	end

	if self.object:position():distance_to(Actor:position()) <= 2 then
		updatable[self.object:id()] = true
	end

	return true
end

function BBolt:net_destroy()
	object_binder.net_destroy(self)
end

function BBolt:net_save_relevant()
	return true
end
