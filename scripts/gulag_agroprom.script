--'--------------------------------------------------------------------------
--' AGROPROM and AGROPROM Underground combined
--'--------------------------------------------------------------------------

function load_job( sj, gname, type, squad, groups )
	local t
--'--------------------------------------------------------------------------
--' AGROPROM
--'--------------------------------------------------------------------------
	if type == "agr_road_patrol1" then
		for i = 1, 5 do
			t = { section = "logic@agr_road_patrol1"..i,
				idle = 0,
				prior = 5, state = {0},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = "agr_patrol_1_space_restrictor"
			}
			sj[#sj+1] = t
		end
		return true
	end

	if type == "agr_road_patrol2" then
		for i = 1, 2 do
			t = { section = "logic@agr_road_patrol2"..i,
				idle = 0,
				prior = 5, state = {0},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = ""
			}
			sj[#sj+1] = t
		end
		return true
	end

	------------------ НИИ Агропром. База военных ------------------------------------------
	-- состояния: 0-день, 1-ночь, 2-пересменка, 3-тревога
	if type == "agr_nii" then

		-- командир
		t = { section = "logic@agr_nii_day_commander",
			idle = 0, position_threshold = 150,
			prior = 9, state = {0},
			predicate = function(obj_info)
			            	return obj_info.name == "agr_nii_commander"
			            end,
			in_rest = "", out_rest = "agr_nii_space_restrictor"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_night_commander",
			idle = 0, position_threshold = 150,
			prior = 9, state = {1,2},
			predicate = function(obj_info)
			            	return obj_info.name == "agr_nii_commander"
			            end,
			in_rest = "", out_rest = "agr_nii_space_restrictor"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_night_commander",
			idle = 0, position_threshold = 150,
			prior = 1, state = {1,2},
			in_rest = "", out_rest = "agr_nii_space_restrictor"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_alarm_commander",
			idle = 0, position_threshold = 150,
			prior = 9, state = {3},
			predicate = function(obj_info)
			            	return obj_info.name == "agr_nii_commander"
			            end,
			in_rest = "", out_rest = "agr_nii_sr_building"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_alarm_commander",
			idle = 0, position_threshold = 150,
			prior = 1, state = {3},
			in_rest = "", out_rest = ""
		}
		sj[#sj+1] = t
		-- пост на северных воротах
		t = { section = "logic@agr_nii_north_gate_walker1",
			idle = 0, position_threshold = 150,
			prior = 5, state = {0,1,2,3},
			in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_north_gate_walker2",
			idle = 0, position_threshold = 150,
			prior = 5, state = {0,1,2,3},
			in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_north_gate_walker3",
			idle = 0, position_threshold = 150,
			prior = 5, state = {0,1,2,3},
			in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
		}
		sj[#sj+1] = t
		-- пост на восточных воротах
		t = { section = "logic@agr_nii_east_gate_walker1",
			idle = 0, position_threshold = 150,
			prior = 5, state = {0,1,2,3},
			in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_east_gate_walker2",
			idle = 0, position_threshold = 150,
			prior = 5, state = {0,1,2,3},
			in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
		}
		sj[#sj+1] = t
		-- 1-й этаж основного здания
		t = { section = "logic@agr_nii_floor1_day_walker1",
			idle = 0, position_threshold = 150,
			prior = 3, state = {0},
			in_rest = "", out_rest = "agr_nii_sr_building"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_floor1_alarm_walker1",
			idle = 0, position_threshold = 150,
			prior = 3, state = {3},
			in_rest = "", out_rest = "agr_nii_sr_building"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_floor1_day_walker2",
			idle = 0, position_threshold = 150,
			prior = 3, state = {0,1,3},
			in_rest = "", out_rest = "agr_nii_sr_building"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_floor1_alarm_walker2",
			idle = 0, position_threshold = 150,
			prior = 3, state = {3},
			in_rest = "", out_rest = "agr_nii_sr_building"
		}
        sj[#sj+1] = t
		-- 2-й этаж основного здания
		t = { section = "logic@agr_nii_floor2_day_walker1",
			idle = 0, position_threshold = 150,
			prior = 3, state = {0},
			in_rest = "", out_rest = "agr_nii_sr_building"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_floor2_alarm_walker1",
			idle = 0, position_threshold = 150,
			prior = 3, state = {3},
			in_rest = "", out_rest = "agr_nii_sr_building"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_floor2_day_walker2",
			idle = 0, position_threshold = 150,
			prior = 3, state = {0,3},
			in_rest = "", out_rest = "agr_nii_sr_building"
		}
		sj[#sj+1] = t
		-- 3-й этаж основного здания
		t = { section = "logic@agr_nii_floor3_walker1",
			idle = 0, position_threshold = 150,
			prior = 4, state = {0,1,3},
			in_rest = "", out_rest = "agr_nii_3_floor"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_floor3_walker2",
			idle = 0, position_threshold = 150,
			prior = 4, state = {0,1,3},
			in_rest = "", out_rest = "agr_nii_3_floor"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_floor3_walker3",
			idle = 0, position_threshold = 150,
			prior = 4, state = {0,1},
			in_rest = "", out_rest = "agr_nii_3_floor"
		}
		sj[#sj+1] = t
		-- дневные патрули
		t = { section = "logic@agr_nii_day_patrol_walker1",
			idle = 0, position_threshold = 150,
			prior = 2, state = {0},
			in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_day_patrol_walker2",
			idle = 0, position_threshold = 150,
			prior = 2, state = {0},
			in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_day_patrol_walker3",
			idle = 0, position_threshold = 150,
			prior = 2, state = {0},
			in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_day_patrol_walker4",
			idle = 0, position_threshold = 150,
			prior = 2, state = {0},
			in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_nii_day_patrol_walker5",
			idle = 0, position_threshold = 150,
			prior = 2, state = {0},
			in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
		}
		sj[#sj+1] = t
		-- патрули в тревоге
		for i = 1, 5 do
			t = { section = "logic@agr_nii_alarm_patrol_walker"..i,
				idle = 0, position_threshold = 150,
				prior = 4, state = {3},
				in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
			}
			sj[#sj+1] = t
		end
		-- дневные отдыхающие
		for i = 1, 2 do
			t = { section = "logic@agr_nii_rest_walker"..i,
				idle = 0, position_threshold = 150,
				prior = 0, state = {0},
				in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
			}
			sj[#sj+1] = t
		end
		-- ночные отдыхающие
		for i = 1, 11 do
			t = { section = "logic@agr_nii_sleeper"..i,
				idle = 0, position_threshold = 150,
				prior = 0, state = {1,2},
				in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
			}
			sj[#sj+1] = t
		end
		return true
	end

	------------------ Солдаты атакующие группу Крота ------------------------------------------
	if type == "agr_factory_assault" then
		-- идут к обороняющимся
		t = { section = "logic@agr_factory_assault_walker1",
			idle = 0, position_threshold = 150,
			prior = 0, state = {0},
			squad = squad, group = groups[1],
			predicate = function(obj_info)
			            	return obj_info.name == "agr_factory_assault_soldier1"
			            end,
			in_rest = "", out_rest = ""
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_factory_assault_walker2",
			idle = 0, position_threshold = 150,
			prior = 0, state = {0},
			squad = squad, group = groups[1],
			predicate = function(obj_info)
			            	return obj_info.name == "agr_factory_assault_soldier2"
			            end,
			in_rest = "", out_rest = ""
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_factory_assault_walker3",
			idle = 0, position_threshold = 150,
			prior = 0, state = {0},
			squad = squad, group = groups[1],
			predicate = function(obj_info)
			            	return obj_info.name == "agr_factory_assault_soldier3"
			            end,
			in_rest = "", out_rest = ""
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_factory_assault_walker4",
			idle = 0, position_threshold = 150,
			prior = 0, state = {0},
			squad = squad, group = groups[1],
			predicate = function(obj_info)
			            	return obj_info.name == "agr_factory_assault_soldier4"
			            end,
			in_rest = "", out_rest = ""
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_factory_assault_walker5",
			idle = 0, position_threshold = 150,
			prior = 0, state = {0},
			squad = squad, group = groups[1],
			predicate = function(obj_info)
			            	return obj_info.name == "agr_factory_assault_soldier5"
			            end,
			in_rest = "", out_rest = ""
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_factory_assault_walker6",
			idle = 0, position_threshold = 150,
			prior = 0, state = {0},
			squad = squad, group = groups[1],
			predicate = function(obj_info)
			            	return obj_info.name == "agr_factory_assault_soldier6"
			            end,
			in_rest = "", out_rest = ""
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_factory_assault_walker7",
			idle = 0, position_threshold = 150,
			prior = 0, state = {0},
			squad = squad, group = groups[1],
			predicate = function(obj_info)
			            	return obj_info.name == "agr_factory_assault_soldier7"
			            end,
			in_rest = "", out_rest = ""
		}
		sj[#sj+1] = t
		t = { section = "logic@agr_factory_assault_walker8",
			idle = 0, position_threshold = 150,
			prior = 0, state = {0},
			squad = squad, group = groups[1],
			predicate = function(obj_info)
			            	return obj_info.name == "agr_factory_assault_soldier8"
			            end,
			in_rest = "", out_rest = ""
		}
		sj[#sj+1] = t
		-- сражаются на улице
		for i = 1, 8 do
			t = { section = "logic@agr_factory_assault_skirmish_walker"..i,
				idle = 0, position_threshold = 150,
				prior = 0, state = {1},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = "agr_factory_skirmish"
			}
			sj[#sj+1] = t
		end
		-- идут к Кроту
		for i = 1, 8 do
			t = { section = "logic@agr_factory_assault_bld_walker"..i,
				idle = 0, position_threshold = 150,
				prior = 0, state = {2},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = "agr_factory_hold_restrictor"
			}
			sj[#sj+1] = t
		end
		return true
	end

	------------------ Сталкеры из группы Крота ------------------------------------------
	if type == "agr_factory_defence" then
		-- ждут военных
		for i = 1, 6 do
			t = { section = "logic@agr_factory_defence_walker"..i,
				idle = 0, position_threshold = 150,
				prior = 0, state = {0},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = "agr_factory_skirmish_defence"
			}
			sj[#sj+1] = t
		end
		-- отстреливаются от военных
		for i = 1, 6 do
			t = { section = "logic@agr_factory_defence_skirmish_walker"..i,
				idle = 0, position_threshold = 150,
				prior = 0, state = {1},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = "agr_factory_skirmish_defence"
			}
			sj[#sj+1] = t
		end
		-- бегут помогать Кроту
		for i = 1, 9 do
			t = { section = "logic@agr_factory_defence_krot_walker"..i,
				idle = 0, position_threshold = 150,
				prior = 0, state = {2},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = ""
			}
			sj[#sj+1] = t
		end
		-- бегут по путям к колодцу и стоят там
		for i = 1, 9 do
			t = { section = "logic@agr_factory_defence_to_well_walker"..i,
				idle = 0, position_threshold = 150,
				prior = 0, state = {3},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = ""
			}
			sj[#sj+1] = t
		end

------ Сталкеры ждут начала атаки ---------------------------------------------------------------
        for i = 1, 3 do
			t = { section = "logic@agr_factory_defence_waiting_stalker"..i,
				idle = 0, position_threshold = 150,
				prior = 0, state = {0,1},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = ""
			}
			sj[#sj+1] = t
		end
		return true
	end

	------------------ Солдаты удерживают Крота ------------------------------------------
	if type == "agr_factory_hold" then
		-- стреляют по точкам
		for i = 1, 3 do
			t = { section = "logic@agr_factory_hold_fake_walker"..i,
				idle = 0, position_threshold = 150,
				prior = 0, state = {0},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = "agr_factory_hold_restrictor"
			}
			sj[#sj+1] = t
		end
		-- срываются в универсальный бой под рестриктором
		for i = 1, 3 do
			t = { section = "logic@agr_factory_hold_walker"..i,
				idle = 0, position_threshold = 150,
				prior = 0, state = {1},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = "agr_factory_hold_restrictor"
			}
			sj[#sj+1] = t
		end
		-- Убили Крота. Ходят по путям без рестрикторов
		for i = 1, 3 do
			t = { section = "logic@agr_factory_hold_walker"..i,
				idle = 0, position_threshold = 150,
				prior = 0, state = {2},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = ""
			}
			sj[#sj+1] = t
		end
		return true
	end

--'--------------------------------------------------------------------------
--' AGROPROM Underground
--'--------------------------------------------------------------------------
	if type == "agr_u_soldiers" then
		for i = 1, 8 do
			t = { section = "logic@agr_u_soldiers"..i,
				idle = 0,
				prior = 5, state = {0},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = ""
			}
			sj[#sj+1] = t
		end
		return true
	end

	if type == "agr_u_bandits" then
		for i = 1, 7 do
			t = { section = "logic@agr_u_bandits"..i,
				idle = 0,
				prior = 5, state = {0},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = ""
			}
			sj[#sj+1] = t
		end
		return true
	end
end

function load_states(type)
--'--------------------------------------------------------------------------
--' AGROPROM
--'--------------------------------------------------------------------------
	if type == "agr_nii" then
		return function(gulag)
			local actor = db.actor
			if not actor then
				return gulag.state
			end

			local be
			local alarm = false

			if has_alife_info( "agr_nii_sniper_alarm" ) then
				alarm = true
			else
				for k, v in pairs(gulag.Object) do
					if v ~= true and v:best_enemy() ~= nil and v:best_enemy():id() == 0 then
						alarm = true
						break
					end
				end
			end

			if alarm then
				actor:give_info_portion( "agr_nii_alarm" )
				return 3
			else
				actor:disable_info_portion( "agr_nii_alarm" )
			end

			if level.get_time_hours() >= 6 and level.get_time_hours() < 21 then
				return 0  -- день
			elseif level.get_time_hours() >= 23 then
				return 2  -- ночь c пересменкой
			else
				return 1  -- ночь
			end
		end
	end

	if type == "agr_factory_assault" then
		return function( gulag )
			local actor = db.actor
			if not actor then
				return gulag.state
			end

			if gulag.state == 0 then
				if has_alife_info( "agr_factory_assault_skirmish" ) then
					return 1
				else
					return 0
				end
			elseif gulag.state == 1 then
				if xr_gulag.getGulagPopulation( "agr_factory_defence" ) == 0 then
					if not has_alife_info( "agr_help_stalkers_done" ) then
						actor:give_info_portion( "agr_help_stalkers_done" )
						actor:give_info_portion( "agr_help_stalkers_defence_dead" )
					end
				end

				if has_alife_info( "agr_krot_skirmish_start" ) and
				   has_alife_info( "agr_help_stalkers_done" ) or
				   xr_conditions.gulag_empty(nil, nil, {"agr_factory_defence"})
				then
					return 2
				else
					return 1
				end
			else
				return 2
			end
		end
	end

	if type == "agr_factory_defence" then
		return function( gulag )
			local actor = db.actor
			if not actor then
				return gulag.state
			end

			if gulag.state == 0 then
				if has_alife_info( "agr_factory_assault_skirmish" ) then
					return 1
				else
					return 0
				end

			elseif gulag.state == 1 then
				if xr_conditions.gulag_population_active( actor, nil, {"agr_factory_assault"} ) > 0 then
					return 1
				else
					actor:give_info_portion( "agr_help_stalkers_done" )
					actor:give_info_portion( "agr_help_stalkers_assault_dead" )
					return 2
				end
			else
				if has_alife_info( "agr_krot_go_to_well" ) then
					return 3
				else
					return 2
				end
			end
		end
	end

	if type == "agr_factory_hold" then
		return function( gulag )
			local actor = db.actor
			if not actor then
				return gulag.state
			end

			if gulag.state == 0 then
				if has_alife_info( "agr_krot_dead" ) then
					return 2
				elseif has_alife_info( "agr_krot_skirmish_start" ) then
					-- раздать всем хиты, чтоб не ходили спокойно
					local h     = hit()
					h.power     = 0.01
					h.direction = vector():set( 1, 0, 0 )
					h.draftsman = actor
					h.impulse   = 1
					h.type      = hit.wound

					for k, v in pairs(gulag.Object) do
						if v ~= true then
							v:hit( h )
						end
					end

					return 1
				else
					return 0
				end
			elseif gulag.state == 1 then
				if has_alife_info( "agr_krot_dead" ) then
					return 2
				else
					return 1
				end
			else
				return 2
			end
		end
	end

	if type == "agr_road_patrol1" then
		return function()
			return 0
		end
	end

	if type == "agr_road_patrol2" then
		return function()
			return 0
		end
	end
--'--------------------------------------------------------------------------
--' AGROPROM Underground
--'--------------------------------------------------------------------------
	if type == "agr_u_soldiers" then
		return function()
			return 0
		end
	end

	if type == "agr_u_bandits" then
		return function()
			return 0
		end
	end

	return nil
end

--------------------------------------------------------------------------
-- Dynamic ltx
--------------------------------------------------------------------------
function load_ltx(type)
--' AGROPROM
	if type == "agr_road_patrol1" then
		return load_ltx_agr_road_patrol1()
	end
	if type == "agr_road_patrol2" then
		return load_ltx_agr_road_patrol2()
	end

--' AGROPROM Underground
	if type == "agr_u_soldiers" then
		return load_ltx_agr_u_soldiers()
	end

	if type == "agr_u_bandits" then
		return load_ltx_agr_u_bandits()
	end
	return nil
end

--'--------------------------------------------------------------------------
--' AGROPROM
--'--------------------------------------------------------------------------
function load_ltx_agr_road_patrol1()
	local table_concat = table.concat
	local i, res = 0, ""
	local res_t

	for i = 1, 2 do
		res_t = {
			"[logic@agr_road_patrol1",
			i, "]\nactive = walker1@agr_road_patrol1",
			i, "\ninfo=info@about_rats\n",

			"[walker1@agr_road_patrol1",
			i, "]\nteam=aaa\npath_walk = walk_1_",
			i, "\npath_look = look_1_",
			i, "\ndanger=danger_condition@agr_road_patrol1\non_signal=end_1_",
			i, "|walker2@agr_road_patrol1",
			i, "\n[walker2@agr_road_patrol1",
			i, "]\nteam=bbb\npath_walk = walk_2_",
			i, "\npath_look = look_2_",
			i, "\ndanger=danger_condition@agr_road_patrol1\non_signal=end_2_",
			i, "|walker1@agr_road_patrol1", i, "\n" }
		res = res .. table_concat(res_t)
	end
	for i = 3, 4 do
		res_t = {
			"[logic@agr_road_patrol1",
			i, "]\nactive = walker@agr_road_patrol1",
			i, "\ninfo=info@about_rats\n[walker@agr_road_patrol1",
			i, "]\npath_walk = zastava2_stand",
			i, "\npath_look = zastava2_way_look_hide\ndanger=danger_condition@agr_road_patrol1\n" }
		res = res .. table_concat(res_t)
	end
	res_t = {
		"[logic@agr_road_patrol15]\nactive = walker@agr_road_patrol15\ninfo=info@about_rats\n",

		"[walker@agr_road_patrol15]\npath_walk = zastava2_stand5\npath_look = zastava2_way_look\ndanger=danger_condition@agr_road_patrol1\n",

		"[danger_condition@agr_road_patrol1]\ndanger_expiration_time = 6000\ndanger_inertion_time =  9000\n[info@about_rats]\nin = agr_pda_soldiers_rats\n" }
	res = res .. table_concat(res_t)

	return res
end

function load_ltx_agr_road_patrol2()
	local table_concat = table.concat
	local i, res = 0, ""
	local res_t

	for i = 1, 2 do
		res_t = {
			"[logic@agr_road_patrol2",
			i, "]\nactive = walker1@agr_road_patrol2",
			i, "\ninfo=info@about_rats\n[walker1@agr_road_patrol2",
			i, "]\nteam=aa\npath_walk = walk",
			i, "_1\npath_look = look",
			i, "_1\ndanger=danger_condition@agr_road_patrol2\non_signal=end",
			i, "_1|walker2@agr_road_patrol2",
			i, "\n[walker2@agr_road_patrol2",
			i, "]\nteam=bb\npath_walk = walk",
			i, "_2\npath_look = look",
			i, "_2\ndanger=danger_condition@agr_road_patrol2\non_signal=end",
			i, "_2|walker1@agr_road_patrol2",
			i, "\n" }
		res = res .. table_concat(res_t)
	end
	res = res .. "[danger_condition@agr_road_patrol2]\ndanger_expiration_time = 6000\ndanger_inertion_time =  9000\n[info@about_rats]\nin = agr_pda_soldiers_rats\n"
	return res
end

--'--------------------------------------------------------------------------
--' AGROPROM Underground
--'--------------------------------------------------------------------------
function load_ltx_agr_u_soldiers()
	local table_concat = table.concat
	local i, res = 0, ""
	local res_t

	for i = 1, 2 do
		res_t = {
			"[logic@agr_u_soldiers",
			i, "]\nactive = walker@agr_u_soldiers",
			i, "\ncombat_ignore = combat_ignore@agr_u_soldiers\n[walker@agr_u_soldiers",
			i, "]\npath_walk = walk",
			i, "\npath_look = look",
			i, "\ncombat_ignore_cond = {!fighting_actor} true \ndanger=danger_condition@agr_u_soldiers\n" }
		res = res .. table_concat(res_t)
	end
	for i = 3, 6 do
		res_t = {
			"[logic@agr_u_soldiers",
			i, "]\nactive = walker@agr_u_soldiers",
			i, "\ncombat_ignore = combat_ignore@agr_u_soldiers\n[walker@agr_u_soldiers",
			i, "]\npath_walk = walk",
			i, "\npath_look = look", i, "\ncombat_ignore_cond = {!fighting_actor} true \non_actor_in_zone = kat_soldier_trigger2 | walker2@agr_u_soldiers",
			i, "\ndanger=danger_condition@agr_u_soldiers\n[walker2@agr_u_soldiers",
			i, "]\npath_walk = walk",
			i, "\npath_look = look",
			i, "\ndanger=danger_condition@agr_u_soldiers\n" }
		res = res .. table_concat(res_t)
	end

	for i = 7, 8 do
		res_t = {
			"[logic@agr_u_soldiers",
			i, "]\nactive = walker@agr_u_soldiers",
			i, "\ncombat_ignore = combat_ignore@agr_u_soldiers\n[walker@agr_u_soldiers",
			i, "]\npath_walk = walk",
			i, "\npath_look = look",
			i, "\ncombat_ignore_cond = {!fighting_actor} true \non_actor_in_zone = kat_soldier_trigger3 | walker2@agr_u_soldiers",
			i, "\ndanger=danger_condition@agr_u_soldiers\n[walker2@agr_u_soldiers",
			i, "]\npath_walk = walk",
			i, "\npath_look = look",
			i, "\ndanger=danger_condition@agr_u_soldiers\n" }
		res = res .. table_concat(res_t)
	end

	res = res .. "[combat_ignore@agr_u_soldiers]\n[danger_condition@agr_u_soldiers]\ndanger_expiration_time = 60000\ndanger_inertion_time =  90000\n"
	return res
end


function load_ltx_agr_u_bandits()
	local table_concat = table.concat
	local i, res = 0, ""
	res_t = {
		"[logic@agr_u_bandits1]\nactive = walker@agr_u_bandits1\ncombat_ignore = combat_ignore@agr_u_bandits\n",

		"[walker@agr_u_bandits1]\npath_walk = walk1\npath_look = look1\n",

		"on_actor_in_zone = kat_bandit_trigger3 | walker2@agr_u_bandits1\ndanger=danger_condition@agr_u_bandits\n",

		"[walker2@agr_u_bandits1]\npath_walk = walk1\npath_look = look1\ndanger=danger_condition@agr_u_bandits\n" }
	res = res .. table_concat(res_t)
	for i = 2, 5 do
		res_t = {
			"[logic@agr_u_bandits",
			i, "]\nactive = walker@agr_u_bandits",
			i, "\ncombat_ignore = combat_ignore@agr_u_bandits\n[walker@agr_u_bandits",
			i, "]\npath_walk = walk",
			i, "\npath_look = look",
			i, "\non_actor_in_zone = kat_bandit_trigger3 | walker2@agr_u_bandits",
			i, "\ndanger=danger_condition@agr_u_bandits\n[walker2@agr_u_bandits",
			i, "]\npath_walk = walk",
			i, "\npath_look = look",
			i, "\ndanger=danger_condition@agr_u_bandits\n" }
		res = res .. table_concat(res_t)
	end

	res_t = {
		"[logic@agr_u_bandits6]\nactive = walker@agr_u_bandits6\ncombat_ignore = combat_ignore@agr_u_bandits\n",

		"[walker@agr_u_bandits6]\npath_walk = walk6\npath_look = look6\n",

		"on_actor_in_zone = kat_bandit_trigger4 | walker2@agr_u_bandits6\ndanger=danger_condition@agr_u_bandits\n",

		"[walker2@agr_u_bandits6]\npath_walk = walk6\npath_look = look6\ndanger=danger_condition@agr_u_bandits\n",

		"[logic@agr_u_bandits7]\nactive = walker@agr_u_bandits7\ncombat_ignore = combat_ignore@agr_u_bandits\n",

		"[walker@agr_u_bandits7]\npath_walk = walk7\npath_look = look7\ndanger=danger_condition@agr_u_bandits\n",

		"[combat_ignore@agr_u_bandits]\n[danger_condition@agr_u_bandits]\ndanger_expiration_time = 60000\ndanger_inertion_time =  90000\n" }
	res = res .. table_concat(res_t)
	return res
end

function checkStalker( npc_community, gulag_type )
--' AGROPROM
	if gulag_type == "agr_nii" or
			gulag_type == "agr_factory_assault" or
			gulag_type == "agr_road_patrol1" or
			gulag_type == "agr_road_patrol2" or
			gulag_type == "agr_factory_hold" then
		return npc_community == "military"
	end

	if gulag_type == "agr_factory_defence" then
		return npc_community == "stalker"
	end

--' AGROPROM Underground
	if gulag_type == "agr_u_soldiers" then
		return npc_community == "military"
	end
	if gulag_type == "agr_u_bandits" then
		return npc_community == "bandit"
	end

	return false
end

function checkMonster()
	return false
end
