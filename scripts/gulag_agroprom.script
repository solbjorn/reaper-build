--'--------------------------------------------------------------------------
--' AGROPROM and AGROPROM Underground combined
--'--------------------------------------------------------------------------

local table_concat = table.concat

function check_military(npc_community)
	return npc_community == "military"
end

local gulags = {
--'--------------------------------------------------------------------------
--' AGROPROM
--'--------------------------------------------------------------------------
	["agr_road_patrol1"] = {
		job = function(sj, gname, squad, groups)
			for i = 1, 5 do
				sj[#sj + 1] = {
					section = "logic@agr_road_patrol1"..i,
					squad = squad, group = groups[1],
					out_rest = "agr_patrol_1_space_restrictor"
				}
			end
		end,
		ltx = function()
			local i, res = 0, ""
			local res_t

			for i = 1, 2 do
				res_t = {
					"[logic@agr_road_patrol1",
					i, "]\nactive = walker1@agr_road_patrol1",
					i, "\ninfo=info@about_rats\n",

					"[walker1@agr_road_patrol1",
					i, "]\nteam=aaa\npath_walk = walk_1_",
					i, "\npath_look = look_1_",
					i, "\ndanger=danger_condition@agr_road_patrol1\non_signal=end_1_",
					i, "|walker2@agr_road_patrol1",
					i, "\n[walker2@agr_road_patrol1",
					i, "]\nteam=bbb\npath_walk = walk_2_",
					i, "\npath_look = look_2_",
					i, "\ndanger=danger_condition@agr_road_patrol1\non_signal=end_2_",
					i, "|walker1@agr_road_patrol1", i, "\n" }
				res = res .. table_concat(res_t)
			end
			for i = 3, 4 do
				res_t = {
					"[logic@agr_road_patrol1",
					i, "]\nactive = walker@agr_road_patrol1",
					i, "\ninfo=info@about_rats\n[walker@agr_road_patrol1",
					i, "]\npath_walk = zastava2_stand",
					i, "\npath_look = zastava2_way_look_hide\ndanger=danger_condition@agr_road_patrol1\n" }
				res = res .. table_concat(res_t)
			end
			res_t = {
				"[logic@agr_road_patrol15]\nactive = walker@agr_road_patrol15\ninfo=info@about_rats\n",

				"[walker@agr_road_patrol15]\npath_walk = zastava2_stand5\npath_look = zastava2_way_look\ndanger=danger_condition@agr_road_patrol1\n",

				"[danger_condition@agr_road_patrol1]\ndanger_expiration_time = 6000\ndanger_inertion_time =  9000\n[info@about_rats]\nin = agr_pda_soldiers_rats\n" }
			res = res .. table_concat(res_t)

			return res
		end,
		check = check_military
	},
	["agr_road_patrol2"] = {
		job = function(sj, gname, squad, groups)
			for i = 1, 2 do
				sj[#sj + 1] = {
					section = "logic@agr_road_patrol2"..i,
					squad = squad, group = groups[1]
				}
			end
		end,
		ltx = function()
			local i, res = 0, ""
			local res_t

			for i = 1, 2 do
				res_t = {
					"[logic@agr_road_patrol2",
					i, "]\nactive = walker1@agr_road_patrol2",
					i, "\ninfo=info@about_rats\n[walker1@agr_road_patrol2",
					i, "]\nteam=aa\npath_walk = walk",
					i, "_1\npath_look = look",
					i, "_1\ndanger=danger_condition@agr_road_patrol2\non_signal=end",
					i, "_1|walker2@agr_road_patrol2",
					i, "\n[walker2@agr_road_patrol2",
					i, "]\nteam=bb\npath_walk = walk",
					i, "_2\npath_look = look",
					i, "_2\ndanger=danger_condition@agr_road_patrol2\non_signal=end",
					i, "_2|walker1@agr_road_patrol2",
					i, "\n" }
				res = res .. table_concat(res_t)
			end
			res = res .. "[danger_condition@agr_road_patrol2]\ndanger_expiration_time = 6000\ndanger_inertion_time =  9000\n[info@about_rats]\nin = agr_pda_soldiers_rats\n"
			return res
		end,
		check = check_military
	},
	------------------ НИИ Агропром. База военных ------------------------------------------
	-- состояния: 0-день, 1-ночь, 2-пересменка, 3-тревога
	["agr_nii"] = {
		job = function(sj, gname, squad, groups)
			-- командир
			sj[#sj + 1] = {
				section = "logic@agr_nii_day_commander",
				position_threshold = 150,
				prior = 9,
				predicate = function(obj_info)
						return obj_info.name == "agr_nii_commander"
					    end,
				out_rest = "agr_nii_space_restrictor"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_night_commander",
				position_threshold = 150,
				prior = 9, state = {1,2},
				predicate = function(obj_info)
						return obj_info.name == "agr_nii_commander"
					    end,
				out_rest = "agr_nii_space_restrictor"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_night_commander",
				position_threshold = 150,
				prior = 1, state = {1,2},
				out_rest = "agr_nii_space_restrictor"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_alarm_commander",
				position_threshold = 150,
				prior = 9, state = {3},
				predicate = function(obj_info)
						return obj_info.name == "agr_nii_commander"
					    end,
				out_rest = "agr_nii_sr_building"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_alarm_commander",
				position_threshold = 150,
				prior = 1, state = {3}
			}
			-- пост на северных воротах
			sj[#sj + 1] = {
				section = "logic@agr_nii_north_gate_walker1",
				position_threshold = 150,
				state = {0,1,2,3},
				in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_north_gate_walker2",
				position_threshold = 150,
				state = {0,1,2,3},
				in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_north_gate_walker3",
				position_threshold = 150,
				state = {0,1,2,3},
				in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
			}
			-- пост на восточных воротах
			sj[#sj + 1] = {
				section = "logic@agr_nii_east_gate_walker1",
				position_threshold = 150,
				state = {0,1,2,3},
				in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_east_gate_walker2",
				position_threshold = 150,
				state = {0,1,2,3},
				in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
			}
			-- 1-й этаж основного здания
			sj[#sj + 1] = {
				section = "logic@agr_nii_floor1_day_walker1",
				position_threshold = 150,
				prior = 3,
				out_rest = "agr_nii_sr_building"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_floor1_alarm_walker1",
				position_threshold = 150,
				prior = 3, state = {3},
				out_rest = "agr_nii_sr_building"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_floor1_day_walker2",
				position_threshold = 150,
				prior = 3, state = {0,1,3},
				out_rest = "agr_nii_sr_building"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_floor1_alarm_walker2",
				position_threshold = 150,
				prior = 3, state = {3},
				out_rest = "agr_nii_sr_building"
			}
			-- 2-й этаж основного здания
			sj[#sj + 1] = {
				section = "logic@agr_nii_floor2_day_walker1",
				position_threshold = 150,
				prior = 3,
				out_rest = "agr_nii_sr_building"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_floor2_alarm_walker1",
				position_threshold = 150,
				prior = 3, state = {3},
				out_rest = "agr_nii_sr_building"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_floor2_day_walker2",
				position_threshold = 150,
				prior = 3, state = {0,3},
				out_rest = "agr_nii_sr_building"
			}
			-- 3-й этаж основного здания
			sj[#sj + 1] = {
				section = "logic@agr_nii_floor3_walker1",
				position_threshold = 150,
				prior = 4, state = {0,1,3},
				out_rest = "agr_nii_3_floor"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_floor3_walker2",
				position_threshold = 150,
				prior = 4, state = {0,1,3},
				out_rest = "agr_nii_3_floor"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_floor3_walker3",
				position_threshold = 150,
				prior = 4, state = {0,1},
				out_rest = "agr_nii_3_floor"
			}
			-- дневные патрули
			sj[#sj + 1] = {
				section = "logic@agr_nii_day_patrol_walker1",
				position_threshold = 150,
				prior = 2,
				in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_day_patrol_walker2",
				position_threshold = 150,
				prior = 2,
				in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_day_patrol_walker3",
				position_threshold = 150,
				prior = 2,
				in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_day_patrol_walker4",
				position_threshold = 150,
				prior = 2,
				in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
			}
			sj[#sj + 1] = {
				section = "logic@agr_nii_day_patrol_walker5",
				position_threshold = 150,
				prior = 2,
				in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
			}
			-- патрули в тревоге
			for i = 1, 5 do
				sj[#sj + 1] = {
					section = "logic@agr_nii_alarm_patrol_walker"..i, position_threshold = 150,
					prior = 4, state = {3},
					in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
				}
			end
			-- дневные отдыхающие
			for i = 1, 2 do
				sj[#sj + 1] = {
					section = "logic@agr_nii_rest_walker"..i, position_threshold = 150,
					prior = 0,
					in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
				}
			end
			-- ночные отдыхающие
			for i = 1, 11 do
				sj[#sj + 1] = {
					section = "logic@agr_nii_sleeper"..i, position_threshold = 150,
					prior = 0, state = {1,2},
					in_rest = "agr_nii_sr_building", out_rest = "agr_nii_space_restrictor"
				}
			end
		end,
		state = function(gulag)
			local actor = Actor
			if not actor then
				return gulag.state
			end

			local be
			local alarm = false

			if has_alife_info( "agr_nii_sniper_alarm" ) then
				alarm = true
			else
				for k, v in pairs(gulag.Object) do
					if v ~= true and v:best_enemy() ~= nil and v:best_enemy():id() == 0 then
						alarm = true
						break
					end
				end
			end

			if alarm then
				actor:give_info_portion( "agr_nii_alarm" )
				return 3
			else
				actor:disable_info_portion( "agr_nii_alarm" )
			end

			if level.get_time_hours() >= 6 and level.get_time_hours() < 21 then
				return 0  -- день
			elseif level.get_time_hours() >= 23 then
				return 2  -- ночь c пересменкой
			else
				return 1  -- ночь
			end
		end,
		check = check_military
	},
	------------------ Солдаты атакующие группу Крота ------------------------------------------
	["agr_factory_assault"] = {
		job = function(sj, gname, squad, groups)
			-- идут к обороняющимся
			sj[#sj + 1] = {
				section = "logic@agr_factory_assault_walker1",
				position_threshold = 150,
				prior = 0,
				squad = squad, group = groups[1],
				predicate = function(obj_info)
						return obj_info.name == "agr_factory_assault_soldier1"
					    end
			}
			sj[#sj + 1] = {
				section = "logic@agr_factory_assault_walker2",
				position_threshold = 150,
				prior = 0,
				squad = squad, group = groups[1],
				predicate = function(obj_info)
						return obj_info.name == "agr_factory_assault_soldier2"
					    end
			}
			sj[#sj + 1] = {
				section = "logic@agr_factory_assault_walker3",
				position_threshold = 150,
				prior = 0,
				squad = squad, group = groups[1],
				predicate = function(obj_info)
						return obj_info.name == "agr_factory_assault_soldier3"
					    end
			}
			sj[#sj + 1] = {
				section = "logic@agr_factory_assault_walker4",
				position_threshold = 150,
				prior = 0,
				squad = squad, group = groups[1],
				predicate = function(obj_info)
						return obj_info.name == "agr_factory_assault_soldier4"
					    end
			}
			sj[#sj + 1] = {
				section = "logic@agr_factory_assault_walker5",
				position_threshold = 150,
				prior = 0,
				squad = squad, group = groups[1],
				predicate = function(obj_info)
						return obj_info.name == "agr_factory_assault_soldier5"
					    end
			}
			sj[#sj + 1] = {
				section = "logic@agr_factory_assault_walker6",
				position_threshold = 150,
				prior = 0,
				squad = squad, group = groups[1],
				predicate = function(obj_info)
						return obj_info.name == "agr_factory_assault_soldier6"
					    end
			}
			sj[#sj + 1] = {
				section = "logic@agr_factory_assault_walker7",
				position_threshold = 150,
				prior = 0,
				squad = squad, group = groups[1],
				predicate = function(obj_info)
						return obj_info.name == "agr_factory_assault_soldier7"
					    end
			}
			sj[#sj + 1] = {
				section = "logic@agr_factory_assault_walker8",
				position_threshold = 150,
				prior = 0,
				squad = squad, group = groups[1],
				predicate = function(obj_info)
						return obj_info.name == "agr_factory_assault_soldier8"
					    end
			}
			-- сражаются на улице
			for i = 1, 8 do
				sj[#sj + 1] = {
					section = "logic@agr_factory_assault_skirmish_walker"..i, position_threshold = 150,
					prior = 0, state = {1},
					squad = squad, group = groups[1],
					out_rest = "agr_factory_skirmish"
				}
			end
			-- идут к Кроту
			for i = 1, 8 do
				sj[#sj + 1] = {
					section = "logic@agr_factory_assault_bld_walker"..i, position_threshold = 150,
					prior = 0, state = {2},
					squad = squad, group = groups[1],
					out_rest = "agr_factory_hold_restrictor"
				}
			end
		end,
		state = function(gulag)
			local actor = Actor
			if not actor then
				return gulag.state
			end

			if gulag.state == 0 then
				if has_alife_info( "agr_factory_assault_skirmish" ) then
					return 1
				else
					return 0
				end
			elseif gulag.state == 1 then
				if xr_gulag.getGulagPopulation( "agr_factory_defence" ) == 0 then
					if not has_alife_info( "agr_help_stalkers_done" ) then
						actor:give_info_portion( "agr_help_stalkers_done" )
						actor:give_info_portion( "agr_help_stalkers_defence_dead" )
					end
				end

				if has_alife_info( "agr_krot_skirmish_start" ) and
				   has_alife_info( "agr_help_stalkers_done" ) or
				   xr_conditions.gulag_empty(nil, nil, {"agr_factory_defence"})
				then
					return 2
				else
					return 1
				end
			else
				return 2
			end
		end,
		check = check_military
	},
	------------------ Сталкеры из группы Крота ------------------------------------------
	["agr_factory_defence"] = {
		job = function(sj, gname, squad, groups)
			-- ждут военных
			for i = 1, 6 do
				sj[#sj + 1] = {
					section = "logic@agr_factory_defence_walker"..i, position_threshold = 150,
					prior = 0,
					squad = squad, group = groups[1],
					out_rest = "agr_factory_skirmish_defence"
				}
			end
			-- отстреливаются от военных
			for i = 1, 6 do
				sj[#sj + 1] = {
					section = "logic@agr_factory_defence_skirmish_walker"..i, position_threshold = 150,
					prior = 0, state = {1},
					squad = squad, group = groups[1],
					out_rest = "agr_factory_skirmish_defence"
				}
			end
			-- бегут помогать Кроту
			for i = 1, 9 do
				sj[#sj + 1] = {
					section = "logic@agr_factory_defence_krot_walker"..i, position_threshold = 150,
					prior = 0, state = {2},
					squad = squad, group = groups[1]
				}
			end
			-- бегут по путям к колодцу и стоят там
			for i = 1, 9 do
				sj[#sj + 1] = {
					section = "logic@agr_factory_defence_to_well_walker"..i, position_threshold = 150,
					prior = 0, state = {3},
					squad = squad, group = groups[1]
				}
			end

			------ Сталкеры ждут начала атаки ---------------------------------------------------------------
			for i = 1, 3 do
				sj[#sj + 1] = {
					section = "logic@agr_factory_defence_waiting_stalker"..i, position_threshold = 150,
					prior = 0, state = {0,1},
					squad = squad, group = groups[1]
				}
			end
		end,
		state = function(gulag)
			if not Actor then
				return gulag.state
			end

			if gulag.state == 0 then
				if has_alife_info( "agr_factory_assault_skirmish" ) then
					return 1
				else
					return 0
				end

			elseif gulag.state == 1 then
				if xr_conditions.gulag_population_active( Actor, nil, {"agr_factory_assault"} ) > 0 then
					return 1
				else
					give_info("agr_help_stalkers_done")
					give_info("agr_help_stalkers_assault_dead")
					return 2
				end
			else
				if has_alife_info( "agr_krot_go_to_well" ) then
					return 3
				else
					return 2
				end
			end
		end,
		check = function(npc_community)
			return npc_community == "stalker"
		end
	},
	------------------ Солдаты удерживают Крота ------------------------------------------
	["agr_factory_hold"] = {
		job = function(sj, gname, squad, groups)
			-- стреляют по точкам
			for i = 1, 3 do
				sj[#sj + 1] = {
					section = "logic@agr_factory_hold_fake_walker"..i, position_threshold = 150,
					prior = 0,
					squad = squad, group = groups[1],
					out_rest = "agr_factory_hold_restrictor"
				}
			end
			-- срываются в универсальный бой под рестриктором
			for i = 1, 3 do
				sj[#sj + 1] = {
					section = "logic@agr_factory_hold_walker"..i, position_threshold = 150,
					prior = 0, state = {1},
					squad = squad, group = groups[1],
					out_rest = "agr_factory_hold_restrictor"
				}
			end
			-- Убили Крота. Ходят по путям без рестрикторов
			for i = 1, 3 do
				sj[#sj + 1] = {
					section = "logic@agr_factory_hold_walker"..i, position_threshold = 150,
					prior = 0, state = {2},
					squad = squad, group = groups[1]
				}
			end
		end,
		state = function(gulag)
			local actor = Actor
			if not actor then
				return gulag.state
			end

			if gulag.state == 0 then
				if has_alife_info( "agr_krot_dead" ) then
					return 2
				elseif has_alife_info( "agr_krot_skirmish_start" ) then
					-- раздать всем хиты, чтоб не ходили спокойно
					local h     = hit()
					h.power     = 0.01
					h.direction = vector():set( 1, 0, 0 )
					h.draftsman = actor
					h.impulse   = 1
					h.type      = hit.wound

					for k, v in pairs(gulag.Object) do
						if v ~= true then
							v:hit( h )
						end
					end

					return 1
				else
					return 0
				end
			elseif gulag.state == 1 then
				if has_alife_info( "agr_krot_dead" ) then
					return 2
				else
					return 1
				end
			else
				return 2
			end
		end,
		check = check_military
	},
--'--------------------------------------------------------------------------
--' AGROPROM Underground
--'--------------------------------------------------------------------------
	["agr_u_soldiers"] = {
		job = function(sj, gname, squad, groups)
			for i = 1, 8 do
				sj[#sj + 1] = {
					section = "logic@agr_u_soldiers"..i,
					squad = squad, group = groups[1]
				}
			end
		end,
		ltx = function()
			local i, res = 0, ""
			local res_t

			for i = 1, 2 do
				res_t = {
					"[logic@agr_u_soldiers",
					i, "]\nactive = walker@agr_u_soldiers",
					i, "\ncombat_ignore = combat_ignore@agr_u_soldiers\n[walker@agr_u_soldiers",
					i, "]\npath_walk = walk",
					i, "\npath_look = look",
					i, "\ncombat_ignore_cond = {!fighting_actor} true \ndanger=danger_condition@agr_u_soldiers\n" }
				res = res .. table_concat(res_t)
			end
			for i = 3, 6 do
				res_t = {
					"[logic@agr_u_soldiers",
					i, "]\nactive = walker@agr_u_soldiers",
					i, "\ncombat_ignore = combat_ignore@agr_u_soldiers\n[walker@agr_u_soldiers",
					i, "]\npath_walk = walk",
					i, "\npath_look = look", i, "\ncombat_ignore_cond = {!fighting_actor} true \non_actor_in_zone = kat_soldier_trigger2 | walker2@agr_u_soldiers",
					i, "\ndanger=danger_condition@agr_u_soldiers\n[walker2@agr_u_soldiers",
					i, "]\npath_walk = walk",
					i, "\npath_look = look",
					i, "\ndanger=danger_condition@agr_u_soldiers\n" }
				res = res .. table_concat(res_t)
			end

			for i = 7, 8 do
				res_t = {
					"[logic@agr_u_soldiers",
					i, "]\nactive = walker@agr_u_soldiers",
					i, "\ncombat_ignore = combat_ignore@agr_u_soldiers\n[walker@agr_u_soldiers",
					i, "]\npath_walk = walk",
					i, "\npath_look = look",
					i, "\ncombat_ignore_cond = {!fighting_actor} true \non_actor_in_zone = kat_soldier_trigger3 | walker2@agr_u_soldiers",
					i, "\ndanger=danger_condition@agr_u_soldiers\n[walker2@agr_u_soldiers",
					i, "]\npath_walk = walk",
					i, "\npath_look = look",
					i, "\ndanger=danger_condition@agr_u_soldiers\n" }
				res = res .. table_concat(res_t)
			end

			res = res .. "[combat_ignore@agr_u_soldiers]\n[danger_condition@agr_u_soldiers]\ndanger_expiration_time = 60000\ndanger_inertion_time =  90000\n"
			return res
		end,
		check = check_military
	},
	["agr_u_bandits"] = {
		job = function(sj, gname, squad, groups)
			for i = 1, 7 do
				sj[#sj + 1] = {
					section = "logic@agr_u_bandits"..i,
					squad = squad, group = groups[1]
				}
			end
		end,
		ltx = function()
			local i, res = 0, ""
			res_t = {
				"[logic@agr_u_bandits1]\nactive = walker@agr_u_bandits1\ncombat_ignore = combat_ignore@agr_u_bandits\n",

				"[walker@agr_u_bandits1]\npath_walk = walk1\npath_look = look1\n",

				"on_actor_in_zone = kat_bandit_trigger3 | walker2@agr_u_bandits1\ndanger=danger_condition@agr_u_bandits\n",

				"[walker2@agr_u_bandits1]\npath_walk = walk1\npath_look = look1\ndanger=danger_condition@agr_u_bandits\n" }
			res = res .. table_concat(res_t)
			for i = 2, 5 do
				res_t = {
					"[logic@agr_u_bandits",
					i, "]\nactive = walker@agr_u_bandits",
					i, "\ncombat_ignore = combat_ignore@agr_u_bandits\n[walker@agr_u_bandits",
					i, "]\npath_walk = walk",
					i, "\npath_look = look",
					i, "\non_actor_in_zone = kat_bandit_trigger3 | walker2@agr_u_bandits",
					i, "\ndanger=danger_condition@agr_u_bandits\n[walker2@agr_u_bandits",
					i, "]\npath_walk = walk",
					i, "\npath_look = look",
					i, "\ndanger=danger_condition@agr_u_bandits\n" }
				res = res .. table_concat(res_t)
			end

			res_t = {
				"[logic@agr_u_bandits6]\nactive = walker@agr_u_bandits6\ncombat_ignore = combat_ignore@agr_u_bandits\n",

				"[walker@agr_u_bandits6]\npath_walk = walk6\npath_look = look6\n",

				"on_actor_in_zone = kat_bandit_trigger4 | walker2@agr_u_bandits6\ndanger=danger_condition@agr_u_bandits\n",

				"[walker2@agr_u_bandits6]\npath_walk = walk6\npath_look = look6\ndanger=danger_condition@agr_u_bandits\n",

				"[logic@agr_u_bandits7]\nactive = walker@agr_u_bandits7\ncombat_ignore = combat_ignore@agr_u_bandits\n",

				"[walker@agr_u_bandits7]\npath_walk = walk7\npath_look = look7\ndanger=danger_condition@agr_u_bandits\n",

				"[combat_ignore@agr_u_bandits]\n[danger_condition@agr_u_bandits]\ndanger_expiration_time = 60000\ndanger_inertion_time =  90000\n" }
			res = res .. table_concat(res_t)
			return res
		end,
		check = function(npc_community)
			return npc_community == "bandit"
		end
	}
}

function get_gulag(gulag_type)
	return gulags[gulag_type]
end
