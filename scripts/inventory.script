-- Инвентарь ГГ
-- Refactored by RanHum
class "CInventory"

function CInventory:__init()
	self.sack = {}				-- Инвентарь ГГ
	self.belt = { }
end

-- Имеем ли предметы?
function CInventory:has(sect, count)
	return (self.sack[sect] or 0) >= (count or 1)
end

-- Получаем предметы
function CInventory:got(sect, count)
	if not count then count = 1 end

	for i = 1, count do
		create(sect,xyz(0,0,0),0,0,0)
	end
	news_manager.relocate_item("in", sect, count)
end

-- Теряем предметы
function CInventory:lost(sect, count)
	if not count then count = 1 end

	local cnt = 0
	Actor:iterate_inventory(function(dummy, item)
		if cnt < count and item:section() == sect then
			release(item)
			cnt = cnt + 1
		end
	end)
	if cnt > 0 then
		news_manager.relocate_item("out", sect, cnt)
	end
end

-- Передаем один предмет
function CInventory:transfer(victim, sect, type)
	if type == "in" then
		victim:transfer_item(victim:object(sect), Actor)
	elseif type == "out" then
		Actor:transfer_item(Actor:object(sect), victim)
	end
	news_manager.relocate_item(type, sect)
end

-- Калбек на поднятие предмета
function CInventory:on_item_take(item)
	table.add(self.sack, item:section())
	restriction_stock.restriction_of_stock(item, 0)
end

-- Калбек на потерю предмета
function CInventory:on_item_drop(item)
	table.sub(self.sack, item:section())
	restriction_stock.restriction_of_stock(item, 1)
end

-- Калбек на надевание на пояс
function CInventory:on_item_belt(item)
	table.add(self.belt, item:section())
end

-- Калбек на снятие с пояса
function CInventory:on_item_move_from_belt(item)
	table.sub(self.belt, item:section())
end

-- предмет на поясе
function CInventory:on_belt(sect)
	return self.belt[sect]
end
