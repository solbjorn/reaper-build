--Функции для квеста на огнемёт.
-- flamethrower.script

local math_random = math.random

local min_fuel = 150
local max_fuel = 300

function remove_spot()
 local sobj=alife():story_object(481516)
 if sobj then
  level.map_remove_object_spot(sobj.id,"green_location")
 end
 for a=1,65534 do
  local obj = alife():object(a)
  if obj then
   if obj:section_name()=="trubka" then
    level.map_remove_object_spot(obj.id,"red_location")
    break
   end
  end
 end
end

function good_bye(first_speaker, second_speaker)
	local actor, trader
	if Actor and 0 == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	dialogs.relocate_item_section(trader, "af_fireball", "out")
	dialogs.relocate_item_section(trader, "trubka", "out")
	dialogs.relocate_item_section(trader, "gorelka", "out")
	dialogs.relocate_item_section(trader, "manometr", "out")
	lost("vodka", 10)
	dialogs.relocate_item_section(trader, "flamethrower_bad", "out")
end

function have_10_vodka()
	return has("vodka", 10)
end

function give_flamethrower_worked(first_speaker, second_speaker)
	local actor, trader
	if Actor and 0 == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	dialogs.relocate_item_section(trader, "wpn_flame", "in")
	lost_money(5000)
	clear_parts(first_speaker, second_speaker)
	if actor then
		local flame = actor:object("wpn_flame")
		if flame ~= nil then
			flame:set_ammo_elapsed(max_fuel)
		end
	end
end

function clear_parts(first_speaker, second_speaker)
	local actor, trader
	if Actor and 0 == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local obj = trader:object("manometr")
	if obj ~= nil then
		alife():release(alife():object(obj:id()), true)
	end
	obj = trader:object("trubka")
	if obj ~= nil then
		alife():release(alife():object(obj:id()), true)
	end
	obj = trader:object("gorelka")
	if obj ~= nil then
		alife():release(alife():object(obj:id()), true)
	end
	obj = trader:object("flamethrower_bad")
	if obj ~= nil then
		alife():release(alife():object(obj:id()), true)
	end
	obj = trader:object("af_fireball")
	if obj ~= nil then
		alife():release(alife():object(obj:id()), true)
	end
end

function clear_fuel(first_speaker, second_speaker)
	local actor, trader
	if Actor and 0 == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	trader:iterate_inventory( function (dummy,item)
	if item:section() == "amk_ballon" or item:section() == "amk_kanistra" or item:section() == "wpn_flame" then
	  alife():release(alife():object(item:id()), true)
	end
	end, nil)
end

function spawn_parts()
	alife():create("manometr", vector():set(-146.01,6.04,-201.16), 91750, 621)
	alife():create("trubka", vector():set(-57.36,22.54,-120.73), 118492, 298)
	alife():create("gorelka", vector():set(-79.62,-10.69,39.95), 233164, 1595)
end

function set_metka()
 for a=1,65534 do
  local obj = alife():object(a)
  if obj then
   if obj:section_name()=="trubka" then
    amk.add_spot_on_map(obj.id,"red_location","Трубка")
    return
   end
  end
 end
end

function relocate_to_barman(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "gorelka", "in")
	lost_money(250)
end

function out_antirad(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "antirad", "out")
end

function transfer_deneg_blockpost(first_speaker, second_speaker)
	got_money(5000)
end

function give_flamethrower(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "flamethrower_bad", "in")
end

function have_a_flamethrower_bad(stalker, player)
    return stalker:object ("flamethrower_bad") ~= nil
end

function give_1000(first_speaker, second_speaker)
	got_money(1000)
end

function have_a_antirad(stalker, player)
    return stalker:object ("antirad") ~= nil
end

function out_flamethrower(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "flamethrower_bad", "out")
	got_money(2500)
end

function have_a_fire_kolobok()
    local actor = Actor
    if actor ~= nil and actor:object("af_fireball") ~= nil and actor:dont_has_info("flamethrower_quest_fireball") and actor:has_info("flamethrower_quest_start") then
		actor:give_info_portion("flamethrower_quest_fireball")
    end
end

function have_a_trubki()
    local actor = Actor
    if actor ~= nil and actor:object("trubka") ~= nil and actor:dont_has_info("flamethrower_quest_trubki") then
		actor:give_info_portion("flamethrower_quest_trubki")
	end
end

function have_a_manometr()
    local actor = Actor
    if actor ~= nil and actor:object("manometr") ~= nil and actor:dont_has_info("flamethrower_quest_manometr") then
		actor:give_info_portion("flamethrower_quest_manometr")
    end
end

function have_a_vodko()
    local actor = Actor
    if actor ~= nil and actor:has_info("flamethrower_quest_start")
    then
		if has("vodka", 10) then
            actor:give_info_portion("flamethrower_quest_vodka")
		else
            actor:disable_info_portion("flamethrower_quest_vodka")
		end
    end
end

function have_a_gorelka()
    local actor = Actor
    if actor ~= nil and actor:object("gorelka") ~= nil and actor:dont_has_info("flamethrower_quest_gorelka") then
		actor:give_info_portion("flamethrower_quest_gorelka")
    end
end

function have_a_gorelka2(stalker, player)
    return stalker:object ("gorelka") ~= nil
end

function have_a_manometr2(stalker, player)
    return stalker:object ("manometr") ~= nil
end

function have_a_trubka2(stalker, player)
    return stalker:object ("trubka") ~= nil
end

function have_a_af_fireball(stalker, player)
    return stalker:object ("af_fireball") ~= nil
end

function have_a_drink()
    local actor = Actor
    if actor ~= nil and actor:object("vodka") ~= nil then
		return true
	end
	return false
end

function have_a_fuel()
	return have_a_ballon() and have_a_kanistra()
end

function have_30000()
	if Actor and Actor:money() >= 30000 then
		return true
	else
		return false
	end
end

function have_2000()
	if Actor and Actor:money() >= 2000 then
		return true
	else
		return false
	end
end

function have_a_ballon()
    local actor = Actor
    if actor ~= nil and actor:object("amk_ballon") ~= nil then
		return true
	end
	return false
end

function have_a_kanistra()
    local actor = Actor
    if actor ~= nil and actor:object("amk_kanistra") ~= nil then
		return true
	end
	return false
end

function have_a_flamethrower()
    local actor = Actor
    if actor ~= nil and actor:object("wpn_flame") ~= nil then
		return true
	end
	return false
end

function metka_na_npc()
local obj = alife():create("gar_stalker_flame_quest23",vector():set(24.86,0.40,209.75),198510,359)
local params=amk.read_stalker_params(obj)
params.custom="[logic]\nactive=walker\n[walker]\npath_walk = garb_tambovski_path\npath_look = garb_tambovski_look\non_info= {+find_815} nil\ncombat_ignore_cond=always"
params.sid=481516
amk.write_stalker_params(params,obj)
amk.add_spot_on_map(obj.id,'green_location','Лёха Тамбовский')
end

function start_work(first_speaker, second_speaker)
	local gtime = game.minutes()
	amk.save_variable("flame_start", gtime)
	clear_parts(first_speaker, second_speaker)
end

function is_ready(first_speaker, second_speaker)
	local gtime = game.minutes()
	local ftime = amk.load_variable("flame_start", gtime)
	if (gtime - ftime) >= 60*24 then
		return true
	else
		return false
	end
end

function not_ready(first_speaker, second_speaker)
	local gtime = game.minutes()
	local ftime = amk.load_variable("flame_start", gtime)
	if (gtime - ftime) >= 60*24 then
		return false
	else
		return true
	end
end

function clear_ready(first_speaker, second_speaker)
	amk.del_variable("flame_start")
end

function start_reload(first_speaker, second_speaker)
	local actor, trader
	if Actor and 0 == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	lost_money(2000)
	dialogs.relocate_item_section(trader, "vodka", "out")
	dialogs.relocate_item_section(trader, "wpn_flame", "out")
	local gtime = game.minutes()
	amk.save_variable("flame_reload", gtime + 30)
	calc_reload(first_speaker, second_speaker)
	clear_flame(actor)
end

function start_find_and_reload(first_speaker, second_speaker)
	local actor, trader
	if Actor and 0 == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	lost_money(30000)
	dialogs.relocate_item_section(trader, "vodka", "out")
	dialogs.relocate_item_section(trader, "wpn_flame", "out")
	local gtime = game.minutes()
	amk.save_variable("flame_reload", gtime + math_random(12, 24) * 60)
	set_value("flame_reload_count", max_fuel)
	clear_flame(actor)
end

function is_reload_ready(first_speaker, second_speaker)
	local gtime = game.minutes()
	local ftime = amk.load_variable("flame_reload", 0)
	if ftime~=0 and gtime >= ftime then
		return true
	else
		return false
	end
end

function is_reload_not_ready(first_speaker, second_speaker)
	local gtime = game.minutes()
	local ftime = amk.load_variable("flame_reload", 0)
	if gtime <= ftime then
		return true
	else
		return false
	end
end

function is_reload_started(first_speaker, second_speaker)
	local ftime = amk.load_variable("flame_reload", -1)
	if ftime==-1 then
		return false
	else
		return true
	end
	end

function finish_reload(first_speaker, second_speaker)
	reload(first_speaker, second_speaker)
	clear_fuel(first_speaker, second_speaker)
	clear_reload(first_speaker, second_speaker)
end

function clear_reload(first_speaker, second_speaker)
	amk.del_variable("flame_reload")
	amk.del_variable("flame_reload_count")
end

function calc_reload(first_speaker, second_speaker)
	if have_a_ballon() and have_a_kanistra() then
		if not has("amk_kanistra", 2) or not has("amk_ballon", 2) then
			lost("amk_kanistra")
			lost("amk_ballon")
--rpm в конфиге 300, значит полминуты - 150, а минута 300.
			amk.save_variable("flame_reload_count", min_fuel)
		else
			lost("amk_kanistra", 2)
			lost("amk_ballon", 2)
			amk.save_variable("flame_reload_count", max_fuel)
		end
	end
end

function reload(first_speaker, second_speaker)
	local actor, trader
	if Actor and 0 == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	dialogs.relocate_item_section(trader, "wpn_flame", "in")
	if actor then
		local flame = actor:object("wpn_flame")
		if flame ~= nil then
			local ammo = amk.load_variable("flame_reload_count", 0)
			flame:set_ammo_elapsed(ammo)
		end
	end
end

function clear_flame(person)
	if person and person:object("wpn_flame") then
		alife():release(alife():object(person:object("wpn_flame"):id()), true)
	end
end

function set_ammo(first_speaker, second_speaker)
	local actor, trader
	if Actor and 0 == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	if actor then
		local flame = actor:object("wpn_flame")
		if flame ~= nil then
			local ammo = amk.load_variable("flame_reload_count", 0)
			flame:set_ammo_elapsed(ammo)
		end
	end
	amk.del_variable("flame_reload_count")
end

-------------------------------------------------------------------------------

function on_item()
	have_a_fire_kolobok()
	have_a_trubki()
	have_a_manometr()
	have_a_vodko()
	have_a_gorelka()
end
