local comms = {
	monolith	= true,
	military	= true,
	killer		= true,
	ecolog		= true,
	dolg		= true,
	freedom		= true,
	bandit		= true,
	green		= true,
	sniper		= true,
	trader		= true,
	zombied		= true
}
for k, v in pairs(comms) do
	comms[k] = k
end

local tech = table.tohash({ clsid.car_s, clsid.script_heli })

function getNpcType(npc)
	if not npc then return nil, nil end

	if npc:is_stalker() or npc:is_trader() then
		local community = comms[npc:character_community()] or "neutral"
		local rank = ranks.get_obj_rank_name(npc)
		return "stalkerkills", community.."_"..rank
	elseif npc:is_monster() then
		return "monsterkills", npc:section()
	else
		if not tech[npc:clsid()] then 
			abort("Statistics ERROR: cannot find entry for [%s]", npc:name())
			return nil, nil
		end

		return "techkills", npc:section()
	end
end

function addKillCount(npc)
	local props, sect = getNpcType(npc)
	if props and sect then
		if translate(sect) == sect then
			abort("Statistics entry " .. sect .. " for " .. npc:name() ..
			      " is not translated")
			return
		end

		actor_stats.add_points(props, sect, 1, 1)
		Actor:set_character_rank(Actor:character_rank() + 1)
	end
end
