local comms = {
	monolith	= true,
	military	= true,
	killer		= true,
	ecolog		= true,
	dolg		= true,
	freedom		= true,
	bandit		= true,
	green		= true,
	sniper		= true,
	trader		= true,
	zombied		= true
}
for k, v in pairs(comms) do
	comms[k] = k
end

local tech_vis = { "btr", "kamaz", "niva", "raf", "tr13", "uaz", "zaz" }

function get_tech_sect(npc)
	if not (npc:is_car() or npc:is_helicopter()) then return nil end

	local sect = npc:section()
	if sect ~= "car_base" and sect ~= "m_car" then
		return sect
	end

	local vis = npc:get_visual_name()
	for i, key in ipairs(tech_vis) do
		if string.find(vis, key) then
			return "vehicle_" .. key
		end
	end

	return nil
end

function getNpcType(npc)
	if not npc then return nil, nil end

	if npc:is_stalker() or npc:is_trader() then
		local community = comms[npc:character_community()] or "neutral"
		local rank = ranks.get_obj_rank_name(npc)
		return "stalkerkills", community.."_"..rank
	elseif npc:is_monster() then
		return "monsterkills", npc:section()
	else
		local sect = get_tech_sect(npc)
		if not sect then
			abort("Statistics ERROR: cannot find entry for [%s]", npc:name())
			return nil, nil
		end

		return "techkills", sect
	end
end

function addKillCount(npc)
	local props, sect = getNpcType(npc)
	if props and sect then
		if translate(sect) == sect then
			abort("Statistics entry " .. sect .. " for " .. npc:name() ..
			      " is not translated")
			return
		end

		actor_stats.add_points(props, sect, 1, 1)
		Actor:set_character_rank(Actor:character_rank() + 1)
	end
end
