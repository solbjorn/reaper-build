local day_night = {
	["af_electra_flash"]		= true,
	["af_electra_moonlight"]	= true,
	["af_electra_sparkler"]		= true,
	["af_night_star"]		= true,
	["af_gold_fish"]		= true,
	["af_soul"]			= true,
	["af_dummy_pellicle"]		= true
}

class "se_artefact"	(cse_alife_item_artefact)

function se_artefact:__init (section) super (section)
	self.is_day_night = day_night[section] or false
	self.already_taken = false
end
--------------------
function se_artefact:can_switch_offline ()
     return cse_alife_item_artefact.can_switch_offline (self)
end
--------------------
function se_artefact:can_switch_online ()
    if self.is_day_night == false then
       return cse_alife_item_artefact.can_switch_online (self)
    end

    -- обработаем ситуацию, когда актер дал дуба или вообще отсутствует
    if Actor == nil or Actor:alive () == false then
       return self.online  --просто вернем текущее состояние.
    end

    --printf ("CAN_SWITCH_ONLINE called")

    -- если есть родитель, то ничего не ломаем.
    if self.parent_id ~= 65535 then
       return true
    end

    if self.online == true then --обработаем ситуацию, когда артефакт в онлайне
       --если ночь (или актера нет или он дал дуба, то мы в онлайне и остаемся
		local hours = level.get_time_hours()
		if hours >= 0 and hours < 5 then
			return true
		end

       if not amk_offline_alife.sobj_is_far(self, 50) then
          return true  --если актер слишком близко, то оставляем все как есть
       end
       return false -- актер далеко - в оффлайн.
    else --обработаем ситуацию, когда арефакт в оффлайне
		local hours = level.get_time_hours()
		if not (hours >= 0 and hours < 5) then --если день, то ничего не делаем
			return false
		end

       if not amk_offline_alife.sobj_is_far(self, 50) then
          return false  --если актер слишком близко, то оставляем все как есть
       end
       return true -- актер далеко - в онлайн.
    end
end
--------------------
function se_artefact:STATE_Write(packet)
    cse_alife_item_artefact.STATE_Write(self, packet)

	packet:w_bool(self.already_taken)
end
--------------------
function se_artefact:STATE_Read(packet, size)
    cse_alife_item_artefact.STATE_Read(self, packet, size)

    if packet:r_eof() then
      return
    end

	self.already_taken = packet:r_bool()
end
--------------------
